// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bank_svc.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	bank_svc.proto

It has these top-level messages:
	HeartBeatReq
	HeartBeatRsp
	E2EChangeAcctMoneyReq
	E2EChangeAcctMoneyRsp
	E2EOfflineChangeAcctMoneyReq
	E2EOfflineChangeAcctMoneyRsp
	E2EChangeOneSideAccountReq
	E2EChangeOneSideAccountRsp
	E2EChangeCommisionMoneyReq
	E2EChangeCommisionMoneyRsp
	E2EChangePaybackMoneyReq
	E2EChangePaybackMoneyRsp
	E2EQueryFloatRevenuesReq
	E2EQueryFloatRevenuesRsp
	E2EInOutMoneyReq
	E2EInOutMoneyRsp
	E2EAttachAcctReq
	E2EAttachAcctRsp
	E2EDetachAcctReq
	E2EDetachAcctRsp
	E2EUpdateUserInfoReq
	E2EUpdateUserInfoRsp
	E2EQueryMoneyReq
	E2EQueryMoneyRsp
	E2EQuerySignStatusReq
	E2EQuerySignStatusRsp
	E2EFinalFeeReq
	E2EFinalFeeRsp
	E2EBruteDeAttachReq
	E2EBruteDeAttachRsp
	E2EQueryBankMoneyReq
	E2EQueryBankMoneyRsp
	E2EQueryFinalFeeReq
	E2EQueryFinalFeeRsp
	E2ESettmentReq
	E2ESettmentRsp
	E2ESettmentResultReq
	E2ESettmentResultRsp
	E2ETransferReq
	E2ETransferRsp
	E2EUpdateBankConfReq
	E2EUpdateBankConfRsp
	E2EOneSideAccountAdjustReq
	E2EOneSideAccountAdjustRsp
	E2EOneSideAccountAuditReq
	E2EOneSideAccountAuditRsp
	E2EInterestSettlementReq
	E2EInterestSettlementRsp
	E2ECommissionCarryOverReq
	E2ECommissionCarryOverRsp
	E2EQueryPaybackMoneyReq
	E2EQueryPaybackMoneyRsp
	E2EPaybackMoneyReq
	E2EPaybackMoneyRsp
	E2EPaybackMoneyApplyReq
	E2EPaybackMoneyApplyRsp
	E2EPaybackMoneyReviewReq
	E2EPaybackMoneyReviewRsp
	E2EPaybackMoneyNoPassReq
	E2EPaybackMoneyNoPassRsp
	E2EClearingProcessLinkQueryReq
	E2EClearingProcessLinkQueryRsp
	E2EClearingProcessQueryReq
	E2EClearingProcessQueryRsp
	E2EClearSettleDataQueryReq
	E2EClearSettleDataQueryRsp
	E2EClearMultiDataQueryReq
	E2EClearMultiDataQueryRsp
	E2EClearCustomerDataQueryReq
	E2EClearCustomerDataQueryRsp
	E2EClearBrokerDataQueryReq
	E2EClearBrokerDataQueryRsp
	E2EBOCClearResultQueryReq
	E2EBOCClearResultQueryRsp
	E2EClearResultQueryReq
	E2EClearResultQueryRsp
	AdditionalInfo
	E2BSignInOutReq
	E2BSignInOutRsp
	E2BAttachAcctReq
	E2BAttachAcctRsp
	E2BDetachAcctReq
	E2BDetachAcctRsp
	E2BInMoneyReq
	E2BInMoneyRsp
	E2BOutMoneyReq
	E2BOutMoneyRsp
	E2BQueryBankMoneyReq
	E2BQueryBankMoneyRsp
	E2BAdjustMoneyReq
	E2BAdjustMoneyRsp
	E2BFileNotificationReq
	E2BFileNotificationRsp
	E2BUpdateUserInfoReq
	E2BUpdateUserInfoRsp
	E2BQuerySignStatusReq
	E2BQuerySignStatusRsp
	E2BCheckStartReq
	E2BCheckStartRsp
	E2BClearingStartReq
	E2BClearingStartRsp
	E2BVerifyCodeReq
	E2BVerifyCodeRsp
	B2EAttachAcctReq
	B2EAttachAcctRsp
	B2EDetachAcctReq
	B2EDetachAcctRsp
	B2EInMoneyReq
	B2EInMoneyRsp
	B2EOutMoneyReq
	B2EOutMoneyRsp
	B2EQueryMoneyReq
	B2EQueryMoneyRsp
	B2EAdjustMoneyReq
	B2EAdjustMoneyRsp
	B2EFileNotificationReq
	B2EFileNotificationRsp
	B2EUpdateUserInfoReq
	B2EUpdateUserInfoRsp
	B2EQueryserPasswordReq
	B2EQueryserPasswordRsp
	B2ECheckFileNotificationReq
	B2ECheckFileNotificationRsp
	B2EClearingFileNotificationReq
	B2EClearingFileNotificationRsp
	B2ESingInfoReq
	B2ESingInfoRsp
	B2EInOutNotifyReq
	B2EInOutNotifyRsp
	B2EOutMoneyAppReq
	B2EOutMoneyAppRsp
	E2BOutMoneyAppResultReq
	E2BOutMoneyAppResultRsp
	B2EQueryOutMoneySIDReq
	B2EQueryOutMoneySIDItem
	B2EQueryOutMoneySIDRsp
	B2EQueryUserSignInfoReq
	B2EQueryUserSignInfoRsp
	B2EPushUserInfoItem
	B2EPushUserInfoReq
	B2EPushUserInfoRsp
	B2EPushInOutInfoItem
	B2EPushInOutInfoReq
	B2EPushInOutInfoRsp
	SvrRegReq
	SvrRegRsp
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

// ////////////////////////////////////////////////////////////////////
// 心跳类
// ////////////////////////////////////////////////////////////////////
// 心跳请求
type HeartBeatReq struct {
	SID              *string `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *HeartBeatReq) Reset()                    { *m = HeartBeatReq{} }
func (m *HeartBeatReq) String() string            { return proto1.CompactTextString(m) }
func (*HeartBeatReq) ProtoMessage()               {}
func (*HeartBeatReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *HeartBeatReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

// 心跳回应
type HeartBeatRsp struct {
	SID              *string `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *HeartBeatRsp) Reset()                    { *m = HeartBeatRsp{} }
func (m *HeartBeatRsp) String() string            { return proto1.CompactTextString(m) }
func (*HeartBeatRsp) ProtoMessage()               {}
func (*HeartBeatRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *HeartBeatRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

// 交易系统内部 E2E
// ////////////////////////////////////////////////////////////////////
// 银行服务与资金管理模块交互
// ////////////////////////////////////////////////////////////////////
// 资金变更请求 0x07010001
type E2EChangeAcctMoneyReq struct {
	SID              *string  `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	UserId           *int32   `protobuf:"varint,2,req,name=UserId" json:"UserId,omitempty"`
	UserType         *int32   `protobuf:"varint,3,req,name=UserType" json:"UserType,omitempty"`
	LoginId          *int32   `protobuf:"varint,4,req,name=LoginId" json:"LoginId,omitempty"`
	AccountId        *int32   `protobuf:"varint,5,req,name=AccountId" json:"AccountId,omitempty"`
	OperateType      *int32   `protobuf:"varint,6,req,name=OperateType" json:"OperateType,omitempty"`
	Currency         *int32   `protobuf:"varint,7,req,name=Currency" json:"Currency,omitempty"`
	Amount           *float64 `protobuf:"fixed64,8,req,name=Amount" json:"Amount,omitempty"`
	Fid              *int64   `protobuf:"varint,9,req,name=fid" json:"fid,omitempty"`
	OperDate         *int64   `protobuf:"varint,10,req,name=OperDate" json:"OperDate,omitempty"`
	Commission       *float64 `protobuf:"fixed64,11,req,name=Commission" json:"Commission,omitempty"`
	Operateflag      *int32   `protobuf:"varint,12,opt,name=operateflag,def=0" json:"operateflag,omitempty"`
	Carryover        *float64 `protobuf:"fixed64,13,req,name=carryover" json:"carryover,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *E2EChangeAcctMoneyReq) Reset()                    { *m = E2EChangeAcctMoneyReq{} }
func (m *E2EChangeAcctMoneyReq) String() string            { return proto1.CompactTextString(m) }
func (*E2EChangeAcctMoneyReq) ProtoMessage()               {}
func (*E2EChangeAcctMoneyReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

const Default_E2EChangeAcctMoneyReq_Operateflag int32 = 0

func (m *E2EChangeAcctMoneyReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EChangeAcctMoneyReq) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EChangeAcctMoneyReq) GetUserType() int32 {
	if m != nil && m.UserType != nil {
		return *m.UserType
	}
	return 0
}

func (m *E2EChangeAcctMoneyReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EChangeAcctMoneyReq) GetAccountId() int32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *E2EChangeAcctMoneyReq) GetOperateType() int32 {
	if m != nil && m.OperateType != nil {
		return *m.OperateType
	}
	return 0
}

func (m *E2EChangeAcctMoneyReq) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

func (m *E2EChangeAcctMoneyReq) GetAmount() float64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *E2EChangeAcctMoneyReq) GetFid() int64 {
	if m != nil && m.Fid != nil {
		return *m.Fid
	}
	return 0
}

func (m *E2EChangeAcctMoneyReq) GetOperDate() int64 {
	if m != nil && m.OperDate != nil {
		return *m.OperDate
	}
	return 0
}

func (m *E2EChangeAcctMoneyReq) GetCommission() float64 {
	if m != nil && m.Commission != nil {
		return *m.Commission
	}
	return 0
}

func (m *E2EChangeAcctMoneyReq) GetOperateflag() int32 {
	if m != nil && m.Operateflag != nil {
		return *m.Operateflag
	}
	return Default_E2EChangeAcctMoneyReq_Operateflag
}

func (m *E2EChangeAcctMoneyReq) GetCarryover() float64 {
	if m != nil && m.Carryover != nil {
		return *m.Carryover
	}
	return 0
}

// 资金变更回应 0x07010002
type E2EChangeAcctMoneyRsp struct {
	RetCode          *int32  `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID              *string `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,3,req,name=LoginId" json:"LoginId,omitempty"`
	UserId           *int32  `protobuf:"varint,4,req,name=UserId" json:"UserId,omitempty"`
	OperDate         *int64  `protobuf:"varint,5,req,name=OperDate" json:"OperDate,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EChangeAcctMoneyRsp) Reset()                    { *m = E2EChangeAcctMoneyRsp{} }
func (m *E2EChangeAcctMoneyRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2EChangeAcctMoneyRsp) ProtoMessage()               {}
func (*E2EChangeAcctMoneyRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *E2EChangeAcctMoneyRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2EChangeAcctMoneyRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EChangeAcctMoneyRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EChangeAcctMoneyRsp) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EChangeAcctMoneyRsp) GetOperDate() int64 {
	if m != nil && m.OperDate != nil {
		return *m.OperDate
	}
	return 0
}

// 线下出入金的资金变更请求  0x07040033
type E2EOfflineChangeAcctMoneyReq struct {
	Sid              *string  `protobuf:"bytes,1,req,name=sid" json:"sid,omitempty"`
	Userid           *int32   `protobuf:"varint,2,req,name=userid" json:"userid,omitempty"`
	Loginid          *int32   `protobuf:"varint,3,req,name=loginid" json:"loginid,omitempty"`
	Accountid        *int32   `protobuf:"varint,4,req,name=accountid" json:"accountid,omitempty"`
	Operatetype      *int32   `protobuf:"varint,5,req,name=operatetype" json:"operatetype,omitempty"`
	Amount           *float64 `protobuf:"fixed64,6,req,name=amount" json:"amount,omitempty"`
	Fid              *int64   `protobuf:"varint,7,req,name=fid" json:"fid,omitempty"`
	AppSeq           *int32   `protobuf:"varint,8,opt,name=AppSeq" json:"AppSeq,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *E2EOfflineChangeAcctMoneyReq) Reset()                    { *m = E2EOfflineChangeAcctMoneyReq{} }
func (m *E2EOfflineChangeAcctMoneyReq) String() string            { return proto1.CompactTextString(m) }
func (*E2EOfflineChangeAcctMoneyReq) ProtoMessage()               {}
func (*E2EOfflineChangeAcctMoneyReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *E2EOfflineChangeAcctMoneyReq) GetSid() string {
	if m != nil && m.Sid != nil {
		return *m.Sid
	}
	return ""
}

func (m *E2EOfflineChangeAcctMoneyReq) GetUserid() int32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

func (m *E2EOfflineChangeAcctMoneyReq) GetLoginid() int32 {
	if m != nil && m.Loginid != nil {
		return *m.Loginid
	}
	return 0
}

func (m *E2EOfflineChangeAcctMoneyReq) GetAccountid() int32 {
	if m != nil && m.Accountid != nil {
		return *m.Accountid
	}
	return 0
}

func (m *E2EOfflineChangeAcctMoneyReq) GetOperatetype() int32 {
	if m != nil && m.Operatetype != nil {
		return *m.Operatetype
	}
	return 0
}

func (m *E2EOfflineChangeAcctMoneyReq) GetAmount() float64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *E2EOfflineChangeAcctMoneyReq) GetFid() int64 {
	if m != nil && m.Fid != nil {
		return *m.Fid
	}
	return 0
}

func (m *E2EOfflineChangeAcctMoneyReq) GetAppSeq() int32 {
	if m != nil && m.AppSeq != nil {
		return *m.AppSeq
	}
	return 0
}

// 线下出入金的资金变更应答  0x07040034
type E2EOfflineChangeAcctMoneyRsp struct {
	Retcode          *int32  `protobuf:"varint,1,req,name=retcode" json:"retcode,omitempty"`
	Sid              *string `protobuf:"bytes,2,req,name=sid" json:"sid,omitempty"`
	Loginid          *int32  `protobuf:"varint,3,req,name=loginid" json:"loginid,omitempty"`
	Userid           *int32  `protobuf:"varint,4,req,name=userid" json:"userid,omitempty"`
	Operdate         *int64  `protobuf:"varint,5,req,name=operdate" json:"operdate,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EOfflineChangeAcctMoneyRsp) Reset()                    { *m = E2EOfflineChangeAcctMoneyRsp{} }
func (m *E2EOfflineChangeAcctMoneyRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2EOfflineChangeAcctMoneyRsp) ProtoMessage()               {}
func (*E2EOfflineChangeAcctMoneyRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *E2EOfflineChangeAcctMoneyRsp) GetRetcode() int32 {
	if m != nil && m.Retcode != nil {
		return *m.Retcode
	}
	return 0
}

func (m *E2EOfflineChangeAcctMoneyRsp) GetSid() string {
	if m != nil && m.Sid != nil {
		return *m.Sid
	}
	return ""
}

func (m *E2EOfflineChangeAcctMoneyRsp) GetLoginid() int32 {
	if m != nil && m.Loginid != nil {
		return *m.Loginid
	}
	return 0
}

func (m *E2EOfflineChangeAcctMoneyRsp) GetUserid() int32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

func (m *E2EOfflineChangeAcctMoneyRsp) GetOperdate() int64 {
	if m != nil && m.Operdate != nil {
		return *m.Operdate
	}
	return 0
}

type E2EChangeOneSideAccountReq struct {
	SID              *string                                   `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	UserId           *int32                                    `protobuf:"varint,2,req,name=UserId" json:"UserId,omitempty"`
	UserType         *int32                                    `protobuf:"varint,3,req,name=UserType" json:"UserType,omitempty"`
	LoginId          *int32                                    `protobuf:"varint,4,req,name=LoginId" json:"LoginId,omitempty"`
	AccountId        *int32                                    `protobuf:"varint,5,req,name=AccountId" json:"AccountId,omitempty"`
	OperDate         *int64                                    `protobuf:"varint,6,req,name=OperDate" json:"OperDate,omitempty"`
	Info             []*E2EChangeOneSideAccountReq_OperateInfo `protobuf:"bytes,7,rep,name=Info" json:"Info,omitempty"`
	XXX_unrecognized []byte                                    `json:"-"`
}

func (m *E2EChangeOneSideAccountReq) Reset()                    { *m = E2EChangeOneSideAccountReq{} }
func (m *E2EChangeOneSideAccountReq) String() string            { return proto1.CompactTextString(m) }
func (*E2EChangeOneSideAccountReq) ProtoMessage()               {}
func (*E2EChangeOneSideAccountReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *E2EChangeOneSideAccountReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EChangeOneSideAccountReq) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EChangeOneSideAccountReq) GetUserType() int32 {
	if m != nil && m.UserType != nil {
		return *m.UserType
	}
	return 0
}

func (m *E2EChangeOneSideAccountReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EChangeOneSideAccountReq) GetAccountId() int32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *E2EChangeOneSideAccountReq) GetOperDate() int64 {
	if m != nil && m.OperDate != nil {
		return *m.OperDate
	}
	return 0
}

func (m *E2EChangeOneSideAccountReq) GetInfo() []*E2EChangeOneSideAccountReq_OperateInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type E2EChangeOneSideAccountReq_OperateInfo struct {
	OperateType      *int32   `protobuf:"varint,1,req,name=OperateType" json:"OperateType,omitempty"`
	Currency         *int32   `protobuf:"varint,2,req,name=Currency" json:"Currency,omitempty"`
	Amount           *float64 `protobuf:"fixed64,3,req,name=Amount" json:"Amount,omitempty"`
	Fid              *int64   `protobuf:"varint,4,req,name=fid" json:"fid,omitempty"`
	Commission       *float64 `protobuf:"fixed64,5,req,name=Commission" json:"Commission,omitempty"`
	Operateflag      *int32   `protobuf:"varint,6,opt,name=operateflag,def=0" json:"operateflag,omitempty"`
	Carryover        *float64 `protobuf:"fixed64,7,req,name=carryover" json:"carryover,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *E2EChangeOneSideAccountReq_OperateInfo) Reset() {
	*m = E2EChangeOneSideAccountReq_OperateInfo{}
}
func (m *E2EChangeOneSideAccountReq_OperateInfo) String() string { return proto1.CompactTextString(m) }
func (*E2EChangeOneSideAccountReq_OperateInfo) ProtoMessage()    {}
func (*E2EChangeOneSideAccountReq_OperateInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{6, 0}
}

const Default_E2EChangeOneSideAccountReq_OperateInfo_Operateflag int32 = 0

func (m *E2EChangeOneSideAccountReq_OperateInfo) GetOperateType() int32 {
	if m != nil && m.OperateType != nil {
		return *m.OperateType
	}
	return 0
}

func (m *E2EChangeOneSideAccountReq_OperateInfo) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

func (m *E2EChangeOneSideAccountReq_OperateInfo) GetAmount() float64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *E2EChangeOneSideAccountReq_OperateInfo) GetFid() int64 {
	if m != nil && m.Fid != nil {
		return *m.Fid
	}
	return 0
}

func (m *E2EChangeOneSideAccountReq_OperateInfo) GetCommission() float64 {
	if m != nil && m.Commission != nil {
		return *m.Commission
	}
	return 0
}

func (m *E2EChangeOneSideAccountReq_OperateInfo) GetOperateflag() int32 {
	if m != nil && m.Operateflag != nil {
		return *m.Operateflag
	}
	return Default_E2EChangeOneSideAccountReq_OperateInfo_Operateflag
}

func (m *E2EChangeOneSideAccountReq_OperateInfo) GetCarryover() float64 {
	if m != nil && m.Carryover != nil {
		return *m.Carryover
	}
	return 0
}

// 单边账调整应答  0x07010006
type E2EChangeOneSideAccountRsp struct {
	RetCode          *int32  `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID              *string `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,3,req,name=LoginId" json:"LoginId,omitempty"`
	UserId           *int32  `protobuf:"varint,4,req,name=UserId" json:"UserId,omitempty"`
	OperDate         *int64  `protobuf:"varint,5,req,name=OperDate" json:"OperDate,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EChangeOneSideAccountRsp) Reset()                    { *m = E2EChangeOneSideAccountRsp{} }
func (m *E2EChangeOneSideAccountRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2EChangeOneSideAccountRsp) ProtoMessage()               {}
func (*E2EChangeOneSideAccountRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *E2EChangeOneSideAccountRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2EChangeOneSideAccountRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EChangeOneSideAccountRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EChangeOneSideAccountRsp) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EChangeOneSideAccountRsp) GetOperDate() int64 {
	if m != nil && m.OperDate != nil {
		return *m.OperDate
	}
	return 0
}

// 手续费结转请求 0x07010009
type E2EChangeCommisionMoneyReq struct {
	SID              *string  `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	UserId           *int32   `protobuf:"varint,2,req,name=UserId" json:"UserId,omitempty"`
	UserType         *int32   `protobuf:"varint,3,req,name=UserType" json:"UserType,omitempty"`
	LoginId          *int32   `protobuf:"varint,4,req,name=LoginId" json:"LoginId,omitempty"`
	AccountId        *int32   `protobuf:"varint,5,req,name=AccountId" json:"AccountId,omitempty"`
	OperateType      *int32   `protobuf:"varint,6,req,name=OperateType" json:"OperateType,omitempty"`
	Currency         *int32   `protobuf:"varint,7,req,name=Currency" json:"Currency,omitempty"`
	Amount           *float64 `protobuf:"fixed64,8,req,name=Amount" json:"Amount,omitempty"`
	Fid              *int64   `protobuf:"varint,9,req,name=fid" json:"fid,omitempty"`
	OperDate         *int64   `protobuf:"varint,10,req,name=OperDate" json:"OperDate,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *E2EChangeCommisionMoneyReq) Reset()                    { *m = E2EChangeCommisionMoneyReq{} }
func (m *E2EChangeCommisionMoneyReq) String() string            { return proto1.CompactTextString(m) }
func (*E2EChangeCommisionMoneyReq) ProtoMessage()               {}
func (*E2EChangeCommisionMoneyReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *E2EChangeCommisionMoneyReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EChangeCommisionMoneyReq) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EChangeCommisionMoneyReq) GetUserType() int32 {
	if m != nil && m.UserType != nil {
		return *m.UserType
	}
	return 0
}

func (m *E2EChangeCommisionMoneyReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EChangeCommisionMoneyReq) GetAccountId() int32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *E2EChangeCommisionMoneyReq) GetOperateType() int32 {
	if m != nil && m.OperateType != nil {
		return *m.OperateType
	}
	return 0
}

func (m *E2EChangeCommisionMoneyReq) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

func (m *E2EChangeCommisionMoneyReq) GetAmount() float64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *E2EChangeCommisionMoneyReq) GetFid() int64 {
	if m != nil && m.Fid != nil {
		return *m.Fid
	}
	return 0
}

func (m *E2EChangeCommisionMoneyReq) GetOperDate() int64 {
	if m != nil && m.OperDate != nil {
		return *m.OperDate
	}
	return 0
}

// 手续费结转回应 0x0701000A
type E2EChangeCommisionMoneyRsp struct {
	RetCode          *int32   `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID              *string  `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32   `protobuf:"varint,3,req,name=LoginId" json:"LoginId,omitempty"`
	UserId           *int32   `protobuf:"varint,4,req,name=UserId" json:"UserId,omitempty"`
	OperDate         *int64   `protobuf:"varint,5,req,name=OperDate" json:"OperDate,omitempty"`
	BeforeAmount     *float64 `protobuf:"fixed64,6,req,name=BeforeAmount" json:"BeforeAmount,omitempty"`
	AfterAmount      *float64 `protobuf:"fixed64,7,req,name=AfterAmount" json:"AfterAmount,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *E2EChangeCommisionMoneyRsp) Reset()                    { *m = E2EChangeCommisionMoneyRsp{} }
func (m *E2EChangeCommisionMoneyRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2EChangeCommisionMoneyRsp) ProtoMessage()               {}
func (*E2EChangeCommisionMoneyRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *E2EChangeCommisionMoneyRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2EChangeCommisionMoneyRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EChangeCommisionMoneyRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EChangeCommisionMoneyRsp) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EChangeCommisionMoneyRsp) GetOperDate() int64 {
	if m != nil && m.OperDate != nil {
		return *m.OperDate
	}
	return 0
}

func (m *E2EChangeCommisionMoneyRsp) GetBeforeAmount() float64 {
	if m != nil && m.BeforeAmount != nil {
		return *m.BeforeAmount
	}
	return 0
}

func (m *E2EChangeCommisionMoneyRsp) GetAfterAmount() float64 {
	if m != nil && m.AfterAmount != nil {
		return *m.AfterAmount
	}
	return 0
}

// 交易所优惠返还请求 0x0701000B
// 综合会员优惠返还请求 0x0701000D
type E2EChangePaybackMoneyReq struct {
	Sid              *string  `protobuf:"bytes,1,req,name=sid" json:"sid,omitempty"`
	Userid           *int32   `protobuf:"varint,2,req,name=userid" json:"userid,omitempty"`
	Loginid          *int32   `protobuf:"varint,3,req,name=loginid" json:"loginid,omitempty"`
	Payeeuserid      *int32   `protobuf:"varint,4,req,name=payeeuserid" json:"payeeuserid,omitempty"`
	Amt              *float64 `protobuf:"fixed64,5,req,name=amt" json:"amt,omitempty"`
	Desc             *string  `protobuf:"bytes,6,req,name=desc" json:"desc,omitempty"`
	Operatetime      *int64   `protobuf:"varint,7,req,name=operatetime" json:"operatetime,omitempty"`
	Logid            *int64   `protobuf:"varint,8,req,name=logid" json:"logid,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *E2EChangePaybackMoneyReq) Reset()                    { *m = E2EChangePaybackMoneyReq{} }
func (m *E2EChangePaybackMoneyReq) String() string            { return proto1.CompactTextString(m) }
func (*E2EChangePaybackMoneyReq) ProtoMessage()               {}
func (*E2EChangePaybackMoneyReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *E2EChangePaybackMoneyReq) GetSid() string {
	if m != nil && m.Sid != nil {
		return *m.Sid
	}
	return ""
}

func (m *E2EChangePaybackMoneyReq) GetUserid() int32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

func (m *E2EChangePaybackMoneyReq) GetLoginid() int32 {
	if m != nil && m.Loginid != nil {
		return *m.Loginid
	}
	return 0
}

func (m *E2EChangePaybackMoneyReq) GetPayeeuserid() int32 {
	if m != nil && m.Payeeuserid != nil {
		return *m.Payeeuserid
	}
	return 0
}

func (m *E2EChangePaybackMoneyReq) GetAmt() float64 {
	if m != nil && m.Amt != nil {
		return *m.Amt
	}
	return 0
}

func (m *E2EChangePaybackMoneyReq) GetDesc() string {
	if m != nil && m.Desc != nil {
		return *m.Desc
	}
	return ""
}

func (m *E2EChangePaybackMoneyReq) GetOperatetime() int64 {
	if m != nil && m.Operatetime != nil {
		return *m.Operatetime
	}
	return 0
}

func (m *E2EChangePaybackMoneyReq) GetLogid() int64 {
	if m != nil && m.Logid != nil {
		return *m.Logid
	}
	return 0
}

// 交易所优惠返还请求响应 0x0701000C
// 综合会员优惠返还请求响应 0x0701000E
type E2EChangePaybackMoneyRsp struct {
	Retcode          *int32  `protobuf:"varint,1,req,name=retcode" json:"retcode,omitempty"`
	Sid              *string `protobuf:"bytes,2,req,name=sid" json:"sid,omitempty"`
	Loginid          *int32  `protobuf:"varint,3,req,name=loginid" json:"loginid,omitempty"`
	Userid           *int32  `protobuf:"varint,4,req,name=userid" json:"userid,omitempty"`
	Operatetime      *int64  `protobuf:"varint,5,req,name=operatetime" json:"operatetime,omitempty"`
	Payerseq         *int64  `protobuf:"varint,6,req,name=payerseq" json:"payerseq,omitempty"`
	Payeeseq         *int64  `protobuf:"varint,7,req,name=payeeseq" json:"payeeseq,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EChangePaybackMoneyRsp) Reset()                    { *m = E2EChangePaybackMoneyRsp{} }
func (m *E2EChangePaybackMoneyRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2EChangePaybackMoneyRsp) ProtoMessage()               {}
func (*E2EChangePaybackMoneyRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *E2EChangePaybackMoneyRsp) GetRetcode() int32 {
	if m != nil && m.Retcode != nil {
		return *m.Retcode
	}
	return 0
}

func (m *E2EChangePaybackMoneyRsp) GetSid() string {
	if m != nil && m.Sid != nil {
		return *m.Sid
	}
	return ""
}

func (m *E2EChangePaybackMoneyRsp) GetLoginid() int32 {
	if m != nil && m.Loginid != nil {
		return *m.Loginid
	}
	return 0
}

func (m *E2EChangePaybackMoneyRsp) GetUserid() int32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

func (m *E2EChangePaybackMoneyRsp) GetOperatetime() int64 {
	if m != nil && m.Operatetime != nil {
		return *m.Operatetime
	}
	return 0
}

func (m *E2EChangePaybackMoneyRsp) GetPayerseq() int64 {
	if m != nil && m.Payerseq != nil {
		return *m.Payerseq
	}
	return 0
}

func (m *E2EChangePaybackMoneyRsp) GetPayeeseq() int64 {
	if m != nil && m.Payeeseq != nil {
		return *m.Payeeseq
	}
	return 0
}

// ////////////////////////////////////////////////////////////////////
// 银行服务与浮动盈亏模块交互
// ////////////////////////////////////////////////////////////////////
// 查浮动盈亏请求  0x22334487
type E2EQueryFloatRevenuesReq struct {
	SID              *string `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	UserID           *int32  `protobuf:"varint,2,req,name=UserID" json:"UserID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EQueryFloatRevenuesReq) Reset()                    { *m = E2EQueryFloatRevenuesReq{} }
func (m *E2EQueryFloatRevenuesReq) String() string            { return proto1.CompactTextString(m) }
func (*E2EQueryFloatRevenuesReq) ProtoMessage()               {}
func (*E2EQueryFloatRevenuesReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *E2EQueryFloatRevenuesReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EQueryFloatRevenuesReq) GetUserID() int32 {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return 0
}

// 查浮动盈亏回应  0x22334488
type E2EQueryFloatRevenuesRsp struct {
	RetCode          *int32   `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID              *string  `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	UserID           *int32   `protobuf:"varint,3,req,name=UserID" json:"UserID,omitempty"`
	Sum              *float64 `protobuf:"fixed64,4,req,name=Sum" json:"Sum,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *E2EQueryFloatRevenuesRsp) Reset()                    { *m = E2EQueryFloatRevenuesRsp{} }
func (m *E2EQueryFloatRevenuesRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2EQueryFloatRevenuesRsp) ProtoMessage()               {}
func (*E2EQueryFloatRevenuesRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *E2EQueryFloatRevenuesRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2EQueryFloatRevenuesRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EQueryFloatRevenuesRsp) GetUserID() int32 {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return 0
}

func (m *E2EQueryFloatRevenuesRsp) GetSum() float64 {
	if m != nil && m.Sum != nil {
		return *m.Sum
	}
	return 0
}

// ////////////////////////////////////////////////////////////////////
// 银行服务与接口服务交互
// ////////////////////////////////////////////////////////////////////
// 出入金请求 0x0F010001
type E2EInOutMoneyReq struct {
	SID              *string  `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32   `protobuf:"varint,2,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32   `protobuf:"varint,3,req,name=CustomerId" json:"CustomerId,omitempty"`
	UserId           *int32   `protobuf:"varint,4,req,name=UserId" json:"UserId,omitempty"`
	MemberId         *int32   `protobuf:"varint,5,req,name=MemberId" json:"MemberId,omitempty"`
	BankId           *int32   `protobuf:"varint,6,req,name=BankId" json:"BankId,omitempty"`
	OperateType      *int32   `protobuf:"varint,7,req,name=OperateType" json:"OperateType,omitempty"`
	Currency         *int32   `protobuf:"varint,8,req,name=Currency" json:"Currency,omitempty"`
	Amount           *float64 `protobuf:"fixed64,9,req,name=Amount" json:"Amount,omitempty"`
	FundPsw          *string  `protobuf:"bytes,10,req,name=FundPsw" json:"FundPsw,omitempty"`
	BankPsw          *string  `protobuf:"bytes,11,opt,name=BankPsw" json:"BankPsw,omitempty"`
	Reversed         *string  `protobuf:"bytes,12,opt,name=Reversed" json:"Reversed,omitempty"`
	AppSeq           *int32   `protobuf:"varint,13,opt,name=AppSeq" json:"AppSeq,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *E2EInOutMoneyReq) Reset()                    { *m = E2EInOutMoneyReq{} }
func (m *E2EInOutMoneyReq) String() string            { return proto1.CompactTextString(m) }
func (*E2EInOutMoneyReq) ProtoMessage()               {}
func (*E2EInOutMoneyReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *E2EInOutMoneyReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EInOutMoneyReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EInOutMoneyReq) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2EInOutMoneyReq) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EInOutMoneyReq) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

func (m *E2EInOutMoneyReq) GetBankId() int32 {
	if m != nil && m.BankId != nil {
		return *m.BankId
	}
	return 0
}

func (m *E2EInOutMoneyReq) GetOperateType() int32 {
	if m != nil && m.OperateType != nil {
		return *m.OperateType
	}
	return 0
}

func (m *E2EInOutMoneyReq) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

func (m *E2EInOutMoneyReq) GetAmount() float64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *E2EInOutMoneyReq) GetFundPsw() string {
	if m != nil && m.FundPsw != nil {
		return *m.FundPsw
	}
	return ""
}

func (m *E2EInOutMoneyReq) GetBankPsw() string {
	if m != nil && m.BankPsw != nil {
		return *m.BankPsw
	}
	return ""
}

func (m *E2EInOutMoneyReq) GetReversed() string {
	if m != nil && m.Reversed != nil {
		return *m.Reversed
	}
	return ""
}

func (m *E2EInOutMoneyReq) GetAppSeq() int32 {
	if m != nil && m.AppSeq != nil {
		return *m.AppSeq
	}
	return 0
}

// 出入金回应 0x0F010002
type E2EInOutMoneyRsp struct {
	RetCode          *int32  `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID              *string `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,3,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32  `protobuf:"varint,4,req,name=CustomerId" json:"CustomerId,omitempty"`
	UserId           *int32  `protobuf:"varint,5,req,name=UserId" json:"UserId,omitempty"`
	MemberId         *int32  `protobuf:"varint,6,req,name=MemberId" json:"MemberId,omitempty"`
	RetMsg           *string `protobuf:"bytes,7,opt,name=RetMsg" json:"RetMsg,omitempty"`
	PostUrl          *string `protobuf:"bytes,8,opt,name=PostUrl" json:"PostUrl,omitempty"`
	PostData         *string `protobuf:"bytes,9,opt,name=PostData" json:"PostData,omitempty"`
	PayInfo          *string `protobuf:"bytes,10,opt,name=PayInfo" json:"PayInfo,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EInOutMoneyRsp) Reset()                    { *m = E2EInOutMoneyRsp{} }
func (m *E2EInOutMoneyRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2EInOutMoneyRsp) ProtoMessage()               {}
func (*E2EInOutMoneyRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *E2EInOutMoneyRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2EInOutMoneyRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EInOutMoneyRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EInOutMoneyRsp) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2EInOutMoneyRsp) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EInOutMoneyRsp) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

func (m *E2EInOutMoneyRsp) GetRetMsg() string {
	if m != nil && m.RetMsg != nil {
		return *m.RetMsg
	}
	return ""
}

func (m *E2EInOutMoneyRsp) GetPostUrl() string {
	if m != nil && m.PostUrl != nil {
		return *m.PostUrl
	}
	return ""
}

func (m *E2EInOutMoneyRsp) GetPostData() string {
	if m != nil && m.PostData != nil {
		return *m.PostData
	}
	return ""
}

func (m *E2EInOutMoneyRsp) GetPayInfo() string {
	if m != nil && m.PayInfo != nil {
		return *m.PayInfo
	}
	return ""
}

// 签约请求 0x0F010003
type E2EAttachAcctReq struct {
	SID              *string `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,2,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32  `protobuf:"varint,3,req,name=CustomerId" json:"CustomerId,omitempty"`
	UserId           *int32  `protobuf:"varint,4,req,name=UserId" json:"UserId,omitempty"`
	MemberId         *int32  `protobuf:"varint,5,req,name=MemberId" json:"MemberId,omitempty"`
	BankId           *int32  `protobuf:"varint,6,req,name=BankId" json:"BankId,omitempty"`
	ReckonFlag       *int32  `protobuf:"varint,7,req,name=ReckonFlag" json:"ReckonFlag,omitempty"`
	BankAcct         *string `protobuf:"bytes,8,req,name=BankAcct" json:"BankAcct,omitempty"`
	CustName         *string `protobuf:"bytes,9,req,name=CustName" json:"CustName,omitempty"`
	IdType           *int32  `protobuf:"varint,10,req,name=IdType" json:"IdType,omitempty"`
	IdNumber         *string `protobuf:"bytes,11,req,name=IdNumber" json:"IdNumber,omitempty"`
	FundPsw          *string `protobuf:"bytes,12,req,name=FundPsw" json:"FundPsw,omitempty"`
	AgentName        *string `protobuf:"bytes,13,opt,name=AgentName" json:"AgentName,omitempty"`
	AgentIdType      *int32  `protobuf:"varint,14,opt,name=AgentIdType" json:"AgentIdType,omitempty"`
	AgentIdNumber    *string `protobuf:"bytes,15,opt,name=AgentIdNumber" json:"AgentIdNumber,omitempty"`
	BankPsw          *string `protobuf:"bytes,16,opt,name=BankPsw" json:"BankPsw,omitempty"`
	Reversed         *string `protobuf:"bytes,17,opt,name=Reversed" json:"Reversed,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EAttachAcctReq) Reset()                    { *m = E2EAttachAcctReq{} }
func (m *E2EAttachAcctReq) String() string            { return proto1.CompactTextString(m) }
func (*E2EAttachAcctReq) ProtoMessage()               {}
func (*E2EAttachAcctReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *E2EAttachAcctReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EAttachAcctReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EAttachAcctReq) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2EAttachAcctReq) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EAttachAcctReq) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

func (m *E2EAttachAcctReq) GetBankId() int32 {
	if m != nil && m.BankId != nil {
		return *m.BankId
	}
	return 0
}

func (m *E2EAttachAcctReq) GetReckonFlag() int32 {
	if m != nil && m.ReckonFlag != nil {
		return *m.ReckonFlag
	}
	return 0
}

func (m *E2EAttachAcctReq) GetBankAcct() string {
	if m != nil && m.BankAcct != nil {
		return *m.BankAcct
	}
	return ""
}

func (m *E2EAttachAcctReq) GetCustName() string {
	if m != nil && m.CustName != nil {
		return *m.CustName
	}
	return ""
}

func (m *E2EAttachAcctReq) GetIdType() int32 {
	if m != nil && m.IdType != nil {
		return *m.IdType
	}
	return 0
}

func (m *E2EAttachAcctReq) GetIdNumber() string {
	if m != nil && m.IdNumber != nil {
		return *m.IdNumber
	}
	return ""
}

func (m *E2EAttachAcctReq) GetFundPsw() string {
	if m != nil && m.FundPsw != nil {
		return *m.FundPsw
	}
	return ""
}

func (m *E2EAttachAcctReq) GetAgentName() string {
	if m != nil && m.AgentName != nil {
		return *m.AgentName
	}
	return ""
}

func (m *E2EAttachAcctReq) GetAgentIdType() int32 {
	if m != nil && m.AgentIdType != nil {
		return *m.AgentIdType
	}
	return 0
}

func (m *E2EAttachAcctReq) GetAgentIdNumber() string {
	if m != nil && m.AgentIdNumber != nil {
		return *m.AgentIdNumber
	}
	return ""
}

func (m *E2EAttachAcctReq) GetBankPsw() string {
	if m != nil && m.BankPsw != nil {
		return *m.BankPsw
	}
	return ""
}

func (m *E2EAttachAcctReq) GetReversed() string {
	if m != nil && m.Reversed != nil {
		return *m.Reversed
	}
	return ""
}

// 签约回应 0x0F010004
type E2EAttachAcctRsp struct {
	RetCode          *int32  `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID              *string `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,3,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32  `protobuf:"varint,4,req,name=CustomerId" json:"CustomerId,omitempty"`
	UserId           *int32  `protobuf:"varint,5,req,name=UserId" json:"UserId,omitempty"`
	MemberId         *int32  `protobuf:"varint,6,req,name=MemberId" json:"MemberId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EAttachAcctRsp) Reset()                    { *m = E2EAttachAcctRsp{} }
func (m *E2EAttachAcctRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2EAttachAcctRsp) ProtoMessage()               {}
func (*E2EAttachAcctRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *E2EAttachAcctRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2EAttachAcctRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EAttachAcctRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EAttachAcctRsp) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2EAttachAcctRsp) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EAttachAcctRsp) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

// 解约请求 0x0F010005
type E2EDetachAcctReq struct {
	SID              *string `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,2,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32  `protobuf:"varint,3,req,name=CustomerId" json:"CustomerId,omitempty"`
	UserId           *int32  `protobuf:"varint,4,req,name=UserId" json:"UserId,omitempty"`
	MemberId         *int32  `protobuf:"varint,5,req,name=MemberId" json:"MemberId,omitempty"`
	BankId           *int32  `protobuf:"varint,6,req,name=BankId" json:"BankId,omitempty"`
	BankAcct         *string `protobuf:"bytes,7,req,name=BankAcct" json:"BankAcct,omitempty"`
	CustName         *string `protobuf:"bytes,8,req,name=CustName" json:"CustName,omitempty"`
	IdType           *int32  `protobuf:"varint,9,req,name=IdType" json:"IdType,omitempty"`
	IdNumber         *string `protobuf:"bytes,10,req,name=IdNumber" json:"IdNumber,omitempty"`
	FundPsw          *string `protobuf:"bytes,11,req,name=FundPsw" json:"FundPsw,omitempty"`
	BankPsw          *string `protobuf:"bytes,12,opt,name=BankPsw" json:"BankPsw,omitempty"`
	Reversed         *string `protobuf:"bytes,17,opt,name=Reversed" json:"Reversed,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EDetachAcctReq) Reset()                    { *m = E2EDetachAcctReq{} }
func (m *E2EDetachAcctReq) String() string            { return proto1.CompactTextString(m) }
func (*E2EDetachAcctReq) ProtoMessage()               {}
func (*E2EDetachAcctReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *E2EDetachAcctReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EDetachAcctReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EDetachAcctReq) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2EDetachAcctReq) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EDetachAcctReq) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

func (m *E2EDetachAcctReq) GetBankId() int32 {
	if m != nil && m.BankId != nil {
		return *m.BankId
	}
	return 0
}

func (m *E2EDetachAcctReq) GetBankAcct() string {
	if m != nil && m.BankAcct != nil {
		return *m.BankAcct
	}
	return ""
}

func (m *E2EDetachAcctReq) GetCustName() string {
	if m != nil && m.CustName != nil {
		return *m.CustName
	}
	return ""
}

func (m *E2EDetachAcctReq) GetIdType() int32 {
	if m != nil && m.IdType != nil {
		return *m.IdType
	}
	return 0
}

func (m *E2EDetachAcctReq) GetIdNumber() string {
	if m != nil && m.IdNumber != nil {
		return *m.IdNumber
	}
	return ""
}

func (m *E2EDetachAcctReq) GetFundPsw() string {
	if m != nil && m.FundPsw != nil {
		return *m.FundPsw
	}
	return ""
}

func (m *E2EDetachAcctReq) GetBankPsw() string {
	if m != nil && m.BankPsw != nil {
		return *m.BankPsw
	}
	return ""
}

func (m *E2EDetachAcctReq) GetReversed() string {
	if m != nil && m.Reversed != nil {
		return *m.Reversed
	}
	return ""
}

// 解约回应 0x0F010006
type E2EDetachAcctRsp struct {
	RetCode          *int32  `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID              *string `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,3,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32  `protobuf:"varint,4,req,name=CustomerId" json:"CustomerId,omitempty"`
	UserId           *int32  `protobuf:"varint,5,req,name=UserId" json:"UserId,omitempty"`
	MemberId         *int32  `protobuf:"varint,6,req,name=MemberId" json:"MemberId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EDetachAcctRsp) Reset()                    { *m = E2EDetachAcctRsp{} }
func (m *E2EDetachAcctRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2EDetachAcctRsp) ProtoMessage()               {}
func (*E2EDetachAcctRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *E2EDetachAcctRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2EDetachAcctRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EDetachAcctRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EDetachAcctRsp) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2EDetachAcctRsp) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EDetachAcctRsp) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

// 更新用户资料请求 0x0F010007
type E2EUpdateUserInfoReq struct {
	SID              *string `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,2,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32  `protobuf:"varint,3,req,name=CustomerId" json:"CustomerId,omitempty"`
	UserId           *int32  `protobuf:"varint,4,req,name=UserId" json:"UserId,omitempty"`
	MemberId         *int32  `protobuf:"varint,5,req,name=MemberId" json:"MemberId,omitempty"`
	BankId           *int32  `protobuf:"varint,6,req,name=BankId" json:"BankId,omitempty"`
	CustName         *string `protobuf:"bytes,7,req,name=CustName" json:"CustName,omitempty"`
	IdType           *int32  `protobuf:"varint,8,req,name=IdType" json:"IdType,omitempty"`
	IdNumber         *string `protobuf:"bytes,9,req,name=IdNumber" json:"IdNumber,omitempty"`
	BankPsw          *string `protobuf:"bytes,10,opt,name=BankPsw" json:"BankPsw,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EUpdateUserInfoReq) Reset()                    { *m = E2EUpdateUserInfoReq{} }
func (m *E2EUpdateUserInfoReq) String() string            { return proto1.CompactTextString(m) }
func (*E2EUpdateUserInfoReq) ProtoMessage()               {}
func (*E2EUpdateUserInfoReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *E2EUpdateUserInfoReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EUpdateUserInfoReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EUpdateUserInfoReq) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2EUpdateUserInfoReq) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EUpdateUserInfoReq) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

func (m *E2EUpdateUserInfoReq) GetBankId() int32 {
	if m != nil && m.BankId != nil {
		return *m.BankId
	}
	return 0
}

func (m *E2EUpdateUserInfoReq) GetCustName() string {
	if m != nil && m.CustName != nil {
		return *m.CustName
	}
	return ""
}

func (m *E2EUpdateUserInfoReq) GetIdType() int32 {
	if m != nil && m.IdType != nil {
		return *m.IdType
	}
	return 0
}

func (m *E2EUpdateUserInfoReq) GetIdNumber() string {
	if m != nil && m.IdNumber != nil {
		return *m.IdNumber
	}
	return ""
}

func (m *E2EUpdateUserInfoReq) GetBankPsw() string {
	if m != nil && m.BankPsw != nil {
		return *m.BankPsw
	}
	return ""
}

// 更新用户资料回应 0x0F010008
type E2EUpdateUserInfoRsp struct {
	RetCode          *int32  `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID              *string `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,3,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32  `protobuf:"varint,4,req,name=CustomerId" json:"CustomerId,omitempty"`
	UserId           *int32  `protobuf:"varint,5,req,name=UserId" json:"UserId,omitempty"`
	MemberId         *int32  `protobuf:"varint,6,req,name=MemberId" json:"MemberId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EUpdateUserInfoRsp) Reset()                    { *m = E2EUpdateUserInfoRsp{} }
func (m *E2EUpdateUserInfoRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2EUpdateUserInfoRsp) ProtoMessage()               {}
func (*E2EUpdateUserInfoRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *E2EUpdateUserInfoRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2EUpdateUserInfoRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EUpdateUserInfoRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EUpdateUserInfoRsp) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2EUpdateUserInfoRsp) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EUpdateUserInfoRsp) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

// 查询交易所余额请求 0x0F010009
type E2EQueryMoneyReq struct {
	SID              *string `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,2,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32  `protobuf:"varint,3,req,name=CustomerId" json:"CustomerId,omitempty"`
	UserId           *int32  `protobuf:"varint,4,req,name=UserId" json:"UserId,omitempty"`
	MemberId         *int32  `protobuf:"varint,5,req,name=MemberId" json:"MemberId,omitempty"`
	BankId           *int32  `protobuf:"varint,6,req,name=BankId" json:"BankId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EQueryMoneyReq) Reset()                    { *m = E2EQueryMoneyReq{} }
func (m *E2EQueryMoneyReq) String() string            { return proto1.CompactTextString(m) }
func (*E2EQueryMoneyReq) ProtoMessage()               {}
func (*E2EQueryMoneyReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *E2EQueryMoneyReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EQueryMoneyReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EQueryMoneyReq) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2EQueryMoneyReq) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EQueryMoneyReq) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

func (m *E2EQueryMoneyReq) GetBankId() int32 {
	if m != nil && m.BankId != nil {
		return *m.BankId
	}
	return 0
}

// 查询交易所余额回应 0x0F01000A
type E2EQueryMoneyRsp struct {
	RetCode          *int32   `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID              *string  `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32   `protobuf:"varint,3,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32   `protobuf:"varint,4,req,name=CustomerId" json:"CustomerId,omitempty"`
	UserId           *int32   `protobuf:"varint,5,req,name=UserId" json:"UserId,omitempty"`
	MemberId         *int32   `protobuf:"varint,6,req,name=MemberId" json:"MemberId,omitempty"`
	Amount           *float64 `protobuf:"fixed64,7,req,name=Amount" json:"Amount,omitempty"`
	AmountAvailable  *float64 `protobuf:"fixed64,8,req,name=AmountAvailable" json:"AmountAvailable,omitempty"`
	AmountFetchable  *float64 `protobuf:"fixed64,9,req,name=AmountFetchable" json:"AmountFetchable,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *E2EQueryMoneyRsp) Reset()                    { *m = E2EQueryMoneyRsp{} }
func (m *E2EQueryMoneyRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2EQueryMoneyRsp) ProtoMessage()               {}
func (*E2EQueryMoneyRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *E2EQueryMoneyRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2EQueryMoneyRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EQueryMoneyRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EQueryMoneyRsp) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2EQueryMoneyRsp) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EQueryMoneyRsp) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

func (m *E2EQueryMoneyRsp) GetAmount() float64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *E2EQueryMoneyRsp) GetAmountAvailable() float64 {
	if m != nil && m.AmountAvailable != nil {
		return *m.AmountAvailable
	}
	return 0
}

func (m *E2EQueryMoneyRsp) GetAmountFetchable() float64 {
	if m != nil && m.AmountFetchable != nil {
		return *m.AmountFetchable
	}
	return 0
}

// 查询客户在银行签约状请求 0x0F01000B
type E2EQuerySignStatusReq struct {
	SID              *string `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,2,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32  `protobuf:"varint,3,req,name=CustomerId" json:"CustomerId,omitempty"`
	UserId           *int32  `protobuf:"varint,4,req,name=UserId" json:"UserId,omitempty"`
	MemberId         *int32  `protobuf:"varint,5,req,name=MemberId" json:"MemberId,omitempty"`
	BankId           *int32  `protobuf:"varint,6,req,name=BankId" json:"BankId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EQuerySignStatusReq) Reset()                    { *m = E2EQuerySignStatusReq{} }
func (m *E2EQuerySignStatusReq) String() string            { return proto1.CompactTextString(m) }
func (*E2EQuerySignStatusReq) ProtoMessage()               {}
func (*E2EQuerySignStatusReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *E2EQuerySignStatusReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EQuerySignStatusReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EQuerySignStatusReq) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2EQuerySignStatusReq) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EQuerySignStatusReq) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

func (m *E2EQuerySignStatusReq) GetBankId() int32 {
	if m != nil && m.BankId != nil {
		return *m.BankId
	}
	return 0
}

// 查询客户在银行签约状回应 0x0F01000C
type E2EQuerySignStatusRsp struct {
	RetCode          *int32  `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID              *string `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,3,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32  `protobuf:"varint,4,req,name=CustomerId" json:"CustomerId,omitempty"`
	UserId           *int32  `protobuf:"varint,5,req,name=UserId" json:"UserId,omitempty"`
	MemberId         *int32  `protobuf:"varint,6,req,name=MemberId" json:"MemberId,omitempty"`
	Status           *int32  `protobuf:"varint,7,req,name=Status" json:"Status,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EQuerySignStatusRsp) Reset()                    { *m = E2EQuerySignStatusRsp{} }
func (m *E2EQuerySignStatusRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2EQuerySignStatusRsp) ProtoMessage()               {}
func (*E2EQuerySignStatusRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *E2EQuerySignStatusRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2EQuerySignStatusRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EQuerySignStatusRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EQuerySignStatusRsp) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2EQuerySignStatusRsp) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EQuerySignStatusRsp) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

func (m *E2EQuerySignStatusRsp) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

// 手续费结转请求 0x0F01000D
type E2EFinalFeeReq struct {
	SID              *string  `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32   `protobuf:"varint,2,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32   `protobuf:"varint,3,req,name=CustomerId" json:"CustomerId,omitempty"`
	UserId           *int32   `protobuf:"varint,4,req,name=UserId" json:"UserId,omitempty"`
	MemberId         *int32   `protobuf:"varint,5,req,name=MemberId" json:"MemberId,omitempty"`
	BankId           *int32   `protobuf:"varint,6,req,name=BankId" json:"BankId,omitempty"`
	Amount           *float64 `protobuf:"fixed64,7,req,name=Amount" json:"Amount,omitempty"`
	Tradedate        *int64   `protobuf:"varint,8,req,name=Tradedate" json:"Tradedate,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *E2EFinalFeeReq) Reset()                    { *m = E2EFinalFeeReq{} }
func (m *E2EFinalFeeReq) String() string            { return proto1.CompactTextString(m) }
func (*E2EFinalFeeReq) ProtoMessage()               {}
func (*E2EFinalFeeReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *E2EFinalFeeReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EFinalFeeReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EFinalFeeReq) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2EFinalFeeReq) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EFinalFeeReq) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

func (m *E2EFinalFeeReq) GetBankId() int32 {
	if m != nil && m.BankId != nil {
		return *m.BankId
	}
	return 0
}

func (m *E2EFinalFeeReq) GetAmount() float64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *E2EFinalFeeReq) GetTradedate() int64 {
	if m != nil && m.Tradedate != nil {
		return *m.Tradedate
	}
	return 0
}

// 手续费结转回应 0x0F01000E
type E2EFinalFeeRsp struct {
	RetCode          *int32  `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID              *string `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,3,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32  `protobuf:"varint,4,req,name=CustomerId" json:"CustomerId,omitempty"`
	UserId           *int32  `protobuf:"varint,5,req,name=UserId" json:"UserId,omitempty"`
	MemberId         *int32  `protobuf:"varint,6,req,name=MemberId" json:"MemberId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EFinalFeeRsp) Reset()                    { *m = E2EFinalFeeRsp{} }
func (m *E2EFinalFeeRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2EFinalFeeRsp) ProtoMessage()               {}
func (*E2EFinalFeeRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *E2EFinalFeeRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2EFinalFeeRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EFinalFeeRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EFinalFeeRsp) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2EFinalFeeRsp) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EFinalFeeRsp) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

// 强解/强签请求 0x0F01000F
type E2EBruteDeAttachReq struct {
	SID              *string `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,2,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32  `protobuf:"varint,3,req,name=CustomerId" json:"CustomerId,omitempty"`
	UserId           *int32  `protobuf:"varint,4,req,name=UserId" json:"UserId,omitempty"`
	MemberId         *int32  `protobuf:"varint,5,req,name=MemberId" json:"MemberId,omitempty"`
	BankId           *int32  `protobuf:"varint,6,req,name=BankId" json:"BankId,omitempty"`
	BankAcct         *string `protobuf:"bytes,7,req,name=BankAcct" json:"BankAcct,omitempty"`
	Type             *int32  `protobuf:"varint,8,req,name=type" json:"type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EBruteDeAttachReq) Reset()                    { *m = E2EBruteDeAttachReq{} }
func (m *E2EBruteDeAttachReq) String() string            { return proto1.CompactTextString(m) }
func (*E2EBruteDeAttachReq) ProtoMessage()               {}
func (*E2EBruteDeAttachReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *E2EBruteDeAttachReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EBruteDeAttachReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EBruteDeAttachReq) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2EBruteDeAttachReq) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EBruteDeAttachReq) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

func (m *E2EBruteDeAttachReq) GetBankId() int32 {
	if m != nil && m.BankId != nil {
		return *m.BankId
	}
	return 0
}

func (m *E2EBruteDeAttachReq) GetBankAcct() string {
	if m != nil && m.BankAcct != nil {
		return *m.BankAcct
	}
	return ""
}

func (m *E2EBruteDeAttachReq) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

// 强解/强签回应 0x0F010010
type E2EBruteDeAttachRsp struct {
	RetCode          *int32  `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID              *string `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,3,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32  `protobuf:"varint,4,req,name=CustomerId" json:"CustomerId,omitempty"`
	UserId           *int32  `protobuf:"varint,5,req,name=UserId" json:"UserId,omitempty"`
	MemberId         *int32  `protobuf:"varint,6,req,name=MemberId" json:"MemberId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EBruteDeAttachRsp) Reset()                    { *m = E2EBruteDeAttachRsp{} }
func (m *E2EBruteDeAttachRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2EBruteDeAttachRsp) ProtoMessage()               {}
func (*E2EBruteDeAttachRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *E2EBruteDeAttachRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2EBruteDeAttachRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EBruteDeAttachRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EBruteDeAttachRsp) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2EBruteDeAttachRsp) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EBruteDeAttachRsp) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

// 查询银行余额请求  0x83040093
type E2EQueryBankMoneyReq struct {
	SID              *string `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,2,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32  `protobuf:"varint,3,req,name=CustomerId" json:"CustomerId,omitempty"`
	UserId           *int32  `protobuf:"varint,4,req,name=UserId" json:"UserId,omitempty"`
	MemberId         *int32  `protobuf:"varint,5,req,name=MemberId" json:"MemberId,omitempty"`
	BankId           *int32  `protobuf:"varint,6,req,name=BankId" json:"BankId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EQueryBankMoneyReq) Reset()                    { *m = E2EQueryBankMoneyReq{} }
func (m *E2EQueryBankMoneyReq) String() string            { return proto1.CompactTextString(m) }
func (*E2EQueryBankMoneyReq) ProtoMessage()               {}
func (*E2EQueryBankMoneyReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *E2EQueryBankMoneyReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EQueryBankMoneyReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EQueryBankMoneyReq) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2EQueryBankMoneyReq) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EQueryBankMoneyReq) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

func (m *E2EQueryBankMoneyReq) GetBankId() int32 {
	if m != nil && m.BankId != nil {
		return *m.BankId
	}
	return 0
}

// 查询银行余额回应  0x83040094
type E2EQueryBankMoneyRsp struct {
	RetCode          *int32   `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID              *string  `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32   `protobuf:"varint,3,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32   `protobuf:"varint,4,req,name=CustomerId" json:"CustomerId,omitempty"`
	UserId           *int32   `protobuf:"varint,5,req,name=UserId" json:"UserId,omitempty"`
	MemberId         *int32   `protobuf:"varint,6,req,name=MemberId" json:"MemberId,omitempty"`
	Amount           *float64 `protobuf:"fixed64,7,req,name=Amount" json:"Amount,omitempty"`
	AmountAvailable  *float64 `protobuf:"fixed64,8,req,name=AmountAvailable" json:"AmountAvailable,omitempty"`
	AmountFetchable  *float64 `protobuf:"fixed64,9,req,name=AmountFetchable" json:"AmountFetchable,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *E2EQueryBankMoneyRsp) Reset()                    { *m = E2EQueryBankMoneyRsp{} }
func (m *E2EQueryBankMoneyRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2EQueryBankMoneyRsp) ProtoMessage()               {}
func (*E2EQueryBankMoneyRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *E2EQueryBankMoneyRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2EQueryBankMoneyRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EQueryBankMoneyRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EQueryBankMoneyRsp) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2EQueryBankMoneyRsp) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EQueryBankMoneyRsp) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

func (m *E2EQueryBankMoneyRsp) GetAmount() float64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *E2EQueryBankMoneyRsp) GetAmountAvailable() float64 {
	if m != nil && m.AmountAvailable != nil {
		return *m.AmountAvailable
	}
	return 0
}

func (m *E2EQueryBankMoneyRsp) GetAmountFetchable() float64 {
	if m != nil && m.AmountFetchable != nil {
		return *m.AmountFetchable
	}
	return 0
}

// 查手续费结转请求  0x83040003
type E2EQueryFinalFeeReq struct {
	SID              *string `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,2,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32  `protobuf:"varint,3,req,name=CustomerId" json:"CustomerId,omitempty"`
	CustomerName     *string `protobuf:"bytes,4,req,name=CustomerName" json:"CustomerName,omitempty"`
	CustomerTel      *string `protobuf:"bytes,5,req,name=CustomerTel" json:"CustomerTel,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EQueryFinalFeeReq) Reset()                    { *m = E2EQueryFinalFeeReq{} }
func (m *E2EQueryFinalFeeReq) String() string            { return proto1.CompactTextString(m) }
func (*E2EQueryFinalFeeReq) ProtoMessage()               {}
func (*E2EQueryFinalFeeReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *E2EQueryFinalFeeReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EQueryFinalFeeReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EQueryFinalFeeReq) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2EQueryFinalFeeReq) GetCustomerName() string {
	if m != nil && m.CustomerName != nil {
		return *m.CustomerName
	}
	return ""
}

func (m *E2EQueryFinalFeeReq) GetCustomerTel() string {
	if m != nil && m.CustomerTel != nil {
		return *m.CustomerTel
	}
	return ""
}

// 查手续费结转回应  0x83040004
type E2EQueryFinalFeeRsp struct {
	RetCode          *int32  `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID              *string `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,3,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32  `protobuf:"varint,4,req,name=CustomerId" json:"CustomerId,omitempty"`
	MemberId         *int32  `protobuf:"varint,5,req,name=MemberId" json:"MemberId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EQueryFinalFeeRsp) Reset()                    { *m = E2EQueryFinalFeeRsp{} }
func (m *E2EQueryFinalFeeRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2EQueryFinalFeeRsp) ProtoMessage()               {}
func (*E2EQueryFinalFeeRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *E2EQueryFinalFeeRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2EQueryFinalFeeRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EQueryFinalFeeRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EQueryFinalFeeRsp) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2EQueryFinalFeeRsp) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

// 清算请求  0x0A010001
type E2ESettmentReq struct {
	SID              *string  `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32   `protobuf:"varint,2,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32   `protobuf:"varint,3,req,name=CustomerId" json:"CustomerId,omitempty"`
	FrmAccountId     *int32   `protobuf:"varint,4,req,name=FrmAccountId" json:"FrmAccountId,omitempty"`
	DstAccountId     *int32   `protobuf:"varint,5,req,name=DstAccountId" json:"DstAccountId,omitempty"`
	Direction        *int32   `protobuf:"varint,6,req,name=Direction" json:"Direction,omitempty"`
	Currency         *int32   `protobuf:"varint,7,req,name=Currency" json:"Currency,omitempty"`
	Amount           *float64 `protobuf:"fixed64,8,req,name=Amount" json:"Amount,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *E2ESettmentReq) Reset()                    { *m = E2ESettmentReq{} }
func (m *E2ESettmentReq) String() string            { return proto1.CompactTextString(m) }
func (*E2ESettmentReq) ProtoMessage()               {}
func (*E2ESettmentReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *E2ESettmentReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2ESettmentReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2ESettmentReq) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2ESettmentReq) GetFrmAccountId() int32 {
	if m != nil && m.FrmAccountId != nil {
		return *m.FrmAccountId
	}
	return 0
}

func (m *E2ESettmentReq) GetDstAccountId() int32 {
	if m != nil && m.DstAccountId != nil {
		return *m.DstAccountId
	}
	return 0
}

func (m *E2ESettmentReq) GetDirection() int32 {
	if m != nil && m.Direction != nil {
		return *m.Direction
	}
	return 0
}

func (m *E2ESettmentReq) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

func (m *E2ESettmentReq) GetAmount() float64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

// 清算回应  0x0A010002
type E2ESettmentRsp struct {
	SID              *string `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,2,req,name=LoginId" json:"LoginId,omitempty"`
	OperDate         *int64  `protobuf:"varint,3,req,name=OperDate" json:"OperDate,omitempty"`
	RetCode          *int32  `protobuf:"varint,4,req,name=RetCode" json:"RetCode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2ESettmentRsp) Reset()                    { *m = E2ESettmentRsp{} }
func (m *E2ESettmentRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2ESettmentRsp) ProtoMessage()               {}
func (*E2ESettmentRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *E2ESettmentRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2ESettmentRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2ESettmentRsp) GetOperDate() int64 {
	if m != nil && m.OperDate != nil {
		return *m.OperDate
	}
	return 0
}

func (m *E2ESettmentRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

// 清算结果查询请求  0x0A020001
type E2ESettmentResultReq struct {
	SID              *string  `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32   `protobuf:"varint,2,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32   `protobuf:"varint,3,req,name=CustomerId" json:"CustomerId,omitempty"`
	FrmAccountId     *int32   `protobuf:"varint,4,req,name=FrmAccountId" json:"FrmAccountId,omitempty"`
	DstAccountId     *int32   `protobuf:"varint,5,req,name=DstAccountId" json:"DstAccountId,omitempty"`
	Direction        *int32   `protobuf:"varint,6,req,name=Direction" json:"Direction,omitempty"`
	Currency         *int32   `protobuf:"varint,7,req,name=Currency" json:"Currency,omitempty"`
	Amount           *float64 `protobuf:"fixed64,8,req,name=Amount" json:"Amount,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *E2ESettmentResultReq) Reset()                    { *m = E2ESettmentResultReq{} }
func (m *E2ESettmentResultReq) String() string            { return proto1.CompactTextString(m) }
func (*E2ESettmentResultReq) ProtoMessage()               {}
func (*E2ESettmentResultReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *E2ESettmentResultReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2ESettmentResultReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2ESettmentResultReq) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2ESettmentResultReq) GetFrmAccountId() int32 {
	if m != nil && m.FrmAccountId != nil {
		return *m.FrmAccountId
	}
	return 0
}

func (m *E2ESettmentResultReq) GetDstAccountId() int32 {
	if m != nil && m.DstAccountId != nil {
		return *m.DstAccountId
	}
	return 0
}

func (m *E2ESettmentResultReq) GetDirection() int32 {
	if m != nil && m.Direction != nil {
		return *m.Direction
	}
	return 0
}

func (m *E2ESettmentResultReq) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

func (m *E2ESettmentResultReq) GetAmount() float64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

// 清算结果查询回应  0x0A020002
type E2ESettmentResultRsp struct {
	SID              *string `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,2,req,name=LoginId" json:"LoginId,omitempty"`
	RetCode          *int32  `protobuf:"varint,4,req,name=RetCode" json:"RetCode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2ESettmentResultRsp) Reset()                    { *m = E2ESettmentResultRsp{} }
func (m *E2ESettmentResultRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2ESettmentResultRsp) ProtoMessage()               {}
func (*E2ESettmentResultRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *E2ESettmentResultRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2ESettmentResultRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2ESettmentResultRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

// 转账请求  0x07020001
type E2ETransferReq struct {
	SID              *string  `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32   `protobuf:"varint,2,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32   `protobuf:"varint,3,req,name=CustomerId" json:"CustomerId,omitempty"`
	MemberId         *int32   `protobuf:"varint,4,req,name=MemberId" json:"MemberId,omitempty"`
	FrmAccountId     *int32   `protobuf:"varint,5,req,name=FrmAccountId" json:"FrmAccountId,omitempty"`
	DstAccountId     *int32   `protobuf:"varint,6,req,name=DstAccountId" json:"DstAccountId,omitempty"`
	Direction        *int32   `protobuf:"varint,7,req,name=Direction" json:"Direction,omitempty"`
	Currency         *int32   `protobuf:"varint,8,req,name=Currency" json:"Currency,omitempty"`
	Amount           *float64 `protobuf:"fixed64,9,req,name=Amount" json:"Amount,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *E2ETransferReq) Reset()                    { *m = E2ETransferReq{} }
func (m *E2ETransferReq) String() string            { return proto1.CompactTextString(m) }
func (*E2ETransferReq) ProtoMessage()               {}
func (*E2ETransferReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *E2ETransferReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2ETransferReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2ETransferReq) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2ETransferReq) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

func (m *E2ETransferReq) GetFrmAccountId() int32 {
	if m != nil && m.FrmAccountId != nil {
		return *m.FrmAccountId
	}
	return 0
}

func (m *E2ETransferReq) GetDstAccountId() int32 {
	if m != nil && m.DstAccountId != nil {
		return *m.DstAccountId
	}
	return 0
}

func (m *E2ETransferReq) GetDirection() int32 {
	if m != nil && m.Direction != nil {
		return *m.Direction
	}
	return 0
}

func (m *E2ETransferReq) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

func (m *E2ETransferReq) GetAmount() float64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

// 转账回应  0x07020002
type E2ETransferRsp struct {
	RetCode          *int32  `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID              *string `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,3,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32  `protobuf:"varint,4,req,name=CustomerId" json:"CustomerId,omitempty"`
	MemberId         *int32  `protobuf:"varint,5,req,name=MemberId" json:"MemberId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2ETransferRsp) Reset()                    { *m = E2ETransferRsp{} }
func (m *E2ETransferRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2ETransferRsp) ProtoMessage()               {}
func (*E2ETransferRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *E2ETransferRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2ETransferRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2ETransferRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2ETransferRsp) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2ETransferRsp) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

// 更新银行配置请求  0x03040003
type E2EUpdateBankConfReq struct {
	SID              *string `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,2,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32  `protobuf:"varint,3,req,name=CustomerId" json:"CustomerId,omitempty"`
	CustomerName     *string `protobuf:"bytes,4,req,name=CustomerName" json:"CustomerName,omitempty"`
	CustomerTel      *string `protobuf:"bytes,5,req,name=CustomerTel" json:"CustomerTel,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EUpdateBankConfReq) Reset()                    { *m = E2EUpdateBankConfReq{} }
func (m *E2EUpdateBankConfReq) String() string            { return proto1.CompactTextString(m) }
func (*E2EUpdateBankConfReq) ProtoMessage()               {}
func (*E2EUpdateBankConfReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *E2EUpdateBankConfReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EUpdateBankConfReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EUpdateBankConfReq) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2EUpdateBankConfReq) GetCustomerName() string {
	if m != nil && m.CustomerName != nil {
		return *m.CustomerName
	}
	return ""
}

func (m *E2EUpdateBankConfReq) GetCustomerTel() string {
	if m != nil && m.CustomerTel != nil {
		return *m.CustomerTel
	}
	return ""
}

// 更新银行配置回应  0x03040004
type E2EUpdateBankConfRsp struct {
	RetCode          *int32  `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID              *string `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,3,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32  `protobuf:"varint,4,req,name=CustomerId" json:"CustomerId,omitempty"`
	MemberId         *int32  `protobuf:"varint,5,req,name=MemberId" json:"MemberId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EUpdateBankConfRsp) Reset()                    { *m = E2EUpdateBankConfRsp{} }
func (m *E2EUpdateBankConfRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2EUpdateBankConfRsp) ProtoMessage()               {}
func (*E2EUpdateBankConfRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *E2EUpdateBankConfRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2EUpdateBankConfRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EUpdateBankConfRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EUpdateBankConfRsp) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2EUpdateBankConfRsp) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

// 单边账调整请求 0x0F010011
type E2EOneSideAccountAdjustReq struct {
	SID              *string `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,2,req,name=LoginId" json:"LoginId,omitempty"`
	MemberId         *int32  `protobuf:"varint,3,req,name=MemberId" json:"MemberId,omitempty"`
	AccountId        *int32  `protobuf:"varint,4,req,name=AccountId" json:"AccountId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EOneSideAccountAdjustReq) Reset()                    { *m = E2EOneSideAccountAdjustReq{} }
func (m *E2EOneSideAccountAdjustReq) String() string            { return proto1.CompactTextString(m) }
func (*E2EOneSideAccountAdjustReq) ProtoMessage()               {}
func (*E2EOneSideAccountAdjustReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *E2EOneSideAccountAdjustReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EOneSideAccountAdjustReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EOneSideAccountAdjustReq) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

func (m *E2EOneSideAccountAdjustReq) GetAccountId() int32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

// 单边账调整响应  0x0F010012
type E2EOneSideAccountAdjustRsp struct {
	RetCode          *int32  `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID              *string `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,3,req,name=LoginId" json:"LoginId,omitempty"`
	AccountId        *int32  `protobuf:"varint,4,req,name=AccountId" json:"AccountId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EOneSideAccountAdjustRsp) Reset()                    { *m = E2EOneSideAccountAdjustRsp{} }
func (m *E2EOneSideAccountAdjustRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2EOneSideAccountAdjustRsp) ProtoMessage()               {}
func (*E2EOneSideAccountAdjustRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *E2EOneSideAccountAdjustRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2EOneSideAccountAdjustRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EOneSideAccountAdjustRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EOneSideAccountAdjustRsp) GetAccountId() int32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

// 单边账审批请求 0x0F010013
type E2EOneSideAccountAuditReq struct {
	SID              *string `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,2,req,name=LoginId" json:"LoginId,omitempty"`
	MemberId         *int32  `protobuf:"varint,3,req,name=MemberId" json:"MemberId,omitempty"`
	AccountId        *int32  `protobuf:"varint,4,req,name=AccountId" json:"AccountId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EOneSideAccountAuditReq) Reset()                    { *m = E2EOneSideAccountAuditReq{} }
func (m *E2EOneSideAccountAuditReq) String() string            { return proto1.CompactTextString(m) }
func (*E2EOneSideAccountAuditReq) ProtoMessage()               {}
func (*E2EOneSideAccountAuditReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *E2EOneSideAccountAuditReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EOneSideAccountAuditReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EOneSideAccountAuditReq) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

func (m *E2EOneSideAccountAuditReq) GetAccountId() int32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

// 单边账审批响应 0x0F010014
type E2EOneSideAccountAuditRsp struct {
	RetCode          *int32  `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID              *string `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,3,req,name=LoginId" json:"LoginId,omitempty"`
	AccountId        *int32  `protobuf:"varint,4,req,name=AccountId" json:"AccountId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EOneSideAccountAuditRsp) Reset()                    { *m = E2EOneSideAccountAuditRsp{} }
func (m *E2EOneSideAccountAuditRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2EOneSideAccountAuditRsp) ProtoMessage()               {}
func (*E2EOneSideAccountAuditRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *E2EOneSideAccountAuditRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2EOneSideAccountAuditRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EOneSideAccountAuditRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EOneSideAccountAuditRsp) GetAccountId() int32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

// 结息请求   0x0F010017
type E2EInterestSettlementReq struct {
	SID              *string  `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32   `protobuf:"varint,2,req,name=LoginId" json:"LoginId,omitempty"`
	MemberId         *int32   `protobuf:"varint,3,req,name=MemberId" json:"MemberId,omitempty"`
	UserId           *int32   `protobuf:"varint,4,req,name=UserId" json:"UserId,omitempty"`
	CustomerId       *int32   `protobuf:"varint,5,req,name=CustomerId" json:"CustomerId,omitempty"`
	Amount           *float64 `protobuf:"fixed64,6,req,name=Amount" json:"Amount,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *E2EInterestSettlementReq) Reset()                    { *m = E2EInterestSettlementReq{} }
func (m *E2EInterestSettlementReq) String() string            { return proto1.CompactTextString(m) }
func (*E2EInterestSettlementReq) ProtoMessage()               {}
func (*E2EInterestSettlementReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *E2EInterestSettlementReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EInterestSettlementReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EInterestSettlementReq) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

func (m *E2EInterestSettlementReq) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EInterestSettlementReq) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2EInterestSettlementReq) GetAmount() float64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

// 结息响应  0x0F010018
type E2EInterestSettlementRsp struct {
	RetCode          *int32  `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID              *string `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,3,req,name=LoginId" json:"LoginId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EInterestSettlementRsp) Reset()                    { *m = E2EInterestSettlementRsp{} }
func (m *E2EInterestSettlementRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2EInterestSettlementRsp) ProtoMessage()               {}
func (*E2EInterestSettlementRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *E2EInterestSettlementRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2EInterestSettlementRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EInterestSettlementRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

// 手续费结转操作请求  0x0F010015
type E2ECommissionCarryOverReq struct {
	SID              *string `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,2,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32  `protobuf:"varint,3,req,name=CustomerId" json:"CustomerId,omitempty"`
	UserId           *int32  `protobuf:"varint,4,req,name=UserId" json:"UserId,omitempty"`
	MemberId         *int32  `protobuf:"varint,5,req,name=MemberId" json:"MemberId,omitempty"`
	SysFlow          *string `protobuf:"bytes,6,req,name=SysFlow" json:"SysFlow,omitempty"`
	OperType         *int32  `protobuf:"varint,7,req,name=OperType" json:"OperType,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2ECommissionCarryOverReq) Reset()                    { *m = E2ECommissionCarryOverReq{} }
func (m *E2ECommissionCarryOverReq) String() string            { return proto1.CompactTextString(m) }
func (*E2ECommissionCarryOverReq) ProtoMessage()               {}
func (*E2ECommissionCarryOverReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *E2ECommissionCarryOverReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2ECommissionCarryOverReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2ECommissionCarryOverReq) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2ECommissionCarryOverReq) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2ECommissionCarryOverReq) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

func (m *E2ECommissionCarryOverReq) GetSysFlow() string {
	if m != nil && m.SysFlow != nil {
		return *m.SysFlow
	}
	return ""
}

func (m *E2ECommissionCarryOverReq) GetOperType() int32 {
	if m != nil && m.OperType != nil {
		return *m.OperType
	}
	return 0
}

// 手续费结转操作响应  0x0F010016
type E2ECommissionCarryOverRsp struct {
	RetCode          *int32  `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID              *string `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,3,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32  `protobuf:"varint,4,req,name=CustomerId" json:"CustomerId,omitempty"`
	UserId           *int32  `protobuf:"varint,5,req,name=UserId" json:"UserId,omitempty"`
	MemberId         *int32  `protobuf:"varint,6,req,name=MemberId" json:"MemberId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2ECommissionCarryOverRsp) Reset()                    { *m = E2ECommissionCarryOverRsp{} }
func (m *E2ECommissionCarryOverRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2ECommissionCarryOverRsp) ProtoMessage()               {}
func (*E2ECommissionCarryOverRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *E2ECommissionCarryOverRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2ECommissionCarryOverRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2ECommissionCarryOverRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2ECommissionCarryOverRsp) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2ECommissionCarryOverRsp) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2ECommissionCarryOverRsp) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

// 查询可返还金额请求 0x0F010019
type E2EQueryPaybackMoneyReq struct {
	SID              *string `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,2,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32  `protobuf:"varint,3,req,name=CustomerId" json:"CustomerId,omitempty"`
	UserId           *int32  `protobuf:"varint,4,req,name=UserId" json:"UserId,omitempty"`
	MemberId         *int32  `protobuf:"varint,5,req,name=MemberId" json:"MemberId,omitempty"`
	Type             *int32  `protobuf:"varint,6,req,name=Type" json:"Type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EQueryPaybackMoneyReq) Reset()                    { *m = E2EQueryPaybackMoneyReq{} }
func (m *E2EQueryPaybackMoneyReq) String() string            { return proto1.CompactTextString(m) }
func (*E2EQueryPaybackMoneyReq) ProtoMessage()               {}
func (*E2EQueryPaybackMoneyReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

func (m *E2EQueryPaybackMoneyReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EQueryPaybackMoneyReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EQueryPaybackMoneyReq) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2EQueryPaybackMoneyReq) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EQueryPaybackMoneyReq) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

func (m *E2EQueryPaybackMoneyReq) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

// 查询可返还金额回应 0x0F01001A
type E2EQueryPaybackMoneyRsp struct {
	RetCode          *int32   `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID              *string  `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32   `protobuf:"varint,3,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32   `protobuf:"varint,4,req,name=CustomerId" json:"CustomerId,omitempty"`
	UserId           *int32   `protobuf:"varint,5,req,name=UserId" json:"UserId,omitempty"`
	MemberId         *int32   `protobuf:"varint,6,req,name=MemberId" json:"MemberId,omitempty"`
	MaxPaybackMoney  *float64 `protobuf:"fixed64,7,req,name=MaxPaybackMoney" json:"MaxPaybackMoney,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *E2EQueryPaybackMoneyRsp) Reset()                    { *m = E2EQueryPaybackMoneyRsp{} }
func (m *E2EQueryPaybackMoneyRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2EQueryPaybackMoneyRsp) ProtoMessage()               {}
func (*E2EQueryPaybackMoneyRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

func (m *E2EQueryPaybackMoneyRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2EQueryPaybackMoneyRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EQueryPaybackMoneyRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EQueryPaybackMoneyRsp) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2EQueryPaybackMoneyRsp) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EQueryPaybackMoneyRsp) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

func (m *E2EQueryPaybackMoneyRsp) GetMaxPaybackMoney() float64 {
	if m != nil && m.MaxPaybackMoney != nil {
		return *m.MaxPaybackMoney
	}
	return 0
}

// 返还金额请求 0x0F01001B
type E2EPaybackMoneyReq struct {
	SID              *string  `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32   `protobuf:"varint,2,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32   `protobuf:"varint,3,req,name=CustomerId" json:"CustomerId,omitempty"`
	UserId           *int32   `protobuf:"varint,4,req,name=UserId" json:"UserId,omitempty"`
	MemberId         *int32   `protobuf:"varint,5,req,name=MemberId" json:"MemberId,omitempty"`
	Type             *int32   `protobuf:"varint,6,req,name=Type" json:"Type,omitempty"`
	PayeeId          *string  `protobuf:"bytes,7,req,name=PayeeId" json:"PayeeId,omitempty"`
	PaybackMoney     *float64 `protobuf:"fixed64,8,req,name=PaybackMoney" json:"PaybackMoney,omitempty"`
	PaybackDesc      *string  `protobuf:"bytes,9,req,name=PaybackDesc" json:"PaybackDesc,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *E2EPaybackMoneyReq) Reset()                    { *m = E2EPaybackMoneyReq{} }
func (m *E2EPaybackMoneyReq) String() string            { return proto1.CompactTextString(m) }
func (*E2EPaybackMoneyReq) ProtoMessage()               {}
func (*E2EPaybackMoneyReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{52} }

func (m *E2EPaybackMoneyReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EPaybackMoneyReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EPaybackMoneyReq) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2EPaybackMoneyReq) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EPaybackMoneyReq) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

func (m *E2EPaybackMoneyReq) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *E2EPaybackMoneyReq) GetPayeeId() string {
	if m != nil && m.PayeeId != nil {
		return *m.PayeeId
	}
	return ""
}

func (m *E2EPaybackMoneyReq) GetPaybackMoney() float64 {
	if m != nil && m.PaybackMoney != nil {
		return *m.PaybackMoney
	}
	return 0
}

func (m *E2EPaybackMoneyReq) GetPaybackDesc() string {
	if m != nil && m.PaybackDesc != nil {
		return *m.PaybackDesc
	}
	return ""
}

// 返还金额回应 0x0F01001C
type E2EPaybackMoneyRsp struct {
	RetCode          *int32  `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID              *string `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,3,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32  `protobuf:"varint,4,req,name=CustomerId" json:"CustomerId,omitempty"`
	UserId           *int32  `protobuf:"varint,5,req,name=UserId" json:"UserId,omitempty"`
	MemberId         *int32  `protobuf:"varint,6,req,name=MemberId" json:"MemberId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EPaybackMoneyRsp) Reset()                    { *m = E2EPaybackMoneyRsp{} }
func (m *E2EPaybackMoneyRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2EPaybackMoneyRsp) ProtoMessage()               {}
func (*E2EPaybackMoneyRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{53} }

func (m *E2EPaybackMoneyRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2EPaybackMoneyRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EPaybackMoneyRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EPaybackMoneyRsp) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2EPaybackMoneyRsp) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EPaybackMoneyRsp) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

// 核算退费申请请求 0x0F01001D
type E2EPaybackMoneyApplyReq struct {
	SID              *string  `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32   `protobuf:"varint,2,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32   `protobuf:"varint,3,req,name=CustomerId" json:"CustomerId,omitempty"`
	UserId           *int32   `protobuf:"varint,4,req,name=UserId" json:"UserId,omitempty"`
	MemberId         *int32   `protobuf:"varint,5,req,name=MemberId" json:"MemberId,omitempty"`
	Type             *int32   `protobuf:"varint,6,req,name=Type" json:"Type,omitempty"`
	PayeeId          *string  `protobuf:"bytes,7,req,name=PayeeId" json:"PayeeId,omitempty"`
	PaybackMoney     *float64 `protobuf:"fixed64,8,req,name=PaybackMoney" json:"PaybackMoney,omitempty"`
	PaybackDesc      *string  `protobuf:"bytes,9,req,name=PaybackDesc" json:"PaybackDesc,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *E2EPaybackMoneyApplyReq) Reset()                    { *m = E2EPaybackMoneyApplyReq{} }
func (m *E2EPaybackMoneyApplyReq) String() string            { return proto1.CompactTextString(m) }
func (*E2EPaybackMoneyApplyReq) ProtoMessage()               {}
func (*E2EPaybackMoneyApplyReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{54} }

func (m *E2EPaybackMoneyApplyReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EPaybackMoneyApplyReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EPaybackMoneyApplyReq) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2EPaybackMoneyApplyReq) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EPaybackMoneyApplyReq) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

func (m *E2EPaybackMoneyApplyReq) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *E2EPaybackMoneyApplyReq) GetPayeeId() string {
	if m != nil && m.PayeeId != nil {
		return *m.PayeeId
	}
	return ""
}

func (m *E2EPaybackMoneyApplyReq) GetPaybackMoney() float64 {
	if m != nil && m.PaybackMoney != nil {
		return *m.PaybackMoney
	}
	return 0
}

func (m *E2EPaybackMoneyApplyReq) GetPaybackDesc() string {
	if m != nil && m.PaybackDesc != nil {
		return *m.PaybackDesc
	}
	return ""
}

// 核算退费申请回应 0x0F01001E
type E2EPaybackMoneyApplyRsp struct {
	RetCode          *int32  `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID              *string `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,3,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32  `protobuf:"varint,4,req,name=CustomerId" json:"CustomerId,omitempty"`
	UserId           *int32  `protobuf:"varint,5,req,name=UserId" json:"UserId,omitempty"`
	MemberId         *int32  `protobuf:"varint,6,req,name=MemberId" json:"MemberId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EPaybackMoneyApplyRsp) Reset()                    { *m = E2EPaybackMoneyApplyRsp{} }
func (m *E2EPaybackMoneyApplyRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2EPaybackMoneyApplyRsp) ProtoMessage()               {}
func (*E2EPaybackMoneyApplyRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{55} }

func (m *E2EPaybackMoneyApplyRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2EPaybackMoneyApplyRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EPaybackMoneyApplyRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EPaybackMoneyApplyRsp) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2EPaybackMoneyApplyRsp) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EPaybackMoneyApplyRsp) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

// 核算退费复核请求 0x0F01001F
type E2EPaybackMoneyReviewReq struct {
	SID              *string `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,2,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32  `protobuf:"varint,3,req,name=CustomerId" json:"CustomerId,omitempty"`
	UserId           *int32  `protobuf:"varint,4,req,name=UserId" json:"UserId,omitempty"`
	MemberId         *int32  `protobuf:"varint,5,req,name=MemberId" json:"MemberId,omitempty"`
	LogId            *int64  `protobuf:"varint,6,req,name=LogId" json:"LogId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EPaybackMoneyReviewReq) Reset()                    { *m = E2EPaybackMoneyReviewReq{} }
func (m *E2EPaybackMoneyReviewReq) String() string            { return proto1.CompactTextString(m) }
func (*E2EPaybackMoneyReviewReq) ProtoMessage()               {}
func (*E2EPaybackMoneyReviewReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{56} }

func (m *E2EPaybackMoneyReviewReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EPaybackMoneyReviewReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EPaybackMoneyReviewReq) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2EPaybackMoneyReviewReq) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EPaybackMoneyReviewReq) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

func (m *E2EPaybackMoneyReviewReq) GetLogId() int64 {
	if m != nil && m.LogId != nil {
		return *m.LogId
	}
	return 0
}

// 核算退费复核回应 0x0F010020
type E2EPaybackMoneyReviewRsp struct {
	RetCode          *int32  `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID              *string `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,3,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32  `protobuf:"varint,4,req,name=CustomerId" json:"CustomerId,omitempty"`
	UserId           *int32  `protobuf:"varint,5,req,name=UserId" json:"UserId,omitempty"`
	MemberId         *int32  `protobuf:"varint,6,req,name=MemberId" json:"MemberId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EPaybackMoneyReviewRsp) Reset()                    { *m = E2EPaybackMoneyReviewRsp{} }
func (m *E2EPaybackMoneyReviewRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2EPaybackMoneyReviewRsp) ProtoMessage()               {}
func (*E2EPaybackMoneyReviewRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{57} }

func (m *E2EPaybackMoneyReviewRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2EPaybackMoneyReviewRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EPaybackMoneyReviewRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EPaybackMoneyReviewRsp) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2EPaybackMoneyReviewRsp) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EPaybackMoneyReviewRsp) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

// 核算退费不通过请求 0x0F010021
type E2EPaybackMoneyNoPassReq struct {
	SID              *string `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,2,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32  `protobuf:"varint,3,req,name=CustomerId" json:"CustomerId,omitempty"`
	UserId           *int32  `protobuf:"varint,4,req,name=UserId" json:"UserId,omitempty"`
	MemberId         *int32  `protobuf:"varint,5,req,name=MemberId" json:"MemberId,omitempty"`
	LogId            *int64  `protobuf:"varint,6,req,name=LogId" json:"LogId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EPaybackMoneyNoPassReq) Reset()                    { *m = E2EPaybackMoneyNoPassReq{} }
func (m *E2EPaybackMoneyNoPassReq) String() string            { return proto1.CompactTextString(m) }
func (*E2EPaybackMoneyNoPassReq) ProtoMessage()               {}
func (*E2EPaybackMoneyNoPassReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{58} }

func (m *E2EPaybackMoneyNoPassReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EPaybackMoneyNoPassReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EPaybackMoneyNoPassReq) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2EPaybackMoneyNoPassReq) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EPaybackMoneyNoPassReq) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

func (m *E2EPaybackMoneyNoPassReq) GetLogId() int64 {
	if m != nil && m.LogId != nil {
		return *m.LogId
	}
	return 0
}

// 核算退费不通过回应 0x0F010022
type E2EPaybackMoneyNoPassRsp struct {
	RetCode          *int32  `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID              *string `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,3,req,name=LoginId" json:"LoginId,omitempty"`
	CustomerId       *int32  `protobuf:"varint,4,req,name=CustomerId" json:"CustomerId,omitempty"`
	UserId           *int32  `protobuf:"varint,5,req,name=UserId" json:"UserId,omitempty"`
	MemberId         *int32  `protobuf:"varint,6,req,name=MemberId" json:"MemberId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EPaybackMoneyNoPassRsp) Reset()                    { *m = E2EPaybackMoneyNoPassRsp{} }
func (m *E2EPaybackMoneyNoPassRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2EPaybackMoneyNoPassRsp) ProtoMessage()               {}
func (*E2EPaybackMoneyNoPassRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{59} }

func (m *E2EPaybackMoneyNoPassRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2EPaybackMoneyNoPassRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EPaybackMoneyNoPassRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EPaybackMoneyNoPassRsp) GetCustomerId() int32 {
	if m != nil && m.CustomerId != nil {
		return *m.CustomerId
	}
	return 0
}

func (m *E2EPaybackMoneyNoPassRsp) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EPaybackMoneyNoPassRsp) GetMemberId() int32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

// 交易系统查询清算结果和清算状态
// ///////////////////////////////////////////
// 清算处理环节查询请求  0x0F0E0001
type E2EClearingProcessLinkQueryReq struct {
	SID              *string `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,2,req,name=LoginId" json:"LoginId,omitempty"`
	UserId           *int32  `protobuf:"varint,3,req,name=UserId" json:"UserId,omitempty"`
	UserType         *int32  `protobuf:"varint,4,req,name=UserType" json:"UserType,omitempty"`
	BankId           *int32  `protobuf:"varint,5,req,name=BankId" json:"BankId,omitempty"`
	ClearingDate     *int64  `protobuf:"varint,6,req,name=ClearingDate" json:"ClearingDate,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EClearingProcessLinkQueryReq) Reset()                    { *m = E2EClearingProcessLinkQueryReq{} }
func (m *E2EClearingProcessLinkQueryReq) String() string            { return proto1.CompactTextString(m) }
func (*E2EClearingProcessLinkQueryReq) ProtoMessage()               {}
func (*E2EClearingProcessLinkQueryReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{60} }

func (m *E2EClearingProcessLinkQueryReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EClearingProcessLinkQueryReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EClearingProcessLinkQueryReq) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EClearingProcessLinkQueryReq) GetUserType() int32 {
	if m != nil && m.UserType != nil {
		return *m.UserType
	}
	return 0
}

func (m *E2EClearingProcessLinkQueryReq) GetBankId() int32 {
	if m != nil && m.BankId != nil {
		return *m.BankId
	}
	return 0
}

func (m *E2EClearingProcessLinkQueryReq) GetClearingDate() int64 {
	if m != nil && m.ClearingDate != nil {
		return *m.ClearingDate
	}
	return 0
}

// 清算处理环节查询响应  0x0F0E0002
type E2EClearingProcessLinkQueryRsp struct {
	RetCode          *int32  `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID              *string `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,3,req,name=LoginId" json:"LoginId,omitempty"`
	PackageFlag      *int32  `protobuf:"varint,4,req,name=PackageFlag,def=1" json:"PackageFlag,omitempty"`
	PackageNum       *int32  `protobuf:"varint,5,req,name=PackageNum,def=1" json:"PackageNum,omitempty"`
	ClearingLink     *int32  `protobuf:"varint,6,req,name=ClearingLink" json:"ClearingLink,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EClearingProcessLinkQueryRsp) Reset()                    { *m = E2EClearingProcessLinkQueryRsp{} }
func (m *E2EClearingProcessLinkQueryRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2EClearingProcessLinkQueryRsp) ProtoMessage()               {}
func (*E2EClearingProcessLinkQueryRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{61} }

const Default_E2EClearingProcessLinkQueryRsp_PackageFlag int32 = 1
const Default_E2EClearingProcessLinkQueryRsp_PackageNum int32 = 1

func (m *E2EClearingProcessLinkQueryRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2EClearingProcessLinkQueryRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EClearingProcessLinkQueryRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EClearingProcessLinkQueryRsp) GetPackageFlag() int32 {
	if m != nil && m.PackageFlag != nil {
		return *m.PackageFlag
	}
	return Default_E2EClearingProcessLinkQueryRsp_PackageFlag
}

func (m *E2EClearingProcessLinkQueryRsp) GetPackageNum() int32 {
	if m != nil && m.PackageNum != nil {
		return *m.PackageNum
	}
	return Default_E2EClearingProcessLinkQueryRsp_PackageNum
}

func (m *E2EClearingProcessLinkQueryRsp) GetClearingLink() int32 {
	if m != nil && m.ClearingLink != nil {
		return *m.ClearingLink
	}
	return 0
}

// 清算处理环节配置查询请求 0x0F0E0003
type E2EClearingProcessQueryReq struct {
	SID              *string `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,2,req,name=LoginId" json:"LoginId,omitempty"`
	UserId           *int32  `protobuf:"varint,3,req,name=UserId" json:"UserId,omitempty"`
	UserType         *int32  `protobuf:"varint,4,req,name=UserType" json:"UserType,omitempty"`
	BankId           *int32  `protobuf:"varint,5,req,name=BankId" json:"BankId,omitempty"`
	ClearingDate     *int64  `protobuf:"varint,6,req,name=ClearingDate" json:"ClearingDate,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EClearingProcessQueryReq) Reset()                    { *m = E2EClearingProcessQueryReq{} }
func (m *E2EClearingProcessQueryReq) String() string            { return proto1.CompactTextString(m) }
func (*E2EClearingProcessQueryReq) ProtoMessage()               {}
func (*E2EClearingProcessQueryReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{62} }

func (m *E2EClearingProcessQueryReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EClearingProcessQueryReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EClearingProcessQueryReq) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EClearingProcessQueryReq) GetUserType() int32 {
	if m != nil && m.UserType != nil {
		return *m.UserType
	}
	return 0
}

func (m *E2EClearingProcessQueryReq) GetBankId() int32 {
	if m != nil && m.BankId != nil {
		return *m.BankId
	}
	return 0
}

func (m *E2EClearingProcessQueryReq) GetClearingDate() int64 {
	if m != nil && m.ClearingDate != nil {
		return *m.ClearingDate
	}
	return 0
}

// 清算处理环节配置查询响应 0x0F0E0004
type E2EClearingProcessQueryRsp struct {
	RetCode                  *int32                                                  `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID                      *string                                                 `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	LoginId                  *int32                                                  `protobuf:"varint,3,req,name=LoginId" json:"LoginId,omitempty"`
	PackageFlag              *int32                                                  `protobuf:"varint,4,req,name=PackageFlag,def=1" json:"PackageFlag,omitempty"`
	PackageNum               *int32                                                  `protobuf:"varint,5,req,name=PackageNum,def=1" json:"PackageNum,omitempty"`
	ClearingProcessQueryList []*E2EClearingProcessQueryRsp_ClearingProcessQueryGroup `protobuf:"bytes,6,rep,name=ClearingProcessQueryList" json:"ClearingProcessQueryList,omitempty"`
	XXX_unrecognized         []byte                                                  `json:"-"`
}

func (m *E2EClearingProcessQueryRsp) Reset()                    { *m = E2EClearingProcessQueryRsp{} }
func (m *E2EClearingProcessQueryRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2EClearingProcessQueryRsp) ProtoMessage()               {}
func (*E2EClearingProcessQueryRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{63} }

const Default_E2EClearingProcessQueryRsp_PackageFlag int32 = 1
const Default_E2EClearingProcessQueryRsp_PackageNum int32 = 1

func (m *E2EClearingProcessQueryRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2EClearingProcessQueryRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EClearingProcessQueryRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EClearingProcessQueryRsp) GetPackageFlag() int32 {
	if m != nil && m.PackageFlag != nil {
		return *m.PackageFlag
	}
	return Default_E2EClearingProcessQueryRsp_PackageFlag
}

func (m *E2EClearingProcessQueryRsp) GetPackageNum() int32 {
	if m != nil && m.PackageNum != nil {
		return *m.PackageNum
	}
	return Default_E2EClearingProcessQueryRsp_PackageNum
}

func (m *E2EClearingProcessQueryRsp) GetClearingProcessQueryList() []*E2EClearingProcessQueryRsp_ClearingProcessQueryGroup {
	if m != nil {
		return m.ClearingProcessQueryList
	}
	return nil
}

type E2EClearingProcessQueryRsp_ClearingProcessQueryGroup struct {
	ClearingLink         *int32  `protobuf:"varint,1,req,name=ClearingLink" json:"ClearingLink,omitempty"`
	ProcessStatus        *int32  `protobuf:"varint,2,req,name=ProcessStatus" json:"ProcessStatus,omitempty"`
	StartTime            *string `protobuf:"bytes,3,req,name=StartTime" json:"StartTime,omitempty"`
	EndTime              *string `protobuf:"bytes,4,req,name=EndTime" json:"EndTime,omitempty"`
	IsNeedRepeatClearing *int32  `protobuf:"varint,5,req,name=IsNeedRepeatClearing" json:"IsNeedRepeatClearing,omitempty"`
	ClearingCount        *int32  `protobuf:"varint,6,req,name=ClearingCount" json:"ClearingCount,omitempty"`
	XXX_unrecognized     []byte  `json:"-"`
}

func (m *E2EClearingProcessQueryRsp_ClearingProcessQueryGroup) Reset() {
	*m = E2EClearingProcessQueryRsp_ClearingProcessQueryGroup{}
}
func (m *E2EClearingProcessQueryRsp_ClearingProcessQueryGroup) String() string {
	return proto1.CompactTextString(m)
}
func (*E2EClearingProcessQueryRsp_ClearingProcessQueryGroup) ProtoMessage() {}
func (*E2EClearingProcessQueryRsp_ClearingProcessQueryGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{63, 0}
}

func (m *E2EClearingProcessQueryRsp_ClearingProcessQueryGroup) GetClearingLink() int32 {
	if m != nil && m.ClearingLink != nil {
		return *m.ClearingLink
	}
	return 0
}

func (m *E2EClearingProcessQueryRsp_ClearingProcessQueryGroup) GetProcessStatus() int32 {
	if m != nil && m.ProcessStatus != nil {
		return *m.ProcessStatus
	}
	return 0
}

func (m *E2EClearingProcessQueryRsp_ClearingProcessQueryGroup) GetStartTime() string {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return ""
}

func (m *E2EClearingProcessQueryRsp_ClearingProcessQueryGroup) GetEndTime() string {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return ""
}

func (m *E2EClearingProcessQueryRsp_ClearingProcessQueryGroup) GetIsNeedRepeatClearing() int32 {
	if m != nil && m.IsNeedRepeatClearing != nil {
		return *m.IsNeedRepeatClearing
	}
	return 0
}

func (m *E2EClearingProcessQueryRsp_ClearingProcessQueryGroup) GetClearingCount() int32 {
	if m != nil && m.ClearingCount != nil {
		return *m.ClearingCount
	}
	return 0
}

// 清算报表结算会员数据查询请求  0x0F0E0005
type E2EClearSettleDataQueryReq struct {
	SID              *string `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,2,req,name=LoginId" json:"LoginId,omitempty"`
	UserId           *int32  `protobuf:"varint,3,req,name=UserId" json:"UserId,omitempty"`
	UserType         *int32  `protobuf:"varint,4,req,name=UserType" json:"UserType,omitempty"`
	BankId           *int32  `protobuf:"varint,5,req,name=BankId" json:"BankId,omitempty"`
	ClearingDate     *int64  `protobuf:"varint,6,req,name=ClearingDate" json:"ClearingDate,omitempty"`
	BeginRow         *int32  `protobuf:"varint,7,req,name=BeginRow" json:"BeginRow,omitempty"`
	EndRow           *int32  `protobuf:"varint,8,req,name=EndRow" json:"EndRow,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EClearSettleDataQueryReq) Reset()                    { *m = E2EClearSettleDataQueryReq{} }
func (m *E2EClearSettleDataQueryReq) String() string            { return proto1.CompactTextString(m) }
func (*E2EClearSettleDataQueryReq) ProtoMessage()               {}
func (*E2EClearSettleDataQueryReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{64} }

func (m *E2EClearSettleDataQueryReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EClearSettleDataQueryReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EClearSettleDataQueryReq) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EClearSettleDataQueryReq) GetUserType() int32 {
	if m != nil && m.UserType != nil {
		return *m.UserType
	}
	return 0
}

func (m *E2EClearSettleDataQueryReq) GetBankId() int32 {
	if m != nil && m.BankId != nil {
		return *m.BankId
	}
	return 0
}

func (m *E2EClearSettleDataQueryReq) GetClearingDate() int64 {
	if m != nil && m.ClearingDate != nil {
		return *m.ClearingDate
	}
	return 0
}

func (m *E2EClearSettleDataQueryReq) GetBeginRow() int32 {
	if m != nil && m.BeginRow != nil {
		return *m.BeginRow
	}
	return 0
}

func (m *E2EClearSettleDataQueryReq) GetEndRow() int32 {
	if m != nil && m.EndRow != nil {
		return *m.EndRow
	}
	return 0
}

// 清算报表结算会员数据查询响应  0x0F0E0006
type E2EClearSettleDataQueryRsp struct {
	RetCode             *int32                                             `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID                 *string                                            `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	LoginId             *int32                                             `protobuf:"varint,3,req,name=LoginId" json:"LoginId,omitempty"`
	PackageFlag         *int32                                             `protobuf:"varint,4,req,name=PackageFlag,def=1" json:"PackageFlag,omitempty"`
	PackageNum          *int32                                             `protobuf:"varint,5,req,name=PackageNum,def=1" json:"PackageNum,omitempty"`
	AllRecordNum        *int32                                             `protobuf:"varint,6,req,name=AllRecordNum" json:"AllRecordNum,omitempty"`
	ClearSettleDataList []*E2EClearSettleDataQueryRsp_ClearSettleDataGroup `protobuf:"bytes,7,rep,name=ClearSettleDataList" json:"ClearSettleDataList,omitempty"`
	XXX_unrecognized    []byte                                             `json:"-"`
}

func (m *E2EClearSettleDataQueryRsp) Reset()                    { *m = E2EClearSettleDataQueryRsp{} }
func (m *E2EClearSettleDataQueryRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2EClearSettleDataQueryRsp) ProtoMessage()               {}
func (*E2EClearSettleDataQueryRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{65} }

const Default_E2EClearSettleDataQueryRsp_PackageFlag int32 = 1
const Default_E2EClearSettleDataQueryRsp_PackageNum int32 = 1

func (m *E2EClearSettleDataQueryRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2EClearSettleDataQueryRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EClearSettleDataQueryRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EClearSettleDataQueryRsp) GetPackageFlag() int32 {
	if m != nil && m.PackageFlag != nil {
		return *m.PackageFlag
	}
	return Default_E2EClearSettleDataQueryRsp_PackageFlag
}

func (m *E2EClearSettleDataQueryRsp) GetPackageNum() int32 {
	if m != nil && m.PackageNum != nil {
		return *m.PackageNum
	}
	return Default_E2EClearSettleDataQueryRsp_PackageNum
}

func (m *E2EClearSettleDataQueryRsp) GetAllRecordNum() int32 {
	if m != nil && m.AllRecordNum != nil {
		return *m.AllRecordNum
	}
	return 0
}

func (m *E2EClearSettleDataQueryRsp) GetClearSettleDataList() []*E2EClearSettleDataQueryRsp_ClearSettleDataGroup {
	if m != nil {
		return m.ClearSettleDataList
	}
	return nil
}

type E2EClearSettleDataQueryRsp_ClearSettleDataGroup struct {
	MemberNumber     *string  `protobuf:"bytes,1,req,name=MemberNumber" json:"MemberNumber,omitempty"`
	MemberName       *string  `protobuf:"bytes,2,req,name=MemberName" json:"MemberName,omitempty"`
	GainAndLoss      *float64 `protobuf:"fixed64,3,req,name=GainAndLoss" json:"GainAndLoss,omitempty"`
	LateFee          *float64 `protobuf:"fixed64,4,req,name=LateFee" json:"LateFee,omitempty"`
	TradeAmount      *float64 `protobuf:"fixed64,5,req,name=TradeAmount" json:"TradeAmount,omitempty"`
	Commission       *float64 `protobuf:"fixed64,6,req,name=Commission" json:"Commission,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *E2EClearSettleDataQueryRsp_ClearSettleDataGroup) Reset() {
	*m = E2EClearSettleDataQueryRsp_ClearSettleDataGroup{}
}
func (m *E2EClearSettleDataQueryRsp_ClearSettleDataGroup) String() string {
	return proto1.CompactTextString(m)
}
func (*E2EClearSettleDataQueryRsp_ClearSettleDataGroup) ProtoMessage() {}
func (*E2EClearSettleDataQueryRsp_ClearSettleDataGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{65, 0}
}

func (m *E2EClearSettleDataQueryRsp_ClearSettleDataGroup) GetMemberNumber() string {
	if m != nil && m.MemberNumber != nil {
		return *m.MemberNumber
	}
	return ""
}

func (m *E2EClearSettleDataQueryRsp_ClearSettleDataGroup) GetMemberName() string {
	if m != nil && m.MemberName != nil {
		return *m.MemberName
	}
	return ""
}

func (m *E2EClearSettleDataQueryRsp_ClearSettleDataGroup) GetGainAndLoss() float64 {
	if m != nil && m.GainAndLoss != nil {
		return *m.GainAndLoss
	}
	return 0
}

func (m *E2EClearSettleDataQueryRsp_ClearSettleDataGroup) GetLateFee() float64 {
	if m != nil && m.LateFee != nil {
		return *m.LateFee
	}
	return 0
}

func (m *E2EClearSettleDataQueryRsp_ClearSettleDataGroup) GetTradeAmount() float64 {
	if m != nil && m.TradeAmount != nil {
		return *m.TradeAmount
	}
	return 0
}

func (m *E2EClearSettleDataQueryRsp_ClearSettleDataGroup) GetCommission() float64 {
	if m != nil && m.Commission != nil {
		return *m.Commission
	}
	return 0
}

// 清算报表综合会员数据查询请求  0x0F0E0007
type E2EClearMultiDataQueryReq struct {
	SID              *string `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,2,req,name=LoginId" json:"LoginId,omitempty"`
	UserId           *int32  `protobuf:"varint,3,req,name=UserId" json:"UserId,omitempty"`
	UserType         *int32  `protobuf:"varint,4,req,name=UserType" json:"UserType,omitempty"`
	BankId           *int32  `protobuf:"varint,5,req,name=BankId" json:"BankId,omitempty"`
	ClearingDate     *int64  `protobuf:"varint,6,req,name=ClearingDate" json:"ClearingDate,omitempty"`
	BeginRow         *int32  `protobuf:"varint,7,req,name=BeginRow" json:"BeginRow,omitempty"`
	EndRow           *int32  `protobuf:"varint,8,req,name=EndRow" json:"EndRow,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EClearMultiDataQueryReq) Reset()                    { *m = E2EClearMultiDataQueryReq{} }
func (m *E2EClearMultiDataQueryReq) String() string            { return proto1.CompactTextString(m) }
func (*E2EClearMultiDataQueryReq) ProtoMessage()               {}
func (*E2EClearMultiDataQueryReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{66} }

func (m *E2EClearMultiDataQueryReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EClearMultiDataQueryReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EClearMultiDataQueryReq) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EClearMultiDataQueryReq) GetUserType() int32 {
	if m != nil && m.UserType != nil {
		return *m.UserType
	}
	return 0
}

func (m *E2EClearMultiDataQueryReq) GetBankId() int32 {
	if m != nil && m.BankId != nil {
		return *m.BankId
	}
	return 0
}

func (m *E2EClearMultiDataQueryReq) GetClearingDate() int64 {
	if m != nil && m.ClearingDate != nil {
		return *m.ClearingDate
	}
	return 0
}

func (m *E2EClearMultiDataQueryReq) GetBeginRow() int32 {
	if m != nil && m.BeginRow != nil {
		return *m.BeginRow
	}
	return 0
}

func (m *E2EClearMultiDataQueryReq) GetEndRow() int32 {
	if m != nil && m.EndRow != nil {
		return *m.EndRow
	}
	return 0
}

// 清算报表综合会员数据查询响应  0x0F0E0008
type E2EClearMultiDataQueryRsp struct {
	RetCode            *int32                                           `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID                *string                                          `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	LoginId            *int32                                           `protobuf:"varint,3,req,name=LoginId" json:"LoginId,omitempty"`
	PackageFlag        *int32                                           `protobuf:"varint,4,req,name=PackageFlag,def=1" json:"PackageFlag,omitempty"`
	PackageNum         *int32                                           `protobuf:"varint,5,req,name=PackageNum,def=1" json:"PackageNum,omitempty"`
	AllRecordNum       *int32                                           `protobuf:"varint,6,req,name=AllRecordNum" json:"AllRecordNum,omitempty"`
	ClearMultiDataList []*E2EClearMultiDataQueryRsp_ClearMultiDataGroup `protobuf:"bytes,7,rep,name=ClearMultiDataList" json:"ClearMultiDataList,omitempty"`
	XXX_unrecognized   []byte                                           `json:"-"`
}

func (m *E2EClearMultiDataQueryRsp) Reset()                    { *m = E2EClearMultiDataQueryRsp{} }
func (m *E2EClearMultiDataQueryRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2EClearMultiDataQueryRsp) ProtoMessage()               {}
func (*E2EClearMultiDataQueryRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{67} }

const Default_E2EClearMultiDataQueryRsp_PackageFlag int32 = 1
const Default_E2EClearMultiDataQueryRsp_PackageNum int32 = 1

func (m *E2EClearMultiDataQueryRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2EClearMultiDataQueryRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EClearMultiDataQueryRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EClearMultiDataQueryRsp) GetPackageFlag() int32 {
	if m != nil && m.PackageFlag != nil {
		return *m.PackageFlag
	}
	return Default_E2EClearMultiDataQueryRsp_PackageFlag
}

func (m *E2EClearMultiDataQueryRsp) GetPackageNum() int32 {
	if m != nil && m.PackageNum != nil {
		return *m.PackageNum
	}
	return Default_E2EClearMultiDataQueryRsp_PackageNum
}

func (m *E2EClearMultiDataQueryRsp) GetAllRecordNum() int32 {
	if m != nil && m.AllRecordNum != nil {
		return *m.AllRecordNum
	}
	return 0
}

func (m *E2EClearMultiDataQueryRsp) GetClearMultiDataList() []*E2EClearMultiDataQueryRsp_ClearMultiDataGroup {
	if m != nil {
		return m.ClearMultiDataList
	}
	return nil
}

type E2EClearMultiDataQueryRsp_ClearMultiDataGroup struct {
	MemberNumber     *string  `protobuf:"bytes,1,req,name=MemberNumber" json:"MemberNumber,omitempty"`
	MemberName       *string  `protobuf:"bytes,2,req,name=MemberName" json:"MemberName,omitempty"`
	GainAndLoss      *float64 `protobuf:"fixed64,3,req,name=GainAndLoss" json:"GainAndLoss,omitempty"`
	LateFee          *float64 `protobuf:"fixed64,4,req,name=LateFee" json:"LateFee,omitempty"`
	TradeAmount      *float64 `protobuf:"fixed64,5,req,name=TradeAmount" json:"TradeAmount,omitempty"`
	Commission       *float64 `protobuf:"fixed64,6,req,name=Commission" json:"Commission,omitempty"`
	DeliveryGoods    *float64 `protobuf:"fixed64,7,req,name=DeliveryGoods" json:"DeliveryGoods,omitempty"`
	DeliveryFee      *float64 `protobuf:"fixed64,8,req,name=DeliveryFee" json:"DeliveryFee,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *E2EClearMultiDataQueryRsp_ClearMultiDataGroup) Reset() {
	*m = E2EClearMultiDataQueryRsp_ClearMultiDataGroup{}
}
func (m *E2EClearMultiDataQueryRsp_ClearMultiDataGroup) String() string {
	return proto1.CompactTextString(m)
}
func (*E2EClearMultiDataQueryRsp_ClearMultiDataGroup) ProtoMessage() {}
func (*E2EClearMultiDataQueryRsp_ClearMultiDataGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{67, 0}
}

func (m *E2EClearMultiDataQueryRsp_ClearMultiDataGroup) GetMemberNumber() string {
	if m != nil && m.MemberNumber != nil {
		return *m.MemberNumber
	}
	return ""
}

func (m *E2EClearMultiDataQueryRsp_ClearMultiDataGroup) GetMemberName() string {
	if m != nil && m.MemberName != nil {
		return *m.MemberName
	}
	return ""
}

func (m *E2EClearMultiDataQueryRsp_ClearMultiDataGroup) GetGainAndLoss() float64 {
	if m != nil && m.GainAndLoss != nil {
		return *m.GainAndLoss
	}
	return 0
}

func (m *E2EClearMultiDataQueryRsp_ClearMultiDataGroup) GetLateFee() float64 {
	if m != nil && m.LateFee != nil {
		return *m.LateFee
	}
	return 0
}

func (m *E2EClearMultiDataQueryRsp_ClearMultiDataGroup) GetTradeAmount() float64 {
	if m != nil && m.TradeAmount != nil {
		return *m.TradeAmount
	}
	return 0
}

func (m *E2EClearMultiDataQueryRsp_ClearMultiDataGroup) GetCommission() float64 {
	if m != nil && m.Commission != nil {
		return *m.Commission
	}
	return 0
}

func (m *E2EClearMultiDataQueryRsp_ClearMultiDataGroup) GetDeliveryGoods() float64 {
	if m != nil && m.DeliveryGoods != nil {
		return *m.DeliveryGoods
	}
	return 0
}

func (m *E2EClearMultiDataQueryRsp_ClearMultiDataGroup) GetDeliveryFee() float64 {
	if m != nil && m.DeliveryFee != nil {
		return *m.DeliveryFee
	}
	return 0
}

// 清算报表交易客户数据查询请求  0x0F0E0009
type E2EClearCustomerDataQueryReq struct {
	SID              *string `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,2,req,name=LoginId" json:"LoginId,omitempty"`
	UserId           *int32  `protobuf:"varint,3,req,name=UserId" json:"UserId,omitempty"`
	UserType         *int32  `protobuf:"varint,4,req,name=UserType" json:"UserType,omitempty"`
	BankId           *int32  `protobuf:"varint,5,req,name=BankId" json:"BankId,omitempty"`
	ClearingDate     *int64  `protobuf:"varint,6,req,name=ClearingDate" json:"ClearingDate,omitempty"`
	BeginRow         *int32  `protobuf:"varint,7,req,name=BeginRow" json:"BeginRow,omitempty"`
	EndRow           *int32  `protobuf:"varint,8,req,name=EndRow" json:"EndRow,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EClearCustomerDataQueryReq) Reset()                    { *m = E2EClearCustomerDataQueryReq{} }
func (m *E2EClearCustomerDataQueryReq) String() string            { return proto1.CompactTextString(m) }
func (*E2EClearCustomerDataQueryReq) ProtoMessage()               {}
func (*E2EClearCustomerDataQueryReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{68} }

func (m *E2EClearCustomerDataQueryReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EClearCustomerDataQueryReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EClearCustomerDataQueryReq) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EClearCustomerDataQueryReq) GetUserType() int32 {
	if m != nil && m.UserType != nil {
		return *m.UserType
	}
	return 0
}

func (m *E2EClearCustomerDataQueryReq) GetBankId() int32 {
	if m != nil && m.BankId != nil {
		return *m.BankId
	}
	return 0
}

func (m *E2EClearCustomerDataQueryReq) GetClearingDate() int64 {
	if m != nil && m.ClearingDate != nil {
		return *m.ClearingDate
	}
	return 0
}

func (m *E2EClearCustomerDataQueryReq) GetBeginRow() int32 {
	if m != nil && m.BeginRow != nil {
		return *m.BeginRow
	}
	return 0
}

func (m *E2EClearCustomerDataQueryReq) GetEndRow() int32 {
	if m != nil && m.EndRow != nil {
		return *m.EndRow
	}
	return 0
}

// 清算报表交易客户数据查询响应  0x0F0E000A
type E2EClearCustomerDataQueryRsp struct {
	RetCode               *int32                                                 `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID                   *string                                                `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	LoginId               *int32                                                 `protobuf:"varint,3,req,name=LoginId" json:"LoginId,omitempty"`
	PackageFlag           *int32                                                 `protobuf:"varint,4,req,name=PackageFlag,def=1" json:"PackageFlag,omitempty"`
	PackageNum            *int32                                                 `protobuf:"varint,5,req,name=PackageNum,def=1" json:"PackageNum,omitempty"`
	AllRecordNum          *int32                                                 `protobuf:"varint,6,req,name=AllRecordNum" json:"AllRecordNum,omitempty"`
	ClearCustomerDataList []*E2EClearCustomerDataQueryRsp_ClearCustomerDataGroup `protobuf:"bytes,7,rep,name=ClearCustomerDataList" json:"ClearCustomerDataList,omitempty"`
	XXX_unrecognized      []byte                                                 `json:"-"`
}

func (m *E2EClearCustomerDataQueryRsp) Reset()                    { *m = E2EClearCustomerDataQueryRsp{} }
func (m *E2EClearCustomerDataQueryRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2EClearCustomerDataQueryRsp) ProtoMessage()               {}
func (*E2EClearCustomerDataQueryRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{69} }

const Default_E2EClearCustomerDataQueryRsp_PackageFlag int32 = 1
const Default_E2EClearCustomerDataQueryRsp_PackageNum int32 = 1

func (m *E2EClearCustomerDataQueryRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2EClearCustomerDataQueryRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EClearCustomerDataQueryRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EClearCustomerDataQueryRsp) GetPackageFlag() int32 {
	if m != nil && m.PackageFlag != nil {
		return *m.PackageFlag
	}
	return Default_E2EClearCustomerDataQueryRsp_PackageFlag
}

func (m *E2EClearCustomerDataQueryRsp) GetPackageNum() int32 {
	if m != nil && m.PackageNum != nil {
		return *m.PackageNum
	}
	return Default_E2EClearCustomerDataQueryRsp_PackageNum
}

func (m *E2EClearCustomerDataQueryRsp) GetAllRecordNum() int32 {
	if m != nil && m.AllRecordNum != nil {
		return *m.AllRecordNum
	}
	return 0
}

func (m *E2EClearCustomerDataQueryRsp) GetClearCustomerDataList() []*E2EClearCustomerDataQueryRsp_ClearCustomerDataGroup {
	if m != nil {
		return m.ClearCustomerDataList
	}
	return nil
}

type E2EClearCustomerDataQueryRsp_ClearCustomerDataGroup struct {
	LoginAccount     *string  `protobuf:"bytes,1,req,name=LoginAccount" json:"LoginAccount,omitempty"`
	CustomerName     *string  `protobuf:"bytes,2,req,name=CustomerName" json:"CustomerName,omitempty"`
	GainAndLoss      *float64 `protobuf:"fixed64,3,req,name=GainAndLoss" json:"GainAndLoss,omitempty"`
	LateFee          *float64 `protobuf:"fixed64,4,req,name=LateFee" json:"LateFee,omitempty"`
	TradeAmount      *float64 `protobuf:"fixed64,5,req,name=TradeAmount" json:"TradeAmount,omitempty"`
	Commission       *float64 `protobuf:"fixed64,6,req,name=Commission" json:"Commission,omitempty"`
	DeliveryGoods    *float64 `protobuf:"fixed64,7,req,name=DeliveryGoods" json:"DeliveryGoods,omitempty"`
	DeliveryFee      *float64 `protobuf:"fixed64,8,req,name=DeliveryFee" json:"DeliveryFee,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *E2EClearCustomerDataQueryRsp_ClearCustomerDataGroup) Reset() {
	*m = E2EClearCustomerDataQueryRsp_ClearCustomerDataGroup{}
}
func (m *E2EClearCustomerDataQueryRsp_ClearCustomerDataGroup) String() string {
	return proto1.CompactTextString(m)
}
func (*E2EClearCustomerDataQueryRsp_ClearCustomerDataGroup) ProtoMessage() {}
func (*E2EClearCustomerDataQueryRsp_ClearCustomerDataGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{69, 0}
}

func (m *E2EClearCustomerDataQueryRsp_ClearCustomerDataGroup) GetLoginAccount() string {
	if m != nil && m.LoginAccount != nil {
		return *m.LoginAccount
	}
	return ""
}

func (m *E2EClearCustomerDataQueryRsp_ClearCustomerDataGroup) GetCustomerName() string {
	if m != nil && m.CustomerName != nil {
		return *m.CustomerName
	}
	return ""
}

func (m *E2EClearCustomerDataQueryRsp_ClearCustomerDataGroup) GetGainAndLoss() float64 {
	if m != nil && m.GainAndLoss != nil {
		return *m.GainAndLoss
	}
	return 0
}

func (m *E2EClearCustomerDataQueryRsp_ClearCustomerDataGroup) GetLateFee() float64 {
	if m != nil && m.LateFee != nil {
		return *m.LateFee
	}
	return 0
}

func (m *E2EClearCustomerDataQueryRsp_ClearCustomerDataGroup) GetTradeAmount() float64 {
	if m != nil && m.TradeAmount != nil {
		return *m.TradeAmount
	}
	return 0
}

func (m *E2EClearCustomerDataQueryRsp_ClearCustomerDataGroup) GetCommission() float64 {
	if m != nil && m.Commission != nil {
		return *m.Commission
	}
	return 0
}

func (m *E2EClearCustomerDataQueryRsp_ClearCustomerDataGroup) GetDeliveryGoods() float64 {
	if m != nil && m.DeliveryGoods != nil {
		return *m.DeliveryGoods
	}
	return 0
}

func (m *E2EClearCustomerDataQueryRsp_ClearCustomerDataGroup) GetDeliveryFee() float64 {
	if m != nil && m.DeliveryFee != nil {
		return *m.DeliveryFee
	}
	return 0
}

// 清算报表经纪会员数据查询请求  0x0F0E000B
type E2EClearBrokerDataQueryReq struct {
	SID              *string `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,2,req,name=LoginId" json:"LoginId,omitempty"`
	UserId           *int32  `protobuf:"varint,3,req,name=UserId" json:"UserId,omitempty"`
	UserType         *int32  `protobuf:"varint,4,req,name=UserType" json:"UserType,omitempty"`
	BankId           *int32  `protobuf:"varint,5,req,name=BankId" json:"BankId,omitempty"`
	ClearingDate     *int64  `protobuf:"varint,6,req,name=ClearingDate" json:"ClearingDate,omitempty"`
	BeginRow         *int32  `protobuf:"varint,7,req,name=BeginRow" json:"BeginRow,omitempty"`
	EndRow           *int32  `protobuf:"varint,8,req,name=EndRow" json:"EndRow,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EClearBrokerDataQueryReq) Reset()                    { *m = E2EClearBrokerDataQueryReq{} }
func (m *E2EClearBrokerDataQueryReq) String() string            { return proto1.CompactTextString(m) }
func (*E2EClearBrokerDataQueryReq) ProtoMessage()               {}
func (*E2EClearBrokerDataQueryReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{70} }

func (m *E2EClearBrokerDataQueryReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EClearBrokerDataQueryReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EClearBrokerDataQueryReq) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EClearBrokerDataQueryReq) GetUserType() int32 {
	if m != nil && m.UserType != nil {
		return *m.UserType
	}
	return 0
}

func (m *E2EClearBrokerDataQueryReq) GetBankId() int32 {
	if m != nil && m.BankId != nil {
		return *m.BankId
	}
	return 0
}

func (m *E2EClearBrokerDataQueryReq) GetClearingDate() int64 {
	if m != nil && m.ClearingDate != nil {
		return *m.ClearingDate
	}
	return 0
}

func (m *E2EClearBrokerDataQueryReq) GetBeginRow() int32 {
	if m != nil && m.BeginRow != nil {
		return *m.BeginRow
	}
	return 0
}

func (m *E2EClearBrokerDataQueryReq) GetEndRow() int32 {
	if m != nil && m.EndRow != nil {
		return *m.EndRow
	}
	return 0
}

// 清算报表经纪会员数据查询响应  0x0F0E000C
type E2EClearBrokerDataQueryRsp struct {
	RetCode             *int32                                             `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID                 *string                                            `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	LoginId             *int32                                             `protobuf:"varint,3,req,name=LoginId" json:"LoginId,omitempty"`
	PackageFlag         *int32                                             `protobuf:"varint,4,req,name=PackageFlag,def=1" json:"PackageFlag,omitempty"`
	PackageNum          *int32                                             `protobuf:"varint,5,req,name=PackageNum,def=1" json:"PackageNum,omitempty"`
	AllRecordNum        *int32                                             `protobuf:"varint,6,req,name=AllRecordNum" json:"AllRecordNum,omitempty"`
	ClearBrokerDataList []*E2EClearBrokerDataQueryRsp_ClearBrokerDataGroup `protobuf:"bytes,7,rep,name=ClearBrokerDataList" json:"ClearBrokerDataList,omitempty"`
	XXX_unrecognized    []byte                                             `json:"-"`
}

func (m *E2EClearBrokerDataQueryRsp) Reset()                    { *m = E2EClearBrokerDataQueryRsp{} }
func (m *E2EClearBrokerDataQueryRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2EClearBrokerDataQueryRsp) ProtoMessage()               {}
func (*E2EClearBrokerDataQueryRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{71} }

const Default_E2EClearBrokerDataQueryRsp_PackageFlag int32 = 1
const Default_E2EClearBrokerDataQueryRsp_PackageNum int32 = 1

func (m *E2EClearBrokerDataQueryRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2EClearBrokerDataQueryRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EClearBrokerDataQueryRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EClearBrokerDataQueryRsp) GetPackageFlag() int32 {
	if m != nil && m.PackageFlag != nil {
		return *m.PackageFlag
	}
	return Default_E2EClearBrokerDataQueryRsp_PackageFlag
}

func (m *E2EClearBrokerDataQueryRsp) GetPackageNum() int32 {
	if m != nil && m.PackageNum != nil {
		return *m.PackageNum
	}
	return Default_E2EClearBrokerDataQueryRsp_PackageNum
}

func (m *E2EClearBrokerDataQueryRsp) GetAllRecordNum() int32 {
	if m != nil && m.AllRecordNum != nil {
		return *m.AllRecordNum
	}
	return 0
}

func (m *E2EClearBrokerDataQueryRsp) GetClearBrokerDataList() []*E2EClearBrokerDataQueryRsp_ClearBrokerDataGroup {
	if m != nil {
		return m.ClearBrokerDataList
	}
	return nil
}

type E2EClearBrokerDataQueryRsp_ClearBrokerDataGroup struct {
	MemberNumber     *string  `protobuf:"bytes,1,req,name=MemberNumber" json:"MemberNumber,omitempty"`
	MemberName       *string  `protobuf:"bytes,2,req,name=MemberName" json:"MemberName,omitempty"`
	Commission       *float64 `protobuf:"fixed64,3,req,name=Commission" json:"Commission,omitempty"`
	TradeAmount      *float64 `protobuf:"fixed64,4,req,name=TradeAmount" json:"TradeAmount,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *E2EClearBrokerDataQueryRsp_ClearBrokerDataGroup) Reset() {
	*m = E2EClearBrokerDataQueryRsp_ClearBrokerDataGroup{}
}
func (m *E2EClearBrokerDataQueryRsp_ClearBrokerDataGroup) String() string {
	return proto1.CompactTextString(m)
}
func (*E2EClearBrokerDataQueryRsp_ClearBrokerDataGroup) ProtoMessage() {}
func (*E2EClearBrokerDataQueryRsp_ClearBrokerDataGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{71, 0}
}

func (m *E2EClearBrokerDataQueryRsp_ClearBrokerDataGroup) GetMemberNumber() string {
	if m != nil && m.MemberNumber != nil {
		return *m.MemberNumber
	}
	return ""
}

func (m *E2EClearBrokerDataQueryRsp_ClearBrokerDataGroup) GetMemberName() string {
	if m != nil && m.MemberName != nil {
		return *m.MemberName
	}
	return ""
}

func (m *E2EClearBrokerDataQueryRsp_ClearBrokerDataGroup) GetCommission() float64 {
	if m != nil && m.Commission != nil {
		return *m.Commission
	}
	return 0
}

func (m *E2EClearBrokerDataQueryRsp_ClearBrokerDataGroup) GetTradeAmount() float64 {
	if m != nil && m.TradeAmount != nil {
		return *m.TradeAmount
	}
	return 0
}

// 中国银行的清算结果查询请求  0x0F0E0021
type E2EBOCClearResultQueryReq struct {
	SID              *string `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,2,req,name=LoginId" json:"LoginId,omitempty"`
	UserId           *int32  `protobuf:"varint,3,req,name=UserId" json:"UserId,omitempty"`
	UserType         *int32  `protobuf:"varint,4,req,name=UserType" json:"UserType,omitempty"`
	BankId           *int32  `protobuf:"varint,5,req,name=BankId" json:"BankId,omitempty"`
	ClearingDate     *int64  `protobuf:"varint,6,req,name=ClearingDate" json:"ClearingDate,omitempty"`
	BeginRow         *int32  `protobuf:"varint,7,req,name=BeginRow" json:"BeginRow,omitempty"`
	EndRow           *int32  `protobuf:"varint,8,req,name=EndRow" json:"EndRow,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EBOCClearResultQueryReq) Reset()                    { *m = E2EBOCClearResultQueryReq{} }
func (m *E2EBOCClearResultQueryReq) String() string            { return proto1.CompactTextString(m) }
func (*E2EBOCClearResultQueryReq) ProtoMessage()               {}
func (*E2EBOCClearResultQueryReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{72} }

func (m *E2EBOCClearResultQueryReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EBOCClearResultQueryReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EBOCClearResultQueryReq) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EBOCClearResultQueryReq) GetUserType() int32 {
	if m != nil && m.UserType != nil {
		return *m.UserType
	}
	return 0
}

func (m *E2EBOCClearResultQueryReq) GetBankId() int32 {
	if m != nil && m.BankId != nil {
		return *m.BankId
	}
	return 0
}

func (m *E2EBOCClearResultQueryReq) GetClearingDate() int64 {
	if m != nil && m.ClearingDate != nil {
		return *m.ClearingDate
	}
	return 0
}

func (m *E2EBOCClearResultQueryReq) GetBeginRow() int32 {
	if m != nil && m.BeginRow != nil {
		return *m.BeginRow
	}
	return 0
}

func (m *E2EBOCClearResultQueryReq) GetEndRow() int32 {
	if m != nil && m.EndRow != nil {
		return *m.EndRow
	}
	return 0
}

// 中国银行的清算结果查询请求  0x0F0E0022
type E2EBOCClearResultQueryRsp struct {
	RetCode                 *int32                                                `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID                     *string                                               `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	LoginId                 *int32                                                `protobuf:"varint,3,req,name=LoginId" json:"LoginId,omitempty"`
	PackageFlag             *int32                                                `protobuf:"varint,4,req,name=PackageFlag,def=1" json:"PackageFlag,omitempty"`
	PackageNum              *int32                                                `protobuf:"varint,5,req,name=PackageNum,def=1" json:"PackageNum,omitempty"`
	AllRecordNum            *int32                                                `protobuf:"varint,6,req,name=AllRecordNum" json:"AllRecordNum,omitempty"`
	BOCClearResultQueryList []*E2EBOCClearResultQueryRsp_BOCClearResultQueryGroup `protobuf:"bytes,7,rep,name=BOCClearResultQueryList" json:"BOCClearResultQueryList,omitempty"`
	XXX_unrecognized        []byte                                                `json:"-"`
}

func (m *E2EBOCClearResultQueryRsp) Reset()                    { *m = E2EBOCClearResultQueryRsp{} }
func (m *E2EBOCClearResultQueryRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2EBOCClearResultQueryRsp) ProtoMessage()               {}
func (*E2EBOCClearResultQueryRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{73} }

const Default_E2EBOCClearResultQueryRsp_PackageFlag int32 = 1
const Default_E2EBOCClearResultQueryRsp_PackageNum int32 = 1

func (m *E2EBOCClearResultQueryRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2EBOCClearResultQueryRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EBOCClearResultQueryRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EBOCClearResultQueryRsp) GetPackageFlag() int32 {
	if m != nil && m.PackageFlag != nil {
		return *m.PackageFlag
	}
	return Default_E2EBOCClearResultQueryRsp_PackageFlag
}

func (m *E2EBOCClearResultQueryRsp) GetPackageNum() int32 {
	if m != nil && m.PackageNum != nil {
		return *m.PackageNum
	}
	return Default_E2EBOCClearResultQueryRsp_PackageNum
}

func (m *E2EBOCClearResultQueryRsp) GetAllRecordNum() int32 {
	if m != nil && m.AllRecordNum != nil {
		return *m.AllRecordNum
	}
	return 0
}

func (m *E2EBOCClearResultQueryRsp) GetBOCClearResultQueryList() []*E2EBOCClearResultQueryRsp_BOCClearResultQueryGroup {
	if m != nil {
		return m.BOCClearResultQueryList
	}
	return nil
}

type E2EBOCClearResultQueryRsp_BOCClearResultQueryGroup struct {
	SignAccount      *string  `protobuf:"bytes,1,req,name=SignAccount" json:"SignAccount,omitempty"`
	BankBalance      *float64 `protobuf:"fixed64,2,req,name=BankBalance" json:"BankBalance,omitempty"`
	SystemBalance    *float64 `protobuf:"fixed64,3,req,name=SystemBalance" json:"SystemBalance,omitempty"`
	ProcessFlag      *int32   `protobuf:"varint,4,req,name=ProcessFlag" json:"ProcessFlag,omitempty"`
	Remark           *string  `protobuf:"bytes,5,req,name=Remark" json:"Remark,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *E2EBOCClearResultQueryRsp_BOCClearResultQueryGroup) Reset() {
	*m = E2EBOCClearResultQueryRsp_BOCClearResultQueryGroup{}
}
func (m *E2EBOCClearResultQueryRsp_BOCClearResultQueryGroup) String() string {
	return proto1.CompactTextString(m)
}
func (*E2EBOCClearResultQueryRsp_BOCClearResultQueryGroup) ProtoMessage() {}
func (*E2EBOCClearResultQueryRsp_BOCClearResultQueryGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{73, 0}
}

func (m *E2EBOCClearResultQueryRsp_BOCClearResultQueryGroup) GetSignAccount() string {
	if m != nil && m.SignAccount != nil {
		return *m.SignAccount
	}
	return ""
}

func (m *E2EBOCClearResultQueryRsp_BOCClearResultQueryGroup) GetBankBalance() float64 {
	if m != nil && m.BankBalance != nil {
		return *m.BankBalance
	}
	return 0
}

func (m *E2EBOCClearResultQueryRsp_BOCClearResultQueryGroup) GetSystemBalance() float64 {
	if m != nil && m.SystemBalance != nil {
		return *m.SystemBalance
	}
	return 0
}

func (m *E2EBOCClearResultQueryRsp_BOCClearResultQueryGroup) GetProcessFlag() int32 {
	if m != nil && m.ProcessFlag != nil {
		return *m.ProcessFlag
	}
	return 0
}

func (m *E2EBOCClearResultQueryRsp_BOCClearResultQueryGroup) GetRemark() string {
	if m != nil && m.Remark != nil {
		return *m.Remark
	}
	return ""
}

// 清算结果查询请求  0x0A020001
type E2EClearResultQueryReq struct {
	SID              *string `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	LoginId          *int32  `protobuf:"varint,2,req,name=LoginId" json:"LoginId,omitempty"`
	UserId           *int32  `protobuf:"varint,3,req,name=UserId" json:"UserId,omitempty"`
	UserType         *int32  `protobuf:"varint,4,req,name=UserType" json:"UserType,omitempty"`
	BankId           *int32  `protobuf:"varint,5,req,name=BankId" json:"BankId,omitempty"`
	ClearingDate     *int64  `protobuf:"varint,6,req,name=ClearingDate" json:"ClearingDate,omitempty"`
	OperType         *int32  `protobuf:"varint,7,req,name=OperType" json:"OperType,omitempty"`
	BeginRow         *int32  `protobuf:"varint,8,req,name=BeginRow" json:"BeginRow,omitempty"`
	EndRow           *int32  `protobuf:"varint,9,req,name=EndRow" json:"EndRow,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2EClearResultQueryReq) Reset()                    { *m = E2EClearResultQueryReq{} }
func (m *E2EClearResultQueryReq) String() string            { return proto1.CompactTextString(m) }
func (*E2EClearResultQueryReq) ProtoMessage()               {}
func (*E2EClearResultQueryReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{74} }

func (m *E2EClearResultQueryReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EClearResultQueryReq) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EClearResultQueryReq) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *E2EClearResultQueryReq) GetUserType() int32 {
	if m != nil && m.UserType != nil {
		return *m.UserType
	}
	return 0
}

func (m *E2EClearResultQueryReq) GetBankId() int32 {
	if m != nil && m.BankId != nil {
		return *m.BankId
	}
	return 0
}

func (m *E2EClearResultQueryReq) GetClearingDate() int64 {
	if m != nil && m.ClearingDate != nil {
		return *m.ClearingDate
	}
	return 0
}

func (m *E2EClearResultQueryReq) GetOperType() int32 {
	if m != nil && m.OperType != nil {
		return *m.OperType
	}
	return 0
}

func (m *E2EClearResultQueryReq) GetBeginRow() int32 {
	if m != nil && m.BeginRow != nil {
		return *m.BeginRow
	}
	return 0
}

func (m *E2EClearResultQueryReq) GetEndRow() int32 {
	if m != nil && m.EndRow != nil {
		return *m.EndRow
	}
	return 0
}

// 清算结果查询响应  0x0A020002
type E2EClearResultQueryRsp struct {
	RetCode              *int32                                          `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID                  *string                                         `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	LoginId              *int32                                          `protobuf:"varint,3,req,name=LoginId" json:"LoginId,omitempty"`
	PackageFlag          *int32                                          `protobuf:"varint,4,req,name=PackageFlag,def=1" json:"PackageFlag,omitempty"`
	PackageNum           *int32                                          `protobuf:"varint,5,req,name=PackageNum,def=1" json:"PackageNum,omitempty"`
	AllRecordNum         *int32                                          `protobuf:"varint,6,req,name=AllRecordNum" json:"AllRecordNum,omitempty"`
	ClearResultQueryList []*E2EClearResultQueryRsp_ClearResultQueryGroup `protobuf:"bytes,7,rep,name=ClearResultQueryList" json:"ClearResultQueryList,omitempty"`
	XXX_unrecognized     []byte                                          `json:"-"`
}

func (m *E2EClearResultQueryRsp) Reset()                    { *m = E2EClearResultQueryRsp{} }
func (m *E2EClearResultQueryRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2EClearResultQueryRsp) ProtoMessage()               {}
func (*E2EClearResultQueryRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{75} }

const Default_E2EClearResultQueryRsp_PackageFlag int32 = 1
const Default_E2EClearResultQueryRsp_PackageNum int32 = 1

func (m *E2EClearResultQueryRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2EClearResultQueryRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2EClearResultQueryRsp) GetLoginId() int32 {
	if m != nil && m.LoginId != nil {
		return *m.LoginId
	}
	return 0
}

func (m *E2EClearResultQueryRsp) GetPackageFlag() int32 {
	if m != nil && m.PackageFlag != nil {
		return *m.PackageFlag
	}
	return Default_E2EClearResultQueryRsp_PackageFlag
}

func (m *E2EClearResultQueryRsp) GetPackageNum() int32 {
	if m != nil && m.PackageNum != nil {
		return *m.PackageNum
	}
	return Default_E2EClearResultQueryRsp_PackageNum
}

func (m *E2EClearResultQueryRsp) GetAllRecordNum() int32 {
	if m != nil && m.AllRecordNum != nil {
		return *m.AllRecordNum
	}
	return 0
}

func (m *E2EClearResultQueryRsp) GetClearResultQueryList() []*E2EClearResultQueryRsp_ClearResultQueryGroup {
	if m != nil {
		return m.ClearResultQueryList
	}
	return nil
}

type E2EClearResultQueryRsp_ClearResultQueryGroup struct {
	MemberNumber     *string  `protobuf:"bytes,1,req,name=MemberNumber" json:"MemberNumber,omitempty"`
	MemberName       *string  `protobuf:"bytes,2,req,name=MemberName" json:"MemberName,omitempty"`
	ClearingAmount   *float64 `protobuf:"fixed64,3,req,name=ClearingAmount" json:"ClearingAmount,omitempty"`
	ClearingResult   *int32   `protobuf:"varint,4,req,name=ClearingResult" json:"ClearingResult,omitempty"`
	ErrorMsg         *string  `protobuf:"bytes,5,req,name=ErrorMsg" json:"ErrorMsg,omitempty"`
	Remark           *string  `protobuf:"bytes,6,req,name=Remark" json:"Remark,omitempty"`
	UserType         *int32   `protobuf:"varint,7,req,name=UserType" json:"UserType,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *E2EClearResultQueryRsp_ClearResultQueryGroup) Reset() {
	*m = E2EClearResultQueryRsp_ClearResultQueryGroup{}
}
func (m *E2EClearResultQueryRsp_ClearResultQueryGroup) String() string {
	return proto1.CompactTextString(m)
}
func (*E2EClearResultQueryRsp_ClearResultQueryGroup) ProtoMessage() {}
func (*E2EClearResultQueryRsp_ClearResultQueryGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{75, 0}
}

func (m *E2EClearResultQueryRsp_ClearResultQueryGroup) GetMemberNumber() string {
	if m != nil && m.MemberNumber != nil {
		return *m.MemberNumber
	}
	return ""
}

func (m *E2EClearResultQueryRsp_ClearResultQueryGroup) GetMemberName() string {
	if m != nil && m.MemberName != nil {
		return *m.MemberName
	}
	return ""
}

func (m *E2EClearResultQueryRsp_ClearResultQueryGroup) GetClearingAmount() float64 {
	if m != nil && m.ClearingAmount != nil {
		return *m.ClearingAmount
	}
	return 0
}

func (m *E2EClearResultQueryRsp_ClearResultQueryGroup) GetClearingResult() int32 {
	if m != nil && m.ClearingResult != nil {
		return *m.ClearingResult
	}
	return 0
}

func (m *E2EClearResultQueryRsp_ClearResultQueryGroup) GetErrorMsg() string {
	if m != nil && m.ErrorMsg != nil {
		return *m.ErrorMsg
	}
	return ""
}

func (m *E2EClearResultQueryRsp_ClearResultQueryGroup) GetRemark() string {
	if m != nil && m.Remark != nil {
		return *m.Remark
	}
	return ""
}

func (m *E2EClearResultQueryRsp_ClearResultQueryGroup) GetUserType() int32 {
	if m != nil && m.UserType != nil {
		return *m.UserType
	}
	return 0
}

// 交易系统到出入金服务 E2B
// ////////////////////////////////////////////////////////////////////
// 交易系统与出入金服务交互
// ////////////////////////////////////////////////////////////////////
type AdditionalInfo struct {
	Type             *int32  `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Value            *string `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AdditionalInfo) Reset()                    { *m = AdditionalInfo{} }
func (m *AdditionalInfo) String() string            { return proto1.CompactTextString(m) }
func (*AdditionalInfo) ProtoMessage()               {}
func (*AdditionalInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{76} }

func (m *AdditionalInfo) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *AdditionalInfo) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

// 交易端签到/签退请求 0x11010001
type E2BSignInOutReq struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankID           *int32  `protobuf:"varint,2,req,name=BankID" json:"BankID,omitempty"`
	Type             *int32  `protobuf:"varint,3,req,name=Type" json:"Type,omitempty"`
	Reserved         *string `protobuf:"bytes,4,req,name=Reserved" json:"Reserved,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2BSignInOutReq) Reset()                    { *m = E2BSignInOutReq{} }
func (m *E2BSignInOutReq) String() string            { return proto1.CompactTextString(m) }
func (*E2BSignInOutReq) ProtoMessage()               {}
func (*E2BSignInOutReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{77} }

func (m *E2BSignInOutReq) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *E2BSignInOutReq) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *E2BSignInOutReq) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *E2BSignInOutReq) GetReserved() string {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return ""
}

// 交易端签到/签退回应 0x11010002
type E2BSignInOutRsp struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankSID          *string `protobuf:"bytes,2,opt,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,3,req,name=BankID" json:"BankID,omitempty"`
	Type             *int32  `protobuf:"varint,4,req,name=Type" json:"Type,omitempty"`
	RetMsg           *string `protobuf:"bytes,5,opt,name=RetMsg" json:"RetMsg,omitempty"`
	RetCode          *int32  `protobuf:"varint,6,req,name=RetCode" json:"RetCode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2BSignInOutRsp) Reset()                    { *m = E2BSignInOutRsp{} }
func (m *E2BSignInOutRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2BSignInOutRsp) ProtoMessage()               {}
func (*E2BSignInOutRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{78} }

func (m *E2BSignInOutRsp) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *E2BSignInOutRsp) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *E2BSignInOutRsp) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *E2BSignInOutRsp) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *E2BSignInOutRsp) GetRetMsg() string {
	if m != nil && m.RetMsg != nil {
		return *m.RetMsg
	}
	return ""
}

func (m *E2BSignInOutRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

// 交易端签约请求 0x11010003
type E2BAttachAcctReq struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankID           *int32  `protobuf:"varint,2,req,name=BankID" json:"BankID,omitempty"`
	BankAcct         *string `protobuf:"bytes,3,req,name=BankAcct" json:"BankAcct,omitempty"`
	ExchAcct         *string `protobuf:"bytes,4,req,name=ExchAcct" json:"ExchAcct,omitempty"`
	ExchPsw          *string `protobuf:"bytes,5,req,name=ExchPsw" json:"ExchPsw,omitempty"`
	CustName         *string `protobuf:"bytes,6,req,name=CustName" json:"CustName,omitempty"`
	CustCIDType      *int32  `protobuf:"varint,7,req,name=CustCIDType" json:"CustCIDType,omitempty"`
	CustCID          *string `protobuf:"bytes,8,req,name=CustCID" json:"CustCID,omitempty"`
	AgentName        *string `protobuf:"bytes,9,opt,name=AgentName" json:"AgentName,omitempty"`
	AgentCIDType     *int32  `protobuf:"varint,10,opt,name=AgentCIDType" json:"AgentCIDType,omitempty"`
	AgentCID         *string `protobuf:"bytes,11,opt,name=AgentCID" json:"AgentCID,omitempty"`
	BankPsw          *string `protobuf:"bytes,12,opt,name=BankPsw" json:"BankPsw,omitempty"`
	Reversed         *string `protobuf:"bytes,13,opt,name=Reversed" json:"Reversed,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2BAttachAcctReq) Reset()                    { *m = E2BAttachAcctReq{} }
func (m *E2BAttachAcctReq) String() string            { return proto1.CompactTextString(m) }
func (*E2BAttachAcctReq) ProtoMessage()               {}
func (*E2BAttachAcctReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{79} }

func (m *E2BAttachAcctReq) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *E2BAttachAcctReq) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *E2BAttachAcctReq) GetBankAcct() string {
	if m != nil && m.BankAcct != nil {
		return *m.BankAcct
	}
	return ""
}

func (m *E2BAttachAcctReq) GetExchAcct() string {
	if m != nil && m.ExchAcct != nil {
		return *m.ExchAcct
	}
	return ""
}

func (m *E2BAttachAcctReq) GetExchPsw() string {
	if m != nil && m.ExchPsw != nil {
		return *m.ExchPsw
	}
	return ""
}

func (m *E2BAttachAcctReq) GetCustName() string {
	if m != nil && m.CustName != nil {
		return *m.CustName
	}
	return ""
}

func (m *E2BAttachAcctReq) GetCustCIDType() int32 {
	if m != nil && m.CustCIDType != nil {
		return *m.CustCIDType
	}
	return 0
}

func (m *E2BAttachAcctReq) GetCustCID() string {
	if m != nil && m.CustCID != nil {
		return *m.CustCID
	}
	return ""
}

func (m *E2BAttachAcctReq) GetAgentName() string {
	if m != nil && m.AgentName != nil {
		return *m.AgentName
	}
	return ""
}

func (m *E2BAttachAcctReq) GetAgentCIDType() int32 {
	if m != nil && m.AgentCIDType != nil {
		return *m.AgentCIDType
	}
	return 0
}

func (m *E2BAttachAcctReq) GetAgentCID() string {
	if m != nil && m.AgentCID != nil {
		return *m.AgentCID
	}
	return ""
}

func (m *E2BAttachAcctReq) GetBankPsw() string {
	if m != nil && m.BankPsw != nil {
		return *m.BankPsw
	}
	return ""
}

func (m *E2BAttachAcctReq) GetReversed() string {
	if m != nil && m.Reversed != nil {
		return *m.Reversed
	}
	return ""
}

// 交易端签约回应 0x11010004
type E2BAttachAcctRsp struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankSID          *string `protobuf:"bytes,2,opt,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,3,req,name=BankID" json:"BankID,omitempty"`
	RetMsg           *string `protobuf:"bytes,4,opt,name=RetMsg" json:"RetMsg,omitempty"`
	RetCode          *int32  `protobuf:"varint,5,req,name=RetCode" json:"RetCode,omitempty"`
	BankCustomerID   *string `protobuf:"bytes,6,opt,name=BankCustomerID" json:"BankCustomerID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2BAttachAcctRsp) Reset()                    { *m = E2BAttachAcctRsp{} }
func (m *E2BAttachAcctRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2BAttachAcctRsp) ProtoMessage()               {}
func (*E2BAttachAcctRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{80} }

func (m *E2BAttachAcctRsp) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *E2BAttachAcctRsp) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *E2BAttachAcctRsp) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *E2BAttachAcctRsp) GetRetMsg() string {
	if m != nil && m.RetMsg != nil {
		return *m.RetMsg
	}
	return ""
}

func (m *E2BAttachAcctRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2BAttachAcctRsp) GetBankCustomerID() string {
	if m != nil && m.BankCustomerID != nil {
		return *m.BankCustomerID
	}
	return ""
}

// 交易端解约请求 0x11010005
type E2BDetachAcctReq struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankID           *int32  `protobuf:"varint,2,req,name=BankID" json:"BankID,omitempty"`
	BankAcct         *string `protobuf:"bytes,3,req,name=BankAcct" json:"BankAcct,omitempty"`
	ExchAcct         *string `protobuf:"bytes,4,req,name=ExchAcct" json:"ExchAcct,omitempty"`
	ExchPsw          *string `protobuf:"bytes,5,req,name=ExchPsw" json:"ExchPsw,omitempty"`
	CustCIDType      *int32  `protobuf:"varint,6,req,name=CustCIDType" json:"CustCIDType,omitempty"`
	CustCID          *string `protobuf:"bytes,7,req,name=CustCID" json:"CustCID,omitempty"`
	BankPsw          *string `protobuf:"bytes,8,opt,name=BankPsw" json:"BankPsw,omitempty"`
	CustName         *string `protobuf:"bytes,9,opt,name=CustName" json:"CustName,omitempty"`
	Reversed         *string `protobuf:"bytes,10,opt,name=Reversed" json:"Reversed,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2BDetachAcctReq) Reset()                    { *m = E2BDetachAcctReq{} }
func (m *E2BDetachAcctReq) String() string            { return proto1.CompactTextString(m) }
func (*E2BDetachAcctReq) ProtoMessage()               {}
func (*E2BDetachAcctReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{81} }

func (m *E2BDetachAcctReq) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *E2BDetachAcctReq) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *E2BDetachAcctReq) GetBankAcct() string {
	if m != nil && m.BankAcct != nil {
		return *m.BankAcct
	}
	return ""
}

func (m *E2BDetachAcctReq) GetExchAcct() string {
	if m != nil && m.ExchAcct != nil {
		return *m.ExchAcct
	}
	return ""
}

func (m *E2BDetachAcctReq) GetExchPsw() string {
	if m != nil && m.ExchPsw != nil {
		return *m.ExchPsw
	}
	return ""
}

func (m *E2BDetachAcctReq) GetCustCIDType() int32 {
	if m != nil && m.CustCIDType != nil {
		return *m.CustCIDType
	}
	return 0
}

func (m *E2BDetachAcctReq) GetCustCID() string {
	if m != nil && m.CustCID != nil {
		return *m.CustCID
	}
	return ""
}

func (m *E2BDetachAcctReq) GetBankPsw() string {
	if m != nil && m.BankPsw != nil {
		return *m.BankPsw
	}
	return ""
}

func (m *E2BDetachAcctReq) GetCustName() string {
	if m != nil && m.CustName != nil {
		return *m.CustName
	}
	return ""
}

func (m *E2BDetachAcctReq) GetReversed() string {
	if m != nil && m.Reversed != nil {
		return *m.Reversed
	}
	return ""
}

// 交易端解约回应 0x11010006
type E2BDetachAcctRsp struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankSID          *string `protobuf:"bytes,2,opt,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,3,req,name=BankID" json:"BankID,omitempty"`
	RetMsg           *string `protobuf:"bytes,4,opt,name=RetMsg" json:"RetMsg,omitempty"`
	RetCode          *int32  `protobuf:"varint,5,req,name=RetCode" json:"RetCode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2BDetachAcctRsp) Reset()                    { *m = E2BDetachAcctRsp{} }
func (m *E2BDetachAcctRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2BDetachAcctRsp) ProtoMessage()               {}
func (*E2BDetachAcctRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{82} }

func (m *E2BDetachAcctRsp) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *E2BDetachAcctRsp) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *E2BDetachAcctRsp) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *E2BDetachAcctRsp) GetRetMsg() string {
	if m != nil && m.RetMsg != nil {
		return *m.RetMsg
	}
	return ""
}

func (m *E2BDetachAcctRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

// 交易端入金请求 0x11010007
type E2BInMoneyReq struct {
	ExchSID          *string  `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankID           *int32   `protobuf:"varint,2,req,name=BankID" json:"BankID,omitempty"`
	BankAcct         *string  `protobuf:"bytes,3,req,name=BankAcct" json:"BankAcct,omitempty"`
	ExchAcct         *string  `protobuf:"bytes,4,req,name=ExchAcct" json:"ExchAcct,omitempty"`
	CustCIDType      *int32   `protobuf:"varint,5,req,name=CustCIDType" json:"CustCIDType,omitempty"`
	CustCID          *string  `protobuf:"bytes,6,req,name=CustCID" json:"CustCID,omitempty"`
	Currency         *int32   `protobuf:"varint,7,req,name=Currency" json:"Currency,omitempty"`
	Amount           *float64 `protobuf:"fixed64,8,req,name=Amount" json:"Amount,omitempty"`
	CustName         *string  `protobuf:"bytes,9,opt,name=CustName" json:"CustName,omitempty"`
	BankPsw          *string  `protobuf:"bytes,10,opt,name=BankPsw" json:"BankPsw,omitempty"`
	Reversed         *string  `protobuf:"bytes,11,opt,name=Reversed" json:"Reversed,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *E2BInMoneyReq) Reset()                    { *m = E2BInMoneyReq{} }
func (m *E2BInMoneyReq) String() string            { return proto1.CompactTextString(m) }
func (*E2BInMoneyReq) ProtoMessage()               {}
func (*E2BInMoneyReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{83} }

func (m *E2BInMoneyReq) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *E2BInMoneyReq) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *E2BInMoneyReq) GetBankAcct() string {
	if m != nil && m.BankAcct != nil {
		return *m.BankAcct
	}
	return ""
}

func (m *E2BInMoneyReq) GetExchAcct() string {
	if m != nil && m.ExchAcct != nil {
		return *m.ExchAcct
	}
	return ""
}

func (m *E2BInMoneyReq) GetCustCIDType() int32 {
	if m != nil && m.CustCIDType != nil {
		return *m.CustCIDType
	}
	return 0
}

func (m *E2BInMoneyReq) GetCustCID() string {
	if m != nil && m.CustCID != nil {
		return *m.CustCID
	}
	return ""
}

func (m *E2BInMoneyReq) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

func (m *E2BInMoneyReq) GetAmount() float64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *E2BInMoneyReq) GetCustName() string {
	if m != nil && m.CustName != nil {
		return *m.CustName
	}
	return ""
}

func (m *E2BInMoneyReq) GetBankPsw() string {
	if m != nil && m.BankPsw != nil {
		return *m.BankPsw
	}
	return ""
}

func (m *E2BInMoneyReq) GetReversed() string {
	if m != nil && m.Reversed != nil {
		return *m.Reversed
	}
	return ""
}

// 交易端入金回应 0x11010008
type E2BInMoneyRsp struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankSID          *string `protobuf:"bytes,2,opt,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,3,req,name=BankID" json:"BankID,omitempty"`
	RetMsg           *string `protobuf:"bytes,4,opt,name=RetMsg" json:"RetMsg,omitempty"`
	RetCode          *int32  `protobuf:"varint,5,req,name=RetCode" json:"RetCode,omitempty"`
	PostUrl          *string `protobuf:"bytes,6,opt,name=PostUrl" json:"PostUrl,omitempty"`
	PostData         *string `protobuf:"bytes,7,opt,name=PostData" json:"PostData,omitempty"`
	PayInfo          *string `protobuf:"bytes,8,opt,name=PayInfo" json:"PayInfo,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2BInMoneyRsp) Reset()                    { *m = E2BInMoneyRsp{} }
func (m *E2BInMoneyRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2BInMoneyRsp) ProtoMessage()               {}
func (*E2BInMoneyRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{84} }

func (m *E2BInMoneyRsp) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *E2BInMoneyRsp) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *E2BInMoneyRsp) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *E2BInMoneyRsp) GetRetMsg() string {
	if m != nil && m.RetMsg != nil {
		return *m.RetMsg
	}
	return ""
}

func (m *E2BInMoneyRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2BInMoneyRsp) GetPostUrl() string {
	if m != nil && m.PostUrl != nil {
		return *m.PostUrl
	}
	return ""
}

func (m *E2BInMoneyRsp) GetPostData() string {
	if m != nil && m.PostData != nil {
		return *m.PostData
	}
	return ""
}

func (m *E2BInMoneyRsp) GetPayInfo() string {
	if m != nil && m.PayInfo != nil {
		return *m.PayInfo
	}
	return ""
}

// 交易端出金请求 0x11010009
type E2BOutMoneyReq struct {
	ExchSID          *string           `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankID           *int32            `protobuf:"varint,2,req,name=BankID" json:"BankID,omitempty"`
	BankAcct         *string           `protobuf:"bytes,3,req,name=BankAcct" json:"BankAcct,omitempty"`
	ExchAcct         *string           `protobuf:"bytes,4,req,name=ExchAcct" json:"ExchAcct,omitempty"`
	ExchPsw          *string           `protobuf:"bytes,5,req,name=ExchPsw" json:"ExchPsw,omitempty"`
	CustCIDType      *int32            `protobuf:"varint,6,req,name=CustCIDType" json:"CustCIDType,omitempty"`
	CustCID          *string           `protobuf:"bytes,7,req,name=CustCID" json:"CustCID,omitempty"`
	Currency         *int32            `protobuf:"varint,8,req,name=Currency" json:"Currency,omitempty"`
	Amount           *float64          `protobuf:"fixed64,9,req,name=Amount" json:"Amount,omitempty"`
	CustName         *string           `protobuf:"bytes,10,opt,name=CustName" json:"CustName,omitempty"`
	RepeatFlag       *int32            `protobuf:"varint,11,opt,name=RepeatFlag" json:"RepeatFlag,omitempty"`
	BankPsw          *string           `protobuf:"bytes,12,opt,name=BankPsw" json:"BankPsw,omitempty"`
	AddInfo          []*AdditionalInfo `protobuf:"bytes,13,rep,name=AddInfo" json:"AddInfo,omitempty"`
	Reversed         *string           `protobuf:"bytes,14,opt,name=Reversed" json:"Reversed,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *E2BOutMoneyReq) Reset()                    { *m = E2BOutMoneyReq{} }
func (m *E2BOutMoneyReq) String() string            { return proto1.CompactTextString(m) }
func (*E2BOutMoneyReq) ProtoMessage()               {}
func (*E2BOutMoneyReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{85} }

func (m *E2BOutMoneyReq) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *E2BOutMoneyReq) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *E2BOutMoneyReq) GetBankAcct() string {
	if m != nil && m.BankAcct != nil {
		return *m.BankAcct
	}
	return ""
}

func (m *E2BOutMoneyReq) GetExchAcct() string {
	if m != nil && m.ExchAcct != nil {
		return *m.ExchAcct
	}
	return ""
}

func (m *E2BOutMoneyReq) GetExchPsw() string {
	if m != nil && m.ExchPsw != nil {
		return *m.ExchPsw
	}
	return ""
}

func (m *E2BOutMoneyReq) GetCustCIDType() int32 {
	if m != nil && m.CustCIDType != nil {
		return *m.CustCIDType
	}
	return 0
}

func (m *E2BOutMoneyReq) GetCustCID() string {
	if m != nil && m.CustCID != nil {
		return *m.CustCID
	}
	return ""
}

func (m *E2BOutMoneyReq) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

func (m *E2BOutMoneyReq) GetAmount() float64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *E2BOutMoneyReq) GetCustName() string {
	if m != nil && m.CustName != nil {
		return *m.CustName
	}
	return ""
}

func (m *E2BOutMoneyReq) GetRepeatFlag() int32 {
	if m != nil && m.RepeatFlag != nil {
		return *m.RepeatFlag
	}
	return 0
}

func (m *E2BOutMoneyReq) GetBankPsw() string {
	if m != nil && m.BankPsw != nil {
		return *m.BankPsw
	}
	return ""
}

func (m *E2BOutMoneyReq) GetAddInfo() []*AdditionalInfo {
	if m != nil {
		return m.AddInfo
	}
	return nil
}

func (m *E2BOutMoneyReq) GetReversed() string {
	if m != nil && m.Reversed != nil {
		return *m.Reversed
	}
	return ""
}

// 交易端出金回应 0x1101000A
type E2BOutMoneyRsp struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankSID          *string `protobuf:"bytes,2,opt,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,3,req,name=BankID" json:"BankID,omitempty"`
	RetMsg           *string `protobuf:"bytes,4,opt,name=RetMsg" json:"RetMsg,omitempty"`
	RetCode          *int32  `protobuf:"varint,5,req,name=RetCode" json:"RetCode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2BOutMoneyRsp) Reset()                    { *m = E2BOutMoneyRsp{} }
func (m *E2BOutMoneyRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2BOutMoneyRsp) ProtoMessage()               {}
func (*E2BOutMoneyRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{86} }

func (m *E2BOutMoneyRsp) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *E2BOutMoneyRsp) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *E2BOutMoneyRsp) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *E2BOutMoneyRsp) GetRetMsg() string {
	if m != nil && m.RetMsg != nil {
		return *m.RetMsg
	}
	return ""
}

func (m *E2BOutMoneyRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

// 交易端查询银行余额请求 0x1101000B
type E2BQueryBankMoneyReq struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankID           *int32  `protobuf:"varint,2,req,name=BankID" json:"BankID,omitempty"`
	BankAcct         *string `protobuf:"bytes,3,req,name=BankAcct" json:"BankAcct,omitempty"`
	ExchAcct         *string `protobuf:"bytes,4,req,name=ExchAcct" json:"ExchAcct,omitempty"`
	ExchPsw          *string `protobuf:"bytes,5,req,name=ExchPsw" json:"ExchPsw,omitempty"`
	CustCIDType      *int32  `protobuf:"varint,6,req,name=CustCIDType" json:"CustCIDType,omitempty"`
	CustCID          *string `protobuf:"bytes,7,req,name=CustCID" json:"CustCID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2BQueryBankMoneyReq) Reset()                    { *m = E2BQueryBankMoneyReq{} }
func (m *E2BQueryBankMoneyReq) String() string            { return proto1.CompactTextString(m) }
func (*E2BQueryBankMoneyReq) ProtoMessage()               {}
func (*E2BQueryBankMoneyReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{87} }

func (m *E2BQueryBankMoneyReq) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *E2BQueryBankMoneyReq) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *E2BQueryBankMoneyReq) GetBankAcct() string {
	if m != nil && m.BankAcct != nil {
		return *m.BankAcct
	}
	return ""
}

func (m *E2BQueryBankMoneyReq) GetExchAcct() string {
	if m != nil && m.ExchAcct != nil {
		return *m.ExchAcct
	}
	return ""
}

func (m *E2BQueryBankMoneyReq) GetExchPsw() string {
	if m != nil && m.ExchPsw != nil {
		return *m.ExchPsw
	}
	return ""
}

func (m *E2BQueryBankMoneyReq) GetCustCIDType() int32 {
	if m != nil && m.CustCIDType != nil {
		return *m.CustCIDType
	}
	return 0
}

func (m *E2BQueryBankMoneyReq) GetCustCID() string {
	if m != nil && m.CustCID != nil {
		return *m.CustCID
	}
	return ""
}

// 交易端查询银行余额回应 0x1101000C
type E2BQueryBankMoneyRsp struct {
	ExchSID          *string  `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankSID          *string  `protobuf:"bytes,2,opt,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32   `protobuf:"varint,3,req,name=BankID" json:"BankID,omitempty"`
	Currency         *int32   `protobuf:"varint,4,req,name=Currency" json:"Currency,omitempty"`
	Amount           *float64 `protobuf:"fixed64,5,req,name=Amount" json:"Amount,omitempty"`
	AmountAvailable  *float64 `protobuf:"fixed64,6,req,name=AmountAvailable" json:"AmountAvailable,omitempty"`
	AmountFetchable  *float64 `protobuf:"fixed64,7,req,name=AmountFetchable" json:"AmountFetchable,omitempty"`
	RetMsg           *string  `protobuf:"bytes,8,opt,name=RetMsg" json:"RetMsg,omitempty"`
	RetCode          *int32   `protobuf:"varint,9,req,name=RetCode" json:"RetCode,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *E2BQueryBankMoneyRsp) Reset()                    { *m = E2BQueryBankMoneyRsp{} }
func (m *E2BQueryBankMoneyRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2BQueryBankMoneyRsp) ProtoMessage()               {}
func (*E2BQueryBankMoneyRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{88} }

func (m *E2BQueryBankMoneyRsp) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *E2BQueryBankMoneyRsp) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *E2BQueryBankMoneyRsp) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *E2BQueryBankMoneyRsp) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

func (m *E2BQueryBankMoneyRsp) GetAmount() float64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *E2BQueryBankMoneyRsp) GetAmountAvailable() float64 {
	if m != nil && m.AmountAvailable != nil {
		return *m.AmountAvailable
	}
	return 0
}

func (m *E2BQueryBankMoneyRsp) GetAmountFetchable() float64 {
	if m != nil && m.AmountFetchable != nil {
		return *m.AmountFetchable
	}
	return 0
}

func (m *E2BQueryBankMoneyRsp) GetRetMsg() string {
	if m != nil && m.RetMsg != nil {
		return *m.RetMsg
	}
	return ""
}

func (m *E2BQueryBankMoneyRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

// 交易端冲正请求 0x1101000D
type E2BAdjustMoneyReq struct {
	ExchSID          *string  `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankID           *int32   `protobuf:"varint,2,req,name=BankID" json:"BankID,omitempty"`
	BankAcct         *string  `protobuf:"bytes,3,req,name=BankAcct" json:"BankAcct,omitempty"`
	ExchAcct         *string  `protobuf:"bytes,4,req,name=ExchAcct" json:"ExchAcct,omitempty"`
	Type             *int32   `protobuf:"varint,5,req,name=Type" json:"Type,omitempty"`
	SID              *string  `protobuf:"bytes,6,req,name=SID" json:"SID,omitempty"`
	CustCIDType      *int32   `protobuf:"varint,7,opt,name=CustCIDType" json:"CustCIDType,omitempty"`
	CustCID          *string  `protobuf:"bytes,8,opt,name=CustCID" json:"CustCID,omitempty"`
	Currency         *int32   `protobuf:"varint,9,req,name=Currency" json:"Currency,omitempty"`
	Amount           *float64 `protobuf:"fixed64,10,opt,name=Amount" json:"Amount,omitempty"`
	CustName         *string  `protobuf:"bytes,11,opt,name=CustName" json:"CustName,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *E2BAdjustMoneyReq) Reset()                    { *m = E2BAdjustMoneyReq{} }
func (m *E2BAdjustMoneyReq) String() string            { return proto1.CompactTextString(m) }
func (*E2BAdjustMoneyReq) ProtoMessage()               {}
func (*E2BAdjustMoneyReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{89} }

func (m *E2BAdjustMoneyReq) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *E2BAdjustMoneyReq) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *E2BAdjustMoneyReq) GetBankAcct() string {
	if m != nil && m.BankAcct != nil {
		return *m.BankAcct
	}
	return ""
}

func (m *E2BAdjustMoneyReq) GetExchAcct() string {
	if m != nil && m.ExchAcct != nil {
		return *m.ExchAcct
	}
	return ""
}

func (m *E2BAdjustMoneyReq) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *E2BAdjustMoneyReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *E2BAdjustMoneyReq) GetCustCIDType() int32 {
	if m != nil && m.CustCIDType != nil {
		return *m.CustCIDType
	}
	return 0
}

func (m *E2BAdjustMoneyReq) GetCustCID() string {
	if m != nil && m.CustCID != nil {
		return *m.CustCID
	}
	return ""
}

func (m *E2BAdjustMoneyReq) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

func (m *E2BAdjustMoneyReq) GetAmount() float64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *E2BAdjustMoneyReq) GetCustName() string {
	if m != nil && m.CustName != nil {
		return *m.CustName
	}
	return ""
}

// 交易端冲正回应 0x1101000E
type E2BAdjustMoneyRsp struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankSID          *string `protobuf:"bytes,2,opt,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,3,req,name=BankID" json:"BankID,omitempty"`
	RetMsg           *string `protobuf:"bytes,4,opt,name=RetMsg" json:"RetMsg,omitempty"`
	RetCode          *int32  `protobuf:"varint,5,req,name=RetCode" json:"RetCode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2BAdjustMoneyRsp) Reset()                    { *m = E2BAdjustMoneyRsp{} }
func (m *E2BAdjustMoneyRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2BAdjustMoneyRsp) ProtoMessage()               {}
func (*E2BAdjustMoneyRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{90} }

func (m *E2BAdjustMoneyRsp) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *E2BAdjustMoneyRsp) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *E2BAdjustMoneyRsp) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *E2BAdjustMoneyRsp) GetRetMsg() string {
	if m != nil && m.RetMsg != nil {
		return *m.RetMsg
	}
	return ""
}

func (m *E2BAdjustMoneyRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

// 交易端文件通知请求 0x1101000F
type E2BFileNotificationReq struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankID           *int32  `protobuf:"varint,2,req,name=BankID" json:"BankID,omitempty"`
	Type             *int32  `protobuf:"varint,3,req,name=Type" json:"Type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2BFileNotificationReq) Reset()                    { *m = E2BFileNotificationReq{} }
func (m *E2BFileNotificationReq) String() string            { return proto1.CompactTextString(m) }
func (*E2BFileNotificationReq) ProtoMessage()               {}
func (*E2BFileNotificationReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{91} }

func (m *E2BFileNotificationReq) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *E2BFileNotificationReq) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *E2BFileNotificationReq) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

// 交易端文件通知回应 0x11010010
type E2BFileNotificationRsp struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankSID          *string `protobuf:"bytes,2,opt,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,3,req,name=BankID" json:"BankID,omitempty"`
	RetMsg           *string `protobuf:"bytes,4,opt,name=RetMsg" json:"RetMsg,omitempty"`
	RetCode          *int32  `protobuf:"varint,5,req,name=RetCode" json:"RetCode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2BFileNotificationRsp) Reset()                    { *m = E2BFileNotificationRsp{} }
func (m *E2BFileNotificationRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2BFileNotificationRsp) ProtoMessage()               {}
func (*E2BFileNotificationRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{92} }

func (m *E2BFileNotificationRsp) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *E2BFileNotificationRsp) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *E2BFileNotificationRsp) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *E2BFileNotificationRsp) GetRetMsg() string {
	if m != nil && m.RetMsg != nil {
		return *m.RetMsg
	}
	return ""
}

func (m *E2BFileNotificationRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

// 交易端更新用户资料请求 0x11010011
type E2BUpdateUserInfoReq struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankID           *int32  `protobuf:"varint,2,req,name=BankID" json:"BankID,omitempty"`
	BankAcct         *string `protobuf:"bytes,3,req,name=BankAcct" json:"BankAcct,omitempty"`
	ExchAcct         *string `protobuf:"bytes,4,req,name=ExchAcct" json:"ExchAcct,omitempty"`
	ExchPsw          *string `protobuf:"bytes,5,req,name=ExchPsw" json:"ExchPsw,omitempty"`
	CustName         *string `protobuf:"bytes,6,req,name=CustName" json:"CustName,omitempty"`
	CustCIDType      *int32  `protobuf:"varint,7,req,name=CustCIDType" json:"CustCIDType,omitempty"`
	CustCID          *string `protobuf:"bytes,8,req,name=CustCID" json:"CustCID,omitempty"`
	BankPsw          *string `protobuf:"bytes,9,opt,name=BankPsw" json:"BankPsw,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2BUpdateUserInfoReq) Reset()                    { *m = E2BUpdateUserInfoReq{} }
func (m *E2BUpdateUserInfoReq) String() string            { return proto1.CompactTextString(m) }
func (*E2BUpdateUserInfoReq) ProtoMessage()               {}
func (*E2BUpdateUserInfoReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{93} }

func (m *E2BUpdateUserInfoReq) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *E2BUpdateUserInfoReq) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *E2BUpdateUserInfoReq) GetBankAcct() string {
	if m != nil && m.BankAcct != nil {
		return *m.BankAcct
	}
	return ""
}

func (m *E2BUpdateUserInfoReq) GetExchAcct() string {
	if m != nil && m.ExchAcct != nil {
		return *m.ExchAcct
	}
	return ""
}

func (m *E2BUpdateUserInfoReq) GetExchPsw() string {
	if m != nil && m.ExchPsw != nil {
		return *m.ExchPsw
	}
	return ""
}

func (m *E2BUpdateUserInfoReq) GetCustName() string {
	if m != nil && m.CustName != nil {
		return *m.CustName
	}
	return ""
}

func (m *E2BUpdateUserInfoReq) GetCustCIDType() int32 {
	if m != nil && m.CustCIDType != nil {
		return *m.CustCIDType
	}
	return 0
}

func (m *E2BUpdateUserInfoReq) GetCustCID() string {
	if m != nil && m.CustCID != nil {
		return *m.CustCID
	}
	return ""
}

func (m *E2BUpdateUserInfoReq) GetBankPsw() string {
	if m != nil && m.BankPsw != nil {
		return *m.BankPsw
	}
	return ""
}

// 交易端更新用户资料回应 0x11010012
type E2BUpdateUserInfoRsp struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankSID          *string `protobuf:"bytes,2,opt,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,3,req,name=BankID" json:"BankID,omitempty"`
	RetMsg           *string `protobuf:"bytes,4,opt,name=RetMsg" json:"RetMsg,omitempty"`
	RetCode          *int32  `protobuf:"varint,5,req,name=RetCode" json:"RetCode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2BUpdateUserInfoRsp) Reset()                    { *m = E2BUpdateUserInfoRsp{} }
func (m *E2BUpdateUserInfoRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2BUpdateUserInfoRsp) ProtoMessage()               {}
func (*E2BUpdateUserInfoRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{94} }

func (m *E2BUpdateUserInfoRsp) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *E2BUpdateUserInfoRsp) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *E2BUpdateUserInfoRsp) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *E2BUpdateUserInfoRsp) GetRetMsg() string {
	if m != nil && m.RetMsg != nil {
		return *m.RetMsg
	}
	return ""
}

func (m *E2BUpdateUserInfoRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

// 交易端查询用户签约状态请求 0x11010013
type E2BQuerySignStatusReq struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankID           *int32  `protobuf:"varint,2,req,name=BankID" json:"BankID,omitempty"`
	BankAcct         *string `protobuf:"bytes,3,req,name=BankAcct" json:"BankAcct,omitempty"`
	ExchAcct         *string `protobuf:"bytes,4,req,name=ExchAcct" json:"ExchAcct,omitempty"`
	CustName         *string `protobuf:"bytes,5,req,name=CustName" json:"CustName,omitempty"`
	CustCIDType      *int32  `protobuf:"varint,6,req,name=CustCIDType" json:"CustCIDType,omitempty"`
	CustCID          *string `protobuf:"bytes,7,req,name=CustCID" json:"CustCID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2BQuerySignStatusReq) Reset()                    { *m = E2BQuerySignStatusReq{} }
func (m *E2BQuerySignStatusReq) String() string            { return proto1.CompactTextString(m) }
func (*E2BQuerySignStatusReq) ProtoMessage()               {}
func (*E2BQuerySignStatusReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{95} }

func (m *E2BQuerySignStatusReq) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *E2BQuerySignStatusReq) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *E2BQuerySignStatusReq) GetBankAcct() string {
	if m != nil && m.BankAcct != nil {
		return *m.BankAcct
	}
	return ""
}

func (m *E2BQuerySignStatusReq) GetExchAcct() string {
	if m != nil && m.ExchAcct != nil {
		return *m.ExchAcct
	}
	return ""
}

func (m *E2BQuerySignStatusReq) GetCustName() string {
	if m != nil && m.CustName != nil {
		return *m.CustName
	}
	return ""
}

func (m *E2BQuerySignStatusReq) GetCustCIDType() int32 {
	if m != nil && m.CustCIDType != nil {
		return *m.CustCIDType
	}
	return 0
}

func (m *E2BQuerySignStatusReq) GetCustCID() string {
	if m != nil && m.CustCID != nil {
		return *m.CustCID
	}
	return ""
}

// 交易端查询用户签约状态回应 0x11010014
type E2BQuerySignStatusRsp struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankSID          *string `protobuf:"bytes,2,opt,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,3,req,name=BankID" json:"BankID,omitempty"`
	Status           *int32  `protobuf:"varint,4,req,name=Status" json:"Status,omitempty"`
	RetMsg           *string `protobuf:"bytes,6,opt,name=RetMsg" json:"RetMsg,omitempty"`
	RetCode          *int32  `protobuf:"varint,7,req,name=RetCode" json:"RetCode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2BQuerySignStatusRsp) Reset()                    { *m = E2BQuerySignStatusRsp{} }
func (m *E2BQuerySignStatusRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2BQuerySignStatusRsp) ProtoMessage()               {}
func (*E2BQuerySignStatusRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{96} }

func (m *E2BQuerySignStatusRsp) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *E2BQuerySignStatusRsp) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *E2BQuerySignStatusRsp) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *E2BQuerySignStatusRsp) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *E2BQuerySignStatusRsp) GetRetMsg() string {
	if m != nil && m.RetMsg != nil {
		return *m.RetMsg
	}
	return ""
}

func (m *E2BQuerySignStatusRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

// 交易端对账开始请求 0x11010017
type E2BCheckStartReq struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankID           *int32  `protobuf:"varint,2,req,name=BankID" json:"BankID,omitempty"`
	BatchNo          *int32  `protobuf:"varint,3,req,name=BatchNo" json:"BatchNo,omitempty"`
	TradeDate        *string `protobuf:"bytes,4,opt,name=TradeDate" json:"TradeDate,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2BCheckStartReq) Reset()                    { *m = E2BCheckStartReq{} }
func (m *E2BCheckStartReq) String() string            { return proto1.CompactTextString(m) }
func (*E2BCheckStartReq) ProtoMessage()               {}
func (*E2BCheckStartReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{97} }

func (m *E2BCheckStartReq) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *E2BCheckStartReq) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *E2BCheckStartReq) GetBatchNo() int32 {
	if m != nil && m.BatchNo != nil {
		return *m.BatchNo
	}
	return 0
}

func (m *E2BCheckStartReq) GetTradeDate() string {
	if m != nil && m.TradeDate != nil {
		return *m.TradeDate
	}
	return ""
}

// 交易端对账开始回应 0x11010018
type E2BCheckStartRsp struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankSID          *string `protobuf:"bytes,2,opt,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,3,req,name=BankID" json:"BankID,omitempty"`
	RetCode          *int32  `protobuf:"varint,4,req,name=RetCode" json:"RetCode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2BCheckStartRsp) Reset()                    { *m = E2BCheckStartRsp{} }
func (m *E2BCheckStartRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2BCheckStartRsp) ProtoMessage()               {}
func (*E2BCheckStartRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{98} }

func (m *E2BCheckStartRsp) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *E2BCheckStartRsp) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *E2BCheckStartRsp) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *E2BCheckStartRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

// 交易端清算开始请求  0x11010019
type E2BClearingStartReq struct {
	ExchSID                  *string                              `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankID                   *int32                               `protobuf:"varint,2,req,name=BankID" json:"BankID,omitempty"`
	BatchNo                  *int32                               `protobuf:"varint,3,req,name=BatchNo" json:"BatchNo,omitempty"`
	TradeDate                *string                              `protobuf:"bytes,4,req,name=TradeDate" json:"TradeDate,omitempty"`
	RecordCount              *int32                               `protobuf:"varint,5,req,name=RecordCount,def=0" json:"RecordCount,omitempty"`
	Type                     *int32                               `protobuf:"varint,6,req,name=Type,def=1" json:"Type,omitempty"`
	ClearFileCount           *int32                               `protobuf:"varint,7,req,name=ClearFileCount" json:"ClearFileCount,omitempty"`
	FileInfo                 []*E2BClearingStartReq_ClearFileInfo `protobuf:"bytes,8,rep,name=FileInfo" json:"FileInfo,omitempty"`
	InOutTransFileName       *string                              `protobuf:"bytes,9,opt,name=InOutTransFileName" json:"InOutTransFileName,omitempty"`
	InOutTransFileMD5        *string                              `protobuf:"bytes,10,opt,name=InOutTransFileMD5" json:"InOutTransFileMD5,omitempty"`
	InOutTransRecordCount    *int32                               `protobuf:"varint,11,opt,name=InOutTransRecordCount,def=0" json:"InOutTransRecordCount,omitempty"`
	SignAcctTransFileName    *string                              `protobuf:"bytes,12,opt,name=SignAcctTransFileName" json:"SignAcctTransFileName,omitempty"`
	SignAcctTransFileMD5     *string                              `protobuf:"bytes,13,opt,name=SignAcctTransFileMD5" json:"SignAcctTransFileMD5,omitempty"`
	SignAcctTransRecordCount *int32                               `protobuf:"varint,14,opt,name=SignAcctTransRecordCount,def=0" json:"SignAcctTransRecordCount,omitempty"`
	XXX_unrecognized         []byte                               `json:"-"`
}

func (m *E2BClearingStartReq) Reset()                    { *m = E2BClearingStartReq{} }
func (m *E2BClearingStartReq) String() string            { return proto1.CompactTextString(m) }
func (*E2BClearingStartReq) ProtoMessage()               {}
func (*E2BClearingStartReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{99} }

const Default_E2BClearingStartReq_RecordCount int32 = 0
const Default_E2BClearingStartReq_Type int32 = 1
const Default_E2BClearingStartReq_InOutTransRecordCount int32 = 0
const Default_E2BClearingStartReq_SignAcctTransRecordCount int32 = 0

func (m *E2BClearingStartReq) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *E2BClearingStartReq) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *E2BClearingStartReq) GetBatchNo() int32 {
	if m != nil && m.BatchNo != nil {
		return *m.BatchNo
	}
	return 0
}

func (m *E2BClearingStartReq) GetTradeDate() string {
	if m != nil && m.TradeDate != nil {
		return *m.TradeDate
	}
	return ""
}

func (m *E2BClearingStartReq) GetRecordCount() int32 {
	if m != nil && m.RecordCount != nil {
		return *m.RecordCount
	}
	return Default_E2BClearingStartReq_RecordCount
}

func (m *E2BClearingStartReq) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_E2BClearingStartReq_Type
}

func (m *E2BClearingStartReq) GetClearFileCount() int32 {
	if m != nil && m.ClearFileCount != nil {
		return *m.ClearFileCount
	}
	return 0
}

func (m *E2BClearingStartReq) GetFileInfo() []*E2BClearingStartReq_ClearFileInfo {
	if m != nil {
		return m.FileInfo
	}
	return nil
}

func (m *E2BClearingStartReq) GetInOutTransFileName() string {
	if m != nil && m.InOutTransFileName != nil {
		return *m.InOutTransFileName
	}
	return ""
}

func (m *E2BClearingStartReq) GetInOutTransFileMD5() string {
	if m != nil && m.InOutTransFileMD5 != nil {
		return *m.InOutTransFileMD5
	}
	return ""
}

func (m *E2BClearingStartReq) GetInOutTransRecordCount() int32 {
	if m != nil && m.InOutTransRecordCount != nil {
		return *m.InOutTransRecordCount
	}
	return Default_E2BClearingStartReq_InOutTransRecordCount
}

func (m *E2BClearingStartReq) GetSignAcctTransFileName() string {
	if m != nil && m.SignAcctTransFileName != nil {
		return *m.SignAcctTransFileName
	}
	return ""
}

func (m *E2BClearingStartReq) GetSignAcctTransFileMD5() string {
	if m != nil && m.SignAcctTransFileMD5 != nil {
		return *m.SignAcctTransFileMD5
	}
	return ""
}

func (m *E2BClearingStartReq) GetSignAcctTransRecordCount() int32 {
	if m != nil && m.SignAcctTransRecordCount != nil {
		return *m.SignAcctTransRecordCount
	}
	return Default_E2BClearingStartReq_SignAcctTransRecordCount
}

type E2BClearingStartReq_ClearFileInfo struct {
	ClearFileName    *string `protobuf:"bytes,1,req,name=ClearFileName" json:"ClearFileName,omitempty"`
	ClearFileMD5     *string `protobuf:"bytes,2,req,name=ClearFileMD5" json:"ClearFileMD5,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2BClearingStartReq_ClearFileInfo) Reset()         { *m = E2BClearingStartReq_ClearFileInfo{} }
func (m *E2BClearingStartReq_ClearFileInfo) String() string { return proto1.CompactTextString(m) }
func (*E2BClearingStartReq_ClearFileInfo) ProtoMessage()    {}
func (*E2BClearingStartReq_ClearFileInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{99, 0}
}

func (m *E2BClearingStartReq_ClearFileInfo) GetClearFileName() string {
	if m != nil && m.ClearFileName != nil {
		return *m.ClearFileName
	}
	return ""
}

func (m *E2BClearingStartReq_ClearFileInfo) GetClearFileMD5() string {
	if m != nil && m.ClearFileMD5 != nil {
		return *m.ClearFileMD5
	}
	return ""
}

// 交易端清算开始回应  0x11010020
type E2BClearingStartRsp struct {
	ExchSID          *string                               `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankSID          *string                               `protobuf:"bytes,2,opt,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32                                `protobuf:"varint,3,req,name=BankID" json:"BankID,omitempty"`
	RetCode          *int32                                `protobuf:"varint,4,req,name=RetCode" json:"RetCode,omitempty"`
	Type             *int32                                `protobuf:"varint,5,req,name=Type,def=1" json:"Type,omitempty"`
	RecordCount      *int32                                `protobuf:"varint,6,req,name=RecordCount,def=0" json:"RecordCount,omitempty"`
	UploadFileCount  *int32                                `protobuf:"varint,7,opt,name=UploadFileCount,def=0" json:"UploadFileCount,omitempty"`
	UploadInfo       []*E2BClearingStartRsp_UploadFileInfo `protobuf:"bytes,8,rep,name=UploadInfo" json:"UploadInfo,omitempty"`
	XXX_unrecognized []byte                                `json:"-"`
}

func (m *E2BClearingStartRsp) Reset()                    { *m = E2BClearingStartRsp{} }
func (m *E2BClearingStartRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2BClearingStartRsp) ProtoMessage()               {}
func (*E2BClearingStartRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{100} }

const Default_E2BClearingStartRsp_Type int32 = 1
const Default_E2BClearingStartRsp_RecordCount int32 = 0
const Default_E2BClearingStartRsp_UploadFileCount int32 = 0

func (m *E2BClearingStartRsp) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *E2BClearingStartRsp) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *E2BClearingStartRsp) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *E2BClearingStartRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *E2BClearingStartRsp) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_E2BClearingStartRsp_Type
}

func (m *E2BClearingStartRsp) GetRecordCount() int32 {
	if m != nil && m.RecordCount != nil {
		return *m.RecordCount
	}
	return Default_E2BClearingStartRsp_RecordCount
}

func (m *E2BClearingStartRsp) GetUploadFileCount() int32 {
	if m != nil && m.UploadFileCount != nil {
		return *m.UploadFileCount
	}
	return Default_E2BClearingStartRsp_UploadFileCount
}

func (m *E2BClearingStartRsp) GetUploadInfo() []*E2BClearingStartRsp_UploadFileInfo {
	if m != nil {
		return m.UploadInfo
	}
	return nil
}

type E2BClearingStartRsp_UploadFileInfo struct {
	UploadFileName    *string `protobuf:"bytes,1,req,name=UploadFileName" json:"UploadFileName,omitempty"`
	UploadFileNameMD5 *string `protobuf:"bytes,2,req,name=UploadFileNameMD5" json:"UploadFileNameMD5,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *E2BClearingStartRsp_UploadFileInfo) Reset()         { *m = E2BClearingStartRsp_UploadFileInfo{} }
func (m *E2BClearingStartRsp_UploadFileInfo) String() string { return proto1.CompactTextString(m) }
func (*E2BClearingStartRsp_UploadFileInfo) ProtoMessage()    {}
func (*E2BClearingStartRsp_UploadFileInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{100, 0}
}

func (m *E2BClearingStartRsp_UploadFileInfo) GetUploadFileName() string {
	if m != nil && m.UploadFileName != nil {
		return *m.UploadFileName
	}
	return ""
}

func (m *E2BClearingStartRsp_UploadFileInfo) GetUploadFileNameMD5() string {
	if m != nil && m.UploadFileNameMD5 != nil {
		return *m.UploadFileNameMD5
	}
	return ""
}

// 验证码请求 0x11010021
type E2BVerifyCodeReq struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankID           *int32  `protobuf:"varint,2,req,name=BankID" json:"BankID,omitempty"`
	OrderID          *string `protobuf:"bytes,3,req,name=OrderID" json:"OrderID,omitempty"`
	VerifyCode       *string `protobuf:"bytes,4,req,name=VerifyCode" json:"VerifyCode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2BVerifyCodeReq) Reset()                    { *m = E2BVerifyCodeReq{} }
func (m *E2BVerifyCodeReq) String() string            { return proto1.CompactTextString(m) }
func (*E2BVerifyCodeReq) ProtoMessage()               {}
func (*E2BVerifyCodeReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{101} }

func (m *E2BVerifyCodeReq) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *E2BVerifyCodeReq) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *E2BVerifyCodeReq) GetOrderID() string {
	if m != nil && m.OrderID != nil {
		return *m.OrderID
	}
	return ""
}

func (m *E2BVerifyCodeReq) GetVerifyCode() string {
	if m != nil && m.VerifyCode != nil {
		return *m.VerifyCode
	}
	return ""
}

// 验证码回应 0x11010022
type E2BVerifyCodeRsp struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankSID          *string `protobuf:"bytes,2,opt,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,3,req,name=BankID" json:"BankID,omitempty"`
	RetCode          *int32  `protobuf:"varint,4,req,name=RetCode" json:"RetCode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2BVerifyCodeRsp) Reset()                    { *m = E2BVerifyCodeRsp{} }
func (m *E2BVerifyCodeRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2BVerifyCodeRsp) ProtoMessage()               {}
func (*E2BVerifyCodeRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{102} }

func (m *E2BVerifyCodeRsp) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *E2BVerifyCodeRsp) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *E2BVerifyCodeRsp) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *E2BVerifyCodeRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

// 出入金服务到交易系统 B2E
// ////////////////////////////////////////////////////////////////////
// 出入金服务与交易系统交互
// ////////////////////////////////////////////////////////////////////
// 银行端签约请求 0x11020001
type B2EAttachAcctReq struct {
	BankSID          *string `protobuf:"bytes,1,req,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,2,req,name=BankID" json:"BankID,omitempty"`
	BankAcct         *string `protobuf:"bytes,3,req,name=BankAcct" json:"BankAcct,omitempty"`
	ExchAcct         *string `protobuf:"bytes,4,req,name=ExchAcct" json:"ExchAcct,omitempty"`
	ExchPsw          *string `protobuf:"bytes,5,opt,name=ExchPsw" json:"ExchPsw,omitempty"`
	CustName         *string `protobuf:"bytes,6,req,name=CustName" json:"CustName,omitempty"`
	CustCIDType      *int32  `protobuf:"varint,7,req,name=CustCIDType" json:"CustCIDType,omitempty"`
	CustCID          *string `protobuf:"bytes,8,req,name=CustCID" json:"CustCID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *B2EAttachAcctReq) Reset()                    { *m = B2EAttachAcctReq{} }
func (m *B2EAttachAcctReq) String() string            { return proto1.CompactTextString(m) }
func (*B2EAttachAcctReq) ProtoMessage()               {}
func (*B2EAttachAcctReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{103} }

func (m *B2EAttachAcctReq) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2EAttachAcctReq) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *B2EAttachAcctReq) GetBankAcct() string {
	if m != nil && m.BankAcct != nil {
		return *m.BankAcct
	}
	return ""
}

func (m *B2EAttachAcctReq) GetExchAcct() string {
	if m != nil && m.ExchAcct != nil {
		return *m.ExchAcct
	}
	return ""
}

func (m *B2EAttachAcctReq) GetExchPsw() string {
	if m != nil && m.ExchPsw != nil {
		return *m.ExchPsw
	}
	return ""
}

func (m *B2EAttachAcctReq) GetCustName() string {
	if m != nil && m.CustName != nil {
		return *m.CustName
	}
	return ""
}

func (m *B2EAttachAcctReq) GetCustCIDType() int32 {
	if m != nil && m.CustCIDType != nil {
		return *m.CustCIDType
	}
	return 0
}

func (m *B2EAttachAcctReq) GetCustCID() string {
	if m != nil && m.CustCID != nil {
		return *m.CustCID
	}
	return ""
}

// 银行端签约回应 0x11020002
type B2EAttachAcctRsp struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankSID          *string `protobuf:"bytes,2,req,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,3,req,name=BankID" json:"BankID,omitempty"`
	RetCode          *int32  `protobuf:"varint,4,req,name=RetCode" json:"RetCode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *B2EAttachAcctRsp) Reset()                    { *m = B2EAttachAcctRsp{} }
func (m *B2EAttachAcctRsp) String() string            { return proto1.CompactTextString(m) }
func (*B2EAttachAcctRsp) ProtoMessage()               {}
func (*B2EAttachAcctRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{104} }

func (m *B2EAttachAcctRsp) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *B2EAttachAcctRsp) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2EAttachAcctRsp) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *B2EAttachAcctRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

// 银行端解约请求 0x11020003
type B2EDetachAcctReq struct {
	BankSID          *string `protobuf:"bytes,1,req,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,2,req,name=BankID" json:"BankID,omitempty"`
	BankAcct         *string `protobuf:"bytes,3,opt,name=BankAcct" json:"BankAcct,omitempty"`
	ExchAcct         *string `protobuf:"bytes,4,req,name=ExchAcct" json:"ExchAcct,omitempty"`
	ExchPsw          *string `protobuf:"bytes,5,opt,name=ExchPsw" json:"ExchPsw,omitempty"`
	CustCIDType      *int32  `protobuf:"varint,6,opt,name=CustCIDType" json:"CustCIDType,omitempty"`
	CustCID          *string `protobuf:"bytes,7,opt,name=CustCID" json:"CustCID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *B2EDetachAcctReq) Reset()                    { *m = B2EDetachAcctReq{} }
func (m *B2EDetachAcctReq) String() string            { return proto1.CompactTextString(m) }
func (*B2EDetachAcctReq) ProtoMessage()               {}
func (*B2EDetachAcctReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{105} }

func (m *B2EDetachAcctReq) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2EDetachAcctReq) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *B2EDetachAcctReq) GetBankAcct() string {
	if m != nil && m.BankAcct != nil {
		return *m.BankAcct
	}
	return ""
}

func (m *B2EDetachAcctReq) GetExchAcct() string {
	if m != nil && m.ExchAcct != nil {
		return *m.ExchAcct
	}
	return ""
}

func (m *B2EDetachAcctReq) GetExchPsw() string {
	if m != nil && m.ExchPsw != nil {
		return *m.ExchPsw
	}
	return ""
}

func (m *B2EDetachAcctReq) GetCustCIDType() int32 {
	if m != nil && m.CustCIDType != nil {
		return *m.CustCIDType
	}
	return 0
}

func (m *B2EDetachAcctReq) GetCustCID() string {
	if m != nil && m.CustCID != nil {
		return *m.CustCID
	}
	return ""
}

// 银行端解约回应 0x11020004
type B2EDetachAcctRsp struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankSID          *string `protobuf:"bytes,2,req,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,3,req,name=BankID" json:"BankID,omitempty"`
	RetCode          *int32  `protobuf:"varint,4,req,name=RetCode" json:"RetCode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *B2EDetachAcctRsp) Reset()                    { *m = B2EDetachAcctRsp{} }
func (m *B2EDetachAcctRsp) String() string            { return proto1.CompactTextString(m) }
func (*B2EDetachAcctRsp) ProtoMessage()               {}
func (*B2EDetachAcctRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{106} }

func (m *B2EDetachAcctRsp) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *B2EDetachAcctRsp) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2EDetachAcctRsp) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *B2EDetachAcctRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

// 银行端入金请求 0x11020005
type B2EInMoneyReq struct {
	BankSID          *string  `protobuf:"bytes,1,req,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32   `protobuf:"varint,2,req,name=BankID" json:"BankID,omitempty"`
	BankAcct         *string  `protobuf:"bytes,3,req,name=BankAcct" json:"BankAcct,omitempty"`
	ExchAcct         *string  `protobuf:"bytes,4,req,name=ExchAcct" json:"ExchAcct,omitempty"`
	CustCIDType      *int32   `protobuf:"varint,5,opt,name=CustCIDType" json:"CustCIDType,omitempty"`
	CustCID          *string  `protobuf:"bytes,6,opt,name=CustCID" json:"CustCID,omitempty"`
	Currency         *int32   `protobuf:"varint,7,req,name=Currency" json:"Currency,omitempty"`
	Amount           *float64 `protobuf:"fixed64,8,req,name=Amount" json:"Amount,omitempty"`
	RepeatFlag       *int32   `protobuf:"varint,9,opt,name=RepeatFlag" json:"RepeatFlag,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *B2EInMoneyReq) Reset()                    { *m = B2EInMoneyReq{} }
func (m *B2EInMoneyReq) String() string            { return proto1.CompactTextString(m) }
func (*B2EInMoneyReq) ProtoMessage()               {}
func (*B2EInMoneyReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{107} }

func (m *B2EInMoneyReq) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2EInMoneyReq) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *B2EInMoneyReq) GetBankAcct() string {
	if m != nil && m.BankAcct != nil {
		return *m.BankAcct
	}
	return ""
}

func (m *B2EInMoneyReq) GetExchAcct() string {
	if m != nil && m.ExchAcct != nil {
		return *m.ExchAcct
	}
	return ""
}

func (m *B2EInMoneyReq) GetCustCIDType() int32 {
	if m != nil && m.CustCIDType != nil {
		return *m.CustCIDType
	}
	return 0
}

func (m *B2EInMoneyReq) GetCustCID() string {
	if m != nil && m.CustCID != nil {
		return *m.CustCID
	}
	return ""
}

func (m *B2EInMoneyReq) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

func (m *B2EInMoneyReq) GetAmount() float64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *B2EInMoneyReq) GetRepeatFlag() int32 {
	if m != nil && m.RepeatFlag != nil {
		return *m.RepeatFlag
	}
	return 0
}

// 银行端入金回应 0x11020006
type B2EInMoneyRsp struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankSID          *string `protobuf:"bytes,2,req,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,3,req,name=BankID" json:"BankID,omitempty"`
	RetCode          *int32  `protobuf:"varint,4,req,name=RetCode" json:"RetCode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *B2EInMoneyRsp) Reset()                    { *m = B2EInMoneyRsp{} }
func (m *B2EInMoneyRsp) String() string            { return proto1.CompactTextString(m) }
func (*B2EInMoneyRsp) ProtoMessage()               {}
func (*B2EInMoneyRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{108} }

func (m *B2EInMoneyRsp) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *B2EInMoneyRsp) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2EInMoneyRsp) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *B2EInMoneyRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

// 银行端出金请求 0x11020007
type B2EOutMoneyReq struct {
	BankSID          *string  `protobuf:"bytes,1,req,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32   `protobuf:"varint,2,req,name=BankID" json:"BankID,omitempty"`
	BankAcct         *string  `protobuf:"bytes,3,req,name=BankAcct" json:"BankAcct,omitempty"`
	ExchAcct         *string  `protobuf:"bytes,4,req,name=ExchAcct" json:"ExchAcct,omitempty"`
	ExchPsw          *string  `protobuf:"bytes,5,opt,name=ExchPsw" json:"ExchPsw,omitempty"`
	CustCIDType      *int32   `protobuf:"varint,6,opt,name=CustCIDType" json:"CustCIDType,omitempty"`
	CustCID          *string  `protobuf:"bytes,7,opt,name=CustCID" json:"CustCID,omitempty"`
	Currency         *int32   `protobuf:"varint,8,req,name=Currency" json:"Currency,omitempty"`
	Amount           *float64 `protobuf:"fixed64,9,req,name=Amount" json:"Amount,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *B2EOutMoneyReq) Reset()                    { *m = B2EOutMoneyReq{} }
func (m *B2EOutMoneyReq) String() string            { return proto1.CompactTextString(m) }
func (*B2EOutMoneyReq) ProtoMessage()               {}
func (*B2EOutMoneyReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{109} }

func (m *B2EOutMoneyReq) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2EOutMoneyReq) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *B2EOutMoneyReq) GetBankAcct() string {
	if m != nil && m.BankAcct != nil {
		return *m.BankAcct
	}
	return ""
}

func (m *B2EOutMoneyReq) GetExchAcct() string {
	if m != nil && m.ExchAcct != nil {
		return *m.ExchAcct
	}
	return ""
}

func (m *B2EOutMoneyReq) GetExchPsw() string {
	if m != nil && m.ExchPsw != nil {
		return *m.ExchPsw
	}
	return ""
}

func (m *B2EOutMoneyReq) GetCustCIDType() int32 {
	if m != nil && m.CustCIDType != nil {
		return *m.CustCIDType
	}
	return 0
}

func (m *B2EOutMoneyReq) GetCustCID() string {
	if m != nil && m.CustCID != nil {
		return *m.CustCID
	}
	return ""
}

func (m *B2EOutMoneyReq) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

func (m *B2EOutMoneyReq) GetAmount() float64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

// 银行端出金回应 0x11020008
type B2EOutMoneyRsp struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankSID          *string `protobuf:"bytes,2,req,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,3,req,name=BankID" json:"BankID,omitempty"`
	RetCode          *int32  `protobuf:"varint,4,req,name=RetCode" json:"RetCode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *B2EOutMoneyRsp) Reset()                    { *m = B2EOutMoneyRsp{} }
func (m *B2EOutMoneyRsp) String() string            { return proto1.CompactTextString(m) }
func (*B2EOutMoneyRsp) ProtoMessage()               {}
func (*B2EOutMoneyRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{110} }

func (m *B2EOutMoneyRsp) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *B2EOutMoneyRsp) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2EOutMoneyRsp) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *B2EOutMoneyRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

// 银行端查询余额请求 0x11020009
type B2EQueryMoneyReq struct {
	BankSID          *string `protobuf:"bytes,1,req,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,2,req,name=BankID" json:"BankID,omitempty"`
	BankAcct         *string `protobuf:"bytes,3,opt,name=BankAcct" json:"BankAcct,omitempty"`
	ExchAcct         *string `protobuf:"bytes,4,req,name=ExchAcct" json:"ExchAcct,omitempty"`
	ExchPsw          *string `protobuf:"bytes,5,opt,name=ExchPsw" json:"ExchPsw,omitempty"`
	CustCIDType      *int32  `protobuf:"varint,6,opt,name=CustCIDType" json:"CustCIDType,omitempty"`
	CustCID          *string `protobuf:"bytes,7,opt,name=CustCID" json:"CustCID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *B2EQueryMoneyReq) Reset()                    { *m = B2EQueryMoneyReq{} }
func (m *B2EQueryMoneyReq) String() string            { return proto1.CompactTextString(m) }
func (*B2EQueryMoneyReq) ProtoMessage()               {}
func (*B2EQueryMoneyReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{111} }

func (m *B2EQueryMoneyReq) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2EQueryMoneyReq) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *B2EQueryMoneyReq) GetBankAcct() string {
	if m != nil && m.BankAcct != nil {
		return *m.BankAcct
	}
	return ""
}

func (m *B2EQueryMoneyReq) GetExchAcct() string {
	if m != nil && m.ExchAcct != nil {
		return *m.ExchAcct
	}
	return ""
}

func (m *B2EQueryMoneyReq) GetExchPsw() string {
	if m != nil && m.ExchPsw != nil {
		return *m.ExchPsw
	}
	return ""
}

func (m *B2EQueryMoneyReq) GetCustCIDType() int32 {
	if m != nil && m.CustCIDType != nil {
		return *m.CustCIDType
	}
	return 0
}

func (m *B2EQueryMoneyReq) GetCustCID() string {
	if m != nil && m.CustCID != nil {
		return *m.CustCID
	}
	return ""
}

// 银行端查询余额回应 0x1102000A
type B2EQueryMoneyRsp struct {
	ExchSID          *string  `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankSID          *string  `protobuf:"bytes,2,req,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32   `protobuf:"varint,3,req,name=BankID" json:"BankID,omitempty"`
	Currency         *int32   `protobuf:"varint,4,req,name=Currency" json:"Currency,omitempty"`
	Amount           *float64 `protobuf:"fixed64,5,req,name=Amount" json:"Amount,omitempty"`
	AmountAvailable  *float64 `protobuf:"fixed64,6,req,name=AmountAvailable" json:"AmountAvailable,omitempty"`
	AmountFetchable  *float64 `protobuf:"fixed64,7,req,name=AmountFetchable" json:"AmountFetchable,omitempty"`
	RetCode          *int32   `protobuf:"varint,8,req,name=RetCode" json:"RetCode,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *B2EQueryMoneyRsp) Reset()                    { *m = B2EQueryMoneyRsp{} }
func (m *B2EQueryMoneyRsp) String() string            { return proto1.CompactTextString(m) }
func (*B2EQueryMoneyRsp) ProtoMessage()               {}
func (*B2EQueryMoneyRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{112} }

func (m *B2EQueryMoneyRsp) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *B2EQueryMoneyRsp) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2EQueryMoneyRsp) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *B2EQueryMoneyRsp) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

func (m *B2EQueryMoneyRsp) GetAmount() float64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *B2EQueryMoneyRsp) GetAmountAvailable() float64 {
	if m != nil && m.AmountAvailable != nil {
		return *m.AmountAvailable
	}
	return 0
}

func (m *B2EQueryMoneyRsp) GetAmountFetchable() float64 {
	if m != nil && m.AmountFetchable != nil {
		return *m.AmountFetchable
	}
	return 0
}

func (m *B2EQueryMoneyRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

// 银行端冲正请求 0x1102000B
type B2EAdjustMoneyReq struct {
	BankSID          *string  `protobuf:"bytes,1,req,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32   `protobuf:"varint,2,req,name=BankID" json:"BankID,omitempty"`
	BankAcct         *string  `protobuf:"bytes,3,req,name=BankAcct" json:"BankAcct,omitempty"`
	ExchAcct         *string  `protobuf:"bytes,4,req,name=ExchAcct" json:"ExchAcct,omitempty"`
	Type             *int32   `protobuf:"varint,5,opt,name=Type" json:"Type,omitempty"`
	SID              *string  `protobuf:"bytes,6,req,name=SID" json:"SID,omitempty"`
	Amount           *float64 `protobuf:"fixed64,7,opt,name=Amount" json:"Amount,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *B2EAdjustMoneyReq) Reset()                    { *m = B2EAdjustMoneyReq{} }
func (m *B2EAdjustMoneyReq) String() string            { return proto1.CompactTextString(m) }
func (*B2EAdjustMoneyReq) ProtoMessage()               {}
func (*B2EAdjustMoneyReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{113} }

func (m *B2EAdjustMoneyReq) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2EAdjustMoneyReq) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *B2EAdjustMoneyReq) GetBankAcct() string {
	if m != nil && m.BankAcct != nil {
		return *m.BankAcct
	}
	return ""
}

func (m *B2EAdjustMoneyReq) GetExchAcct() string {
	if m != nil && m.ExchAcct != nil {
		return *m.ExchAcct
	}
	return ""
}

func (m *B2EAdjustMoneyReq) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *B2EAdjustMoneyReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *B2EAdjustMoneyReq) GetAmount() float64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

// 银行端冲正回应 0x1102000C
type B2EAdjustMoneyRsp struct {
	ExchSID          *string  `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankSID          *string  `protobuf:"bytes,2,req,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32   `protobuf:"varint,3,req,name=BankID" json:"BankID,omitempty"`
	RetCode          *int32   `protobuf:"varint,4,req,name=RetCode" json:"RetCode,omitempty"`
	Amount           *float64 `protobuf:"fixed64,5,opt,name=Amount" json:"Amount,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *B2EAdjustMoneyRsp) Reset()                    { *m = B2EAdjustMoneyRsp{} }
func (m *B2EAdjustMoneyRsp) String() string            { return proto1.CompactTextString(m) }
func (*B2EAdjustMoneyRsp) ProtoMessage()               {}
func (*B2EAdjustMoneyRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{114} }

func (m *B2EAdjustMoneyRsp) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *B2EAdjustMoneyRsp) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2EAdjustMoneyRsp) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *B2EAdjustMoneyRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *B2EAdjustMoneyRsp) GetAmount() float64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

// 银行端文件通知请求 0x1102000D
type B2EFileNotificationReq struct {
	BankSID          *string `protobuf:"bytes,1,req,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,2,req,name=BankID" json:"BankID,omitempty"`
	Type             *int32  `protobuf:"varint,3,req,name=Type" json:"Type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *B2EFileNotificationReq) Reset()                    { *m = B2EFileNotificationReq{} }
func (m *B2EFileNotificationReq) String() string            { return proto1.CompactTextString(m) }
func (*B2EFileNotificationReq) ProtoMessage()               {}
func (*B2EFileNotificationReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{115} }

func (m *B2EFileNotificationReq) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2EFileNotificationReq) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *B2EFileNotificationReq) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

// 银行端文件通知回应 0x1102000E
type B2EFileNotificationRsp struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankSID          *string `protobuf:"bytes,2,req,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,3,req,name=BankID" json:"BankID,omitempty"`
	RetCode          *int32  `protobuf:"varint,4,req,name=RetCode" json:"RetCode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *B2EFileNotificationRsp) Reset()                    { *m = B2EFileNotificationRsp{} }
func (m *B2EFileNotificationRsp) String() string            { return proto1.CompactTextString(m) }
func (*B2EFileNotificationRsp) ProtoMessage()               {}
func (*B2EFileNotificationRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{116} }

func (m *B2EFileNotificationRsp) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *B2EFileNotificationRsp) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2EFileNotificationRsp) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *B2EFileNotificationRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

// 银行端更新用户资料请求 0x1102000F
type B2EUpdateUserInfoReq struct {
	BankSID          *string `protobuf:"bytes,1,req,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,2,req,name=BankID" json:"BankID,omitempty"`
	OldBankAcct      *string `protobuf:"bytes,3,req,name=OldBankAcct" json:"OldBankAcct,omitempty"`
	NewBankAcct      *string `protobuf:"bytes,4,req,name=NewBankAcct" json:"NewBankAcct,omitempty"`
	ExchAcct         *string `protobuf:"bytes,5,req,name=ExchAcct" json:"ExchAcct,omitempty"`
	ExchPsw          *string `protobuf:"bytes,6,opt,name=ExchPsw" json:"ExchPsw,omitempty"`
	CustName         *string `protobuf:"bytes,7,req,name=CustName" json:"CustName,omitempty"`
	CustCIDType      *int32  `protobuf:"varint,8,req,name=CustCIDType" json:"CustCIDType,omitempty"`
	CustCID          *string `protobuf:"bytes,9,req,name=CustCID" json:"CustCID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *B2EUpdateUserInfoReq) Reset()                    { *m = B2EUpdateUserInfoReq{} }
func (m *B2EUpdateUserInfoReq) String() string            { return proto1.CompactTextString(m) }
func (*B2EUpdateUserInfoReq) ProtoMessage()               {}
func (*B2EUpdateUserInfoReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{117} }

func (m *B2EUpdateUserInfoReq) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2EUpdateUserInfoReq) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *B2EUpdateUserInfoReq) GetOldBankAcct() string {
	if m != nil && m.OldBankAcct != nil {
		return *m.OldBankAcct
	}
	return ""
}

func (m *B2EUpdateUserInfoReq) GetNewBankAcct() string {
	if m != nil && m.NewBankAcct != nil {
		return *m.NewBankAcct
	}
	return ""
}

func (m *B2EUpdateUserInfoReq) GetExchAcct() string {
	if m != nil && m.ExchAcct != nil {
		return *m.ExchAcct
	}
	return ""
}

func (m *B2EUpdateUserInfoReq) GetExchPsw() string {
	if m != nil && m.ExchPsw != nil {
		return *m.ExchPsw
	}
	return ""
}

func (m *B2EUpdateUserInfoReq) GetCustName() string {
	if m != nil && m.CustName != nil {
		return *m.CustName
	}
	return ""
}

func (m *B2EUpdateUserInfoReq) GetCustCIDType() int32 {
	if m != nil && m.CustCIDType != nil {
		return *m.CustCIDType
	}
	return 0
}

func (m *B2EUpdateUserInfoReq) GetCustCID() string {
	if m != nil && m.CustCID != nil {
		return *m.CustCID
	}
	return ""
}

// 银行端更新用户资料回应 0x11020010
type B2EUpdateUserInfoRsp struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankSID          *string `protobuf:"bytes,2,req,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,3,req,name=BankID" json:"BankID,omitempty"`
	RetCode          *int32  `protobuf:"varint,4,req,name=RetCode" json:"RetCode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *B2EUpdateUserInfoRsp) Reset()                    { *m = B2EUpdateUserInfoRsp{} }
func (m *B2EUpdateUserInfoRsp) String() string            { return proto1.CompactTextString(m) }
func (*B2EUpdateUserInfoRsp) ProtoMessage()               {}
func (*B2EUpdateUserInfoRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{118} }

func (m *B2EUpdateUserInfoRsp) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *B2EUpdateUserInfoRsp) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2EUpdateUserInfoRsp) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *B2EUpdateUserInfoRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

// 银行端查询资金密码请求 0x11020011
type B2EQueryserPasswordReq struct {
	BankSID          *string `protobuf:"bytes,1,req,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,2,req,name=BankID" json:"BankID,omitempty"`
	BankAcct         *string `protobuf:"bytes,3,req,name=BankAcct" json:"BankAcct,omitempty"`
	ExchAcct         *string `protobuf:"bytes,4,req,name=ExchAcct" json:"ExchAcct,omitempty"`
	CustCIDType      *int32  `protobuf:"varint,5,opt,name=CustCIDType" json:"CustCIDType,omitempty"`
	CustCID          *string `protobuf:"bytes,6,opt,name=CustCID" json:"CustCID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *B2EQueryserPasswordReq) Reset()                    { *m = B2EQueryserPasswordReq{} }
func (m *B2EQueryserPasswordReq) String() string            { return proto1.CompactTextString(m) }
func (*B2EQueryserPasswordReq) ProtoMessage()               {}
func (*B2EQueryserPasswordReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{119} }

func (m *B2EQueryserPasswordReq) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2EQueryserPasswordReq) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *B2EQueryserPasswordReq) GetBankAcct() string {
	if m != nil && m.BankAcct != nil {
		return *m.BankAcct
	}
	return ""
}

func (m *B2EQueryserPasswordReq) GetExchAcct() string {
	if m != nil && m.ExchAcct != nil {
		return *m.ExchAcct
	}
	return ""
}

func (m *B2EQueryserPasswordReq) GetCustCIDType() int32 {
	if m != nil && m.CustCIDType != nil {
		return *m.CustCIDType
	}
	return 0
}

func (m *B2EQueryserPasswordReq) GetCustCID() string {
	if m != nil && m.CustCID != nil {
		return *m.CustCID
	}
	return ""
}

// 银行端查询资金密码回应 0x11020012
type B2EQueryserPasswordRsp struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankSID          *string `protobuf:"bytes,2,req,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,3,req,name=BankID" json:"BankID,omitempty"`
	FundPsw          *string `protobuf:"bytes,4,req,name=FundPsw" json:"FundPsw,omitempty"`
	RetCode          *int32  `protobuf:"varint,5,req,name=RetCode" json:"RetCode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *B2EQueryserPasswordRsp) Reset()                    { *m = B2EQueryserPasswordRsp{} }
func (m *B2EQueryserPasswordRsp) String() string            { return proto1.CompactTextString(m) }
func (*B2EQueryserPasswordRsp) ProtoMessage()               {}
func (*B2EQueryserPasswordRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{120} }

func (m *B2EQueryserPasswordRsp) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *B2EQueryserPasswordRsp) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2EQueryserPasswordRsp) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *B2EQueryserPasswordRsp) GetFundPsw() string {
	if m != nil && m.FundPsw != nil {
		return *m.FundPsw
	}
	return ""
}

func (m *B2EQueryserPasswordRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

// 银行端对账文件获取结果请求 0x1102001D
type B2ECheckFileNotificationReq struct {
	BankSID                    *string `protobuf:"bytes,1,req,name=BankSID" json:"BankSID,omitempty"`
	BankID                     *int32  `protobuf:"varint,2,req,name=BankID" json:"BankID,omitempty"`
	CheckFileName              *string `protobuf:"bytes,3,req,name=CheckFileName" json:"CheckFileName,omitempty"`
	CheckFileCount             *int32  `protobuf:"varint,4,req,name=CheckFileCount" json:"CheckFileCount,omitempty"`
	CheckFileNameMD5           *string `protobuf:"bytes,5,req,name=CheckFileNameMD5" json:"CheckFileNameMD5,omitempty"`
	CheckCustStatusFileName    *string `protobuf:"bytes,6,opt,name=CheckCustStatusFileName" json:"CheckCustStatusFileName,omitempty"`
	CheckCustStatusFileCount   *int32  `protobuf:"varint,7,opt,name=CheckCustStatusFileCount" json:"CheckCustStatusFileCount,omitempty"`
	CheckCustStatusFileNameMD5 *string `protobuf:"bytes,8,opt,name=CheckCustStatusFileNameMD5" json:"CheckCustStatusFileNameMD5,omitempty"`
	XXX_unrecognized           []byte  `json:"-"`
}

func (m *B2ECheckFileNotificationReq) Reset()                    { *m = B2ECheckFileNotificationReq{} }
func (m *B2ECheckFileNotificationReq) String() string            { return proto1.CompactTextString(m) }
func (*B2ECheckFileNotificationReq) ProtoMessage()               {}
func (*B2ECheckFileNotificationReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{121} }

func (m *B2ECheckFileNotificationReq) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2ECheckFileNotificationReq) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *B2ECheckFileNotificationReq) GetCheckFileName() string {
	if m != nil && m.CheckFileName != nil {
		return *m.CheckFileName
	}
	return ""
}

func (m *B2ECheckFileNotificationReq) GetCheckFileCount() int32 {
	if m != nil && m.CheckFileCount != nil {
		return *m.CheckFileCount
	}
	return 0
}

func (m *B2ECheckFileNotificationReq) GetCheckFileNameMD5() string {
	if m != nil && m.CheckFileNameMD5 != nil {
		return *m.CheckFileNameMD5
	}
	return ""
}

func (m *B2ECheckFileNotificationReq) GetCheckCustStatusFileName() string {
	if m != nil && m.CheckCustStatusFileName != nil {
		return *m.CheckCustStatusFileName
	}
	return ""
}

func (m *B2ECheckFileNotificationReq) GetCheckCustStatusFileCount() int32 {
	if m != nil && m.CheckCustStatusFileCount != nil {
		return *m.CheckCustStatusFileCount
	}
	return 0
}

func (m *B2ECheckFileNotificationReq) GetCheckCustStatusFileNameMD5() string {
	if m != nil && m.CheckCustStatusFileNameMD5 != nil {
		return *m.CheckCustStatusFileNameMD5
	}
	return ""
}

// 银行端对账文件获取结果应答 0x1102001E
type B2ECheckFileNotificationRsp struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankSID          *string `protobuf:"bytes,2,req,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,3,req,name=BankID" json:"BankID,omitempty"`
	RetCode          *int32  `protobuf:"varint,4,req,name=RetCode" json:"RetCode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *B2ECheckFileNotificationRsp) Reset()                    { *m = B2ECheckFileNotificationRsp{} }
func (m *B2ECheckFileNotificationRsp) String() string            { return proto1.CompactTextString(m) }
func (*B2ECheckFileNotificationRsp) ProtoMessage()               {}
func (*B2ECheckFileNotificationRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{122} }

func (m *B2ECheckFileNotificationRsp) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *B2ECheckFileNotificationRsp) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2ECheckFileNotificationRsp) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *B2ECheckFileNotificationRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

// 银行端清算结果文件获取结果请求  0x1102001F
type B2EClearingFileNotificationReq struct {
	BankSID          *string                                          `protobuf:"bytes,1,req,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32                                           `protobuf:"varint,2,req,name=BankID" json:"BankID,omitempty"`
	TradeDate        *string                                          `protobuf:"bytes,3,req,name=TradeDate" json:"TradeDate,omitempty"`
	RetCode          *int32                                           `protobuf:"varint,4,req,name=RetCode" json:"RetCode,omitempty"`
	RecordCount      *int32                                           `protobuf:"varint,5,req,name=RecordCount,def=0" json:"RecordCount,omitempty"`
	ResultFileCount  *int32                                           `protobuf:"varint,6,req,name=ResultFileCount" json:"ResultFileCount,omitempty"`
	ResultInfo       []*B2EClearingFileNotificationReq_ResultFileInfo `protobuf:"bytes,7,rep,name=ResultInfo" json:"ResultInfo,omitempty"`
	XXX_unrecognized []byte                                           `json:"-"`
}

func (m *B2EClearingFileNotificationReq) Reset()         { *m = B2EClearingFileNotificationReq{} }
func (m *B2EClearingFileNotificationReq) String() string { return proto1.CompactTextString(m) }
func (*B2EClearingFileNotificationReq) ProtoMessage()    {}
func (*B2EClearingFileNotificationReq) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{123}
}

const Default_B2EClearingFileNotificationReq_RecordCount int32 = 0

func (m *B2EClearingFileNotificationReq) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2EClearingFileNotificationReq) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *B2EClearingFileNotificationReq) GetTradeDate() string {
	if m != nil && m.TradeDate != nil {
		return *m.TradeDate
	}
	return ""
}

func (m *B2EClearingFileNotificationReq) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *B2EClearingFileNotificationReq) GetRecordCount() int32 {
	if m != nil && m.RecordCount != nil {
		return *m.RecordCount
	}
	return Default_B2EClearingFileNotificationReq_RecordCount
}

func (m *B2EClearingFileNotificationReq) GetResultFileCount() int32 {
	if m != nil && m.ResultFileCount != nil {
		return *m.ResultFileCount
	}
	return 0
}

func (m *B2EClearingFileNotificationReq) GetResultInfo() []*B2EClearingFileNotificationReq_ResultFileInfo {
	if m != nil {
		return m.ResultInfo
	}
	return nil
}

type B2EClearingFileNotificationReq_ResultFileInfo struct {
	ResultFileName    *string `protobuf:"bytes,1,req,name=ResultFileName" json:"ResultFileName,omitempty"`
	ResultFileNameMD5 *string `protobuf:"bytes,2,req,name=ResultFileNameMD5" json:"ResultFileNameMD5,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *B2EClearingFileNotificationReq_ResultFileInfo) Reset() {
	*m = B2EClearingFileNotificationReq_ResultFileInfo{}
}
func (m *B2EClearingFileNotificationReq_ResultFileInfo) String() string {
	return proto1.CompactTextString(m)
}
func (*B2EClearingFileNotificationReq_ResultFileInfo) ProtoMessage() {}
func (*B2EClearingFileNotificationReq_ResultFileInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{123, 0}
}

func (m *B2EClearingFileNotificationReq_ResultFileInfo) GetResultFileName() string {
	if m != nil && m.ResultFileName != nil {
		return *m.ResultFileName
	}
	return ""
}

func (m *B2EClearingFileNotificationReq_ResultFileInfo) GetResultFileNameMD5() string {
	if m != nil && m.ResultFileNameMD5 != nil {
		return *m.ResultFileNameMD5
	}
	return ""
}

// 银行端对清算结果文件获取结果应答  0x11020020
type B2EClearingFileNotificationRsp struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankSID          *string `protobuf:"bytes,2,req,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,3,req,name=BankID" json:"BankID,omitempty"`
	RetCode          *int32  `protobuf:"varint,4,req,name=RetCode" json:"RetCode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *B2EClearingFileNotificationRsp) Reset()         { *m = B2EClearingFileNotificationRsp{} }
func (m *B2EClearingFileNotificationRsp) String() string { return proto1.CompactTextString(m) }
func (*B2EClearingFileNotificationRsp) ProtoMessage()    {}
func (*B2EClearingFileNotificationRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{124}
}

func (m *B2EClearingFileNotificationRsp) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *B2EClearingFileNotificationRsp) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2EClearingFileNotificationRsp) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *B2EClearingFileNotificationRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

// 银行签约信息维护请求 0x11020021
type B2ESingInfoReq struct {
	BankSID          *string `protobuf:"bytes,1,req,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,2,req,name=BankID" json:"BankID,omitempty"`
	ExchAcct         *string `protobuf:"bytes,3,req,name=ExchAcct" json:"ExchAcct,omitempty"`
	CustCIDType      *int32  `protobuf:"varint,4,req,name=CustCIDType" json:"CustCIDType,omitempty"`
	CustCID          *string `protobuf:"bytes,5,req,name=CustCID" json:"CustCID,omitempty"`
	CustName         *string `protobuf:"bytes,6,opt,name=CustName" json:"CustName,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *B2ESingInfoReq) Reset()                    { *m = B2ESingInfoReq{} }
func (m *B2ESingInfoReq) String() string            { return proto1.CompactTextString(m) }
func (*B2ESingInfoReq) ProtoMessage()               {}
func (*B2ESingInfoReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{125} }

func (m *B2ESingInfoReq) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2ESingInfoReq) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *B2ESingInfoReq) GetExchAcct() string {
	if m != nil && m.ExchAcct != nil {
		return *m.ExchAcct
	}
	return ""
}

func (m *B2ESingInfoReq) GetCustCIDType() int32 {
	if m != nil && m.CustCIDType != nil {
		return *m.CustCIDType
	}
	return 0
}

func (m *B2ESingInfoReq) GetCustCID() string {
	if m != nil && m.CustCID != nil {
		return *m.CustCID
	}
	return ""
}

func (m *B2ESingInfoReq) GetCustName() string {
	if m != nil && m.CustName != nil {
		return *m.CustName
	}
	return ""
}

// 银行签约信息维护应答 0x11020022
type B2ESingInfoRsp struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankSID          *string `protobuf:"bytes,2,req,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,3,req,name=BankID" json:"BankID,omitempty"`
	RetCode          *int32  `protobuf:"varint,4,req,name=RetCode" json:"RetCode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *B2ESingInfoRsp) Reset()                    { *m = B2ESingInfoRsp{} }
func (m *B2ESingInfoRsp) String() string            { return proto1.CompactTextString(m) }
func (*B2ESingInfoRsp) ProtoMessage()               {}
func (*B2ESingInfoRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{126} }

func (m *B2ESingInfoRsp) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *B2ESingInfoRsp) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2ESingInfoRsp) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *B2ESingInfoRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

// 银行端出入金推送  -- 0x11020025
type B2EInOutNotifyReq struct {
	BankSID          *string  `protobuf:"bytes,1,req,name=BankSID" json:"BankSID,omitempty"`
	ExchSID          *string  `protobuf:"bytes,2,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankId           *int32   `protobuf:"varint,3,req,name=BankId" json:"BankId,omitempty"`
	TransType        *int32   `protobuf:"varint,4,opt,name=TransType" json:"TransType,omitempty"`
	Currency         *int32   `protobuf:"varint,5,req,name=Currency" json:"Currency,omitempty"`
	Amount           *float64 `protobuf:"fixed64,6,req,name=Amount" json:"Amount,omitempty"`
	Status           *int32   `protobuf:"varint,7,req,name=Status" json:"Status,omitempty"`
	RetMsg           *string  `protobuf:"bytes,8,opt,name=RetMsg" json:"RetMsg,omitempty"`
	BankAcct         *string  `protobuf:"bytes,9,opt,name=BankAcct" json:"BankAcct,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *B2EInOutNotifyReq) Reset()                    { *m = B2EInOutNotifyReq{} }
func (m *B2EInOutNotifyReq) String() string            { return proto1.CompactTextString(m) }
func (*B2EInOutNotifyReq) ProtoMessage()               {}
func (*B2EInOutNotifyReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{127} }

func (m *B2EInOutNotifyReq) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2EInOutNotifyReq) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *B2EInOutNotifyReq) GetBankId() int32 {
	if m != nil && m.BankId != nil {
		return *m.BankId
	}
	return 0
}

func (m *B2EInOutNotifyReq) GetTransType() int32 {
	if m != nil && m.TransType != nil {
		return *m.TransType
	}
	return 0
}

func (m *B2EInOutNotifyReq) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

func (m *B2EInOutNotifyReq) GetAmount() float64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *B2EInOutNotifyReq) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *B2EInOutNotifyReq) GetRetMsg() string {
	if m != nil && m.RetMsg != nil {
		return *m.RetMsg
	}
	return ""
}

func (m *B2EInOutNotifyReq) GetBankAcct() string {
	if m != nil && m.BankAcct != nil {
		return *m.BankAcct
	}
	return ""
}

// 银行端出入金推送  -- 0x11020026
type B2EInOutNotifyRsp struct {
	BankSID          *string `protobuf:"bytes,1,req,name=BankSID" json:"BankSID,omitempty"`
	ExchSID          *string `protobuf:"bytes,2,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankId           *int32  `protobuf:"varint,3,req,name=BankId" json:"BankId,omitempty"`
	RetCode          *int32  `protobuf:"varint,4,req,name=RetCode" json:"RetCode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *B2EInOutNotifyRsp) Reset()                    { *m = B2EInOutNotifyRsp{} }
func (m *B2EInOutNotifyRsp) String() string            { return proto1.CompactTextString(m) }
func (*B2EInOutNotifyRsp) ProtoMessage()               {}
func (*B2EInOutNotifyRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{128} }

func (m *B2EInOutNotifyRsp) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2EInOutNotifyRsp) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *B2EInOutNotifyRsp) GetBankId() int32 {
	if m != nil && m.BankId != nil {
		return *m.BankId
	}
	return 0
}

func (m *B2EInOutNotifyRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

// ////////////////////////////////////////////////////////////////////
// 建设银行特殊流程
// ///////////////////////////////////////////////////////////////////
// 银行端出金申请请求 0x11020013
type B2EOutMoneyAppReq struct {
	BankSID          *string  `protobuf:"bytes,1,req,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32   `protobuf:"varint,2,req,name=BankID" json:"BankID,omitempty"`
	BankAcct         *string  `protobuf:"bytes,3,req,name=BankAcct" json:"BankAcct,omitempty"`
	ExchAcct         *string  `protobuf:"bytes,4,req,name=ExchAcct" json:"ExchAcct,omitempty"`
	Currency         *int32   `protobuf:"varint,5,req,name=Currency" json:"Currency,omitempty"`
	Amount           *float64 `protobuf:"fixed64,6,req,name=Amount" json:"Amount,omitempty"`
	AppSID           *string  `protobuf:"bytes,7,req,name=AppSID" json:"AppSID,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *B2EOutMoneyAppReq) Reset()                    { *m = B2EOutMoneyAppReq{} }
func (m *B2EOutMoneyAppReq) String() string            { return proto1.CompactTextString(m) }
func (*B2EOutMoneyAppReq) ProtoMessage()               {}
func (*B2EOutMoneyAppReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{129} }

func (m *B2EOutMoneyAppReq) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2EOutMoneyAppReq) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *B2EOutMoneyAppReq) GetBankAcct() string {
	if m != nil && m.BankAcct != nil {
		return *m.BankAcct
	}
	return ""
}

func (m *B2EOutMoneyAppReq) GetExchAcct() string {
	if m != nil && m.ExchAcct != nil {
		return *m.ExchAcct
	}
	return ""
}

func (m *B2EOutMoneyAppReq) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

func (m *B2EOutMoneyAppReq) GetAmount() float64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *B2EOutMoneyAppReq) GetAppSID() string {
	if m != nil && m.AppSID != nil {
		return *m.AppSID
	}
	return ""
}

// 银行端出金申请回应 0x11020014
type B2EOutMoneyAppRsp struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankSID          *string `protobuf:"bytes,2,req,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,3,req,name=BankID" json:"BankID,omitempty"`
	RetCode          *int32  `protobuf:"varint,4,req,name=RetCode" json:"RetCode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *B2EOutMoneyAppRsp) Reset()                    { *m = B2EOutMoneyAppRsp{} }
func (m *B2EOutMoneyAppRsp) String() string            { return proto1.CompactTextString(m) }
func (*B2EOutMoneyAppRsp) ProtoMessage()               {}
func (*B2EOutMoneyAppRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{130} }

func (m *B2EOutMoneyAppRsp) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *B2EOutMoneyAppRsp) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2EOutMoneyAppRsp) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *B2EOutMoneyAppRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

// 交易端出金审批申请结果请求 0x11010015
type E2BOutMoneyAppResultReq struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankID           *int32  `protobuf:"varint,2,req,name=BankID" json:"BankID,omitempty"`
	AppSID           *string `protobuf:"bytes,3,req,name=AppSID" json:"AppSID,omitempty"`
	AuditResult      *int32  `protobuf:"varint,4,req,name=AuditResult" json:"AuditResult,omitempty"`
	Remark           *string `protobuf:"bytes,5,opt,name=Remark" json:"Remark,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2BOutMoneyAppResultReq) Reset()                    { *m = E2BOutMoneyAppResultReq{} }
func (m *E2BOutMoneyAppResultReq) String() string            { return proto1.CompactTextString(m) }
func (*E2BOutMoneyAppResultReq) ProtoMessage()               {}
func (*E2BOutMoneyAppResultReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{131} }

func (m *E2BOutMoneyAppResultReq) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *E2BOutMoneyAppResultReq) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *E2BOutMoneyAppResultReq) GetAppSID() string {
	if m != nil && m.AppSID != nil {
		return *m.AppSID
	}
	return ""
}

func (m *E2BOutMoneyAppResultReq) GetAuditResult() int32 {
	if m != nil && m.AuditResult != nil {
		return *m.AuditResult
	}
	return 0
}

func (m *E2BOutMoneyAppResultReq) GetRemark() string {
	if m != nil && m.Remark != nil {
		return *m.Remark
	}
	return ""
}

// 交易端出金审批申请结果回应 0x11010016
type E2BOutMoneyAppResultRsp struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankSID          *string `protobuf:"bytes,2,opt,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,3,req,name=BankID" json:"BankID,omitempty"`
	AppSID           *string `protobuf:"bytes,4,req,name=AppSID" json:"AppSID,omitempty"`
	TxSid            *string `protobuf:"bytes,5,req,name=TxSid" json:"TxSid,omitempty"`
	RetCode          *int32  `protobuf:"varint,6,req,name=RetCode" json:"RetCode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *E2BOutMoneyAppResultRsp) Reset()                    { *m = E2BOutMoneyAppResultRsp{} }
func (m *E2BOutMoneyAppResultRsp) String() string            { return proto1.CompactTextString(m) }
func (*E2BOutMoneyAppResultRsp) ProtoMessage()               {}
func (*E2BOutMoneyAppResultRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{132} }

func (m *E2BOutMoneyAppResultRsp) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *E2BOutMoneyAppResultRsp) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *E2BOutMoneyAppResultRsp) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *E2BOutMoneyAppResultRsp) GetAppSID() string {
	if m != nil && m.AppSID != nil {
		return *m.AppSID
	}
	return ""
}

func (m *E2BOutMoneyAppResultRsp) GetTxSid() string {
	if m != nil && m.TxSid != nil {
		return *m.TxSid
	}
	return ""
}

func (m *E2BOutMoneyAppResultRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

// 银行端出金流水查询请求 0x11020015
type B2EQueryOutMoneySIDReq struct {
	BankSID          *string `protobuf:"bytes,1,req,name=BankSID" json:"BankSID,omitempty"`
	BankId           *int32  `protobuf:"varint,2,req,name=BankId" json:"BankId,omitempty"`
	ExchAcct         *string `protobuf:"bytes,3,req,name=ExchAcct" json:"ExchAcct,omitempty"`
	BeginTime        *int64  `protobuf:"varint,4,opt,name=BeginTime" json:"BeginTime,omitempty"`
	EndTime          *int64  `protobuf:"varint,5,opt,name=EndTime" json:"EndTime,omitempty"`
	AppSID           *string `protobuf:"bytes,6,opt,name=AppSID" json:"AppSID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *B2EQueryOutMoneySIDReq) Reset()                    { *m = B2EQueryOutMoneySIDReq{} }
func (m *B2EQueryOutMoneySIDReq) String() string            { return proto1.CompactTextString(m) }
func (*B2EQueryOutMoneySIDReq) ProtoMessage()               {}
func (*B2EQueryOutMoneySIDReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{133} }

func (m *B2EQueryOutMoneySIDReq) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2EQueryOutMoneySIDReq) GetBankId() int32 {
	if m != nil && m.BankId != nil {
		return *m.BankId
	}
	return 0
}

func (m *B2EQueryOutMoneySIDReq) GetExchAcct() string {
	if m != nil && m.ExchAcct != nil {
		return *m.ExchAcct
	}
	return ""
}

func (m *B2EQueryOutMoneySIDReq) GetBeginTime() int64 {
	if m != nil && m.BeginTime != nil {
		return *m.BeginTime
	}
	return 0
}

func (m *B2EQueryOutMoneySIDReq) GetEndTime() int64 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *B2EQueryOutMoneySIDReq) GetAppSID() string {
	if m != nil && m.AppSID != nil {
		return *m.AppSID
	}
	return ""
}

// 银行端出金流水查询项
type B2EQueryOutMoneySIDItem struct {
	BankSID          *string  `protobuf:"bytes,1,req,name=BankSID" json:"BankSID,omitempty"`
	TxTime           *int64   `protobuf:"varint,2,req,name=TxTime" json:"TxTime,omitempty"`
	BankAcct         *string  `protobuf:"bytes,4,req,name=BankAcct" json:"BankAcct,omitempty"`
	ExchAcct         *string  `protobuf:"bytes,5,req,name=ExchAcct" json:"ExchAcct,omitempty"`
	Currency         *int32   `protobuf:"varint,6,req,name=Currency" json:"Currency,omitempty"`
	Amount           *float64 `protobuf:"fixed64,7,req,name=Amount" json:"Amount,omitempty"`
	Status           *int32   `protobuf:"varint,8,req,name=Status" json:"Status,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *B2EQueryOutMoneySIDItem) Reset()                    { *m = B2EQueryOutMoneySIDItem{} }
func (m *B2EQueryOutMoneySIDItem) String() string            { return proto1.CompactTextString(m) }
func (*B2EQueryOutMoneySIDItem) ProtoMessage()               {}
func (*B2EQueryOutMoneySIDItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{134} }

func (m *B2EQueryOutMoneySIDItem) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2EQueryOutMoneySIDItem) GetTxTime() int64 {
	if m != nil && m.TxTime != nil {
		return *m.TxTime
	}
	return 0
}

func (m *B2EQueryOutMoneySIDItem) GetBankAcct() string {
	if m != nil && m.BankAcct != nil {
		return *m.BankAcct
	}
	return ""
}

func (m *B2EQueryOutMoneySIDItem) GetExchAcct() string {
	if m != nil && m.ExchAcct != nil {
		return *m.ExchAcct
	}
	return ""
}

func (m *B2EQueryOutMoneySIDItem) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

func (m *B2EQueryOutMoneySIDItem) GetAmount() float64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *B2EQueryOutMoneySIDItem) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

// 银行端出金流水查询回应 0x11020016
type B2EQueryOutMoneySIDRsp struct {
	ExchSID          *string                    `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankSID          *string                    `protobuf:"bytes,2,req,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32                     `protobuf:"varint,3,req,name=BankID" json:"BankID,omitempty"`
	RetCode          *int32                     `protobuf:"varint,4,req,name=RetCode" json:"RetCode,omitempty"`
	InfoItem         []*B2EQueryOutMoneySIDItem `protobuf:"bytes,5,rep,name=InfoItem" json:"InfoItem,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *B2EQueryOutMoneySIDRsp) Reset()                    { *m = B2EQueryOutMoneySIDRsp{} }
func (m *B2EQueryOutMoneySIDRsp) String() string            { return proto1.CompactTextString(m) }
func (*B2EQueryOutMoneySIDRsp) ProtoMessage()               {}
func (*B2EQueryOutMoneySIDRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{135} }

func (m *B2EQueryOutMoneySIDRsp) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *B2EQueryOutMoneySIDRsp) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2EQueryOutMoneySIDRsp) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *B2EQueryOutMoneySIDRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *B2EQueryOutMoneySIDRsp) GetInfoItem() []*B2EQueryOutMoneySIDItem {
	if m != nil {
		return m.InfoItem
	}
	return nil
}

// 银行端签约信息查询请求 0x1102001B
type B2EQueryUserSignInfoReq struct {
	BankSID          *string `protobuf:"bytes,1,req,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,2,req,name=BankID" json:"BankID,omitempty"`
	FunCode          *int32  `protobuf:"varint,3,req,name=FunCode" json:"FunCode,omitempty"`
	ExchAcct         *string `protobuf:"bytes,4,opt,name=ExchAcct" json:"ExchAcct,omitempty"`
	CustCIDType      *int32  `protobuf:"varint,5,opt,name=CustCIDType" json:"CustCIDType,omitempty"`
	CustCID          *string `protobuf:"bytes,6,opt,name=CustCID" json:"CustCID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *B2EQueryUserSignInfoReq) Reset()                    { *m = B2EQueryUserSignInfoReq{} }
func (m *B2EQueryUserSignInfoReq) String() string            { return proto1.CompactTextString(m) }
func (*B2EQueryUserSignInfoReq) ProtoMessage()               {}
func (*B2EQueryUserSignInfoReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{136} }

func (m *B2EQueryUserSignInfoReq) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2EQueryUserSignInfoReq) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *B2EQueryUserSignInfoReq) GetFunCode() int32 {
	if m != nil && m.FunCode != nil {
		return *m.FunCode
	}
	return 0
}

func (m *B2EQueryUserSignInfoReq) GetExchAcct() string {
	if m != nil && m.ExchAcct != nil {
		return *m.ExchAcct
	}
	return ""
}

func (m *B2EQueryUserSignInfoReq) GetCustCIDType() int32 {
	if m != nil && m.CustCIDType != nil {
		return *m.CustCIDType
	}
	return 0
}

func (m *B2EQueryUserSignInfoReq) GetCustCID() string {
	if m != nil && m.CustCID != nil {
		return *m.CustCID
	}
	return ""
}

// 银行端签约信息查询回应 0x1102001C
type B2EQueryUserSignInfoRsp struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankSID          *string `protobuf:"bytes,2,req,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,3,req,name=BankID" json:"BankID,omitempty"`
	RetCode          *int32  `protobuf:"varint,4,req,name=RetCode" json:"RetCode,omitempty"`
	CustCIDType      *int32  `protobuf:"varint,5,opt,name=CustCIDType" json:"CustCIDType,omitempty"`
	CustCID          *string `protobuf:"bytes,6,opt,name=CustCID" json:"CustCID,omitempty"`
	CustName         *string `protobuf:"bytes,7,opt,name=CustName" json:"CustName,omitempty"`
	BankAcct         *string `protobuf:"bytes,8,opt,name=BankAcct" json:"BankAcct,omitempty"`
	ExchAcct         *string `protobuf:"bytes,9,opt,name=ExchAcct" json:"ExchAcct,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *B2EQueryUserSignInfoRsp) Reset()                    { *m = B2EQueryUserSignInfoRsp{} }
func (m *B2EQueryUserSignInfoRsp) String() string            { return proto1.CompactTextString(m) }
func (*B2EQueryUserSignInfoRsp) ProtoMessage()               {}
func (*B2EQueryUserSignInfoRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{137} }

func (m *B2EQueryUserSignInfoRsp) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *B2EQueryUserSignInfoRsp) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2EQueryUserSignInfoRsp) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *B2EQueryUserSignInfoRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *B2EQueryUserSignInfoRsp) GetCustCIDType() int32 {
	if m != nil && m.CustCIDType != nil {
		return *m.CustCIDType
	}
	return 0
}

func (m *B2EQueryUserSignInfoRsp) GetCustCID() string {
	if m != nil && m.CustCID != nil {
		return *m.CustCID
	}
	return ""
}

func (m *B2EQueryUserSignInfoRsp) GetCustName() string {
	if m != nil && m.CustName != nil {
		return *m.CustName
	}
	return ""
}

func (m *B2EQueryUserSignInfoRsp) GetBankAcct() string {
	if m != nil && m.BankAcct != nil {
		return *m.BankAcct
	}
	return ""
}

func (m *B2EQueryUserSignInfoRsp) GetExchAcct() string {
	if m != nil && m.ExchAcct != nil {
		return *m.ExchAcct
	}
	return ""
}

// 银行端会员信息推送项
type B2EPushUserInfoItem struct {
	TxType           *int32  `protobuf:"varint,1,req,name=TxType" json:"TxType,omitempty"`
	CustCIDType      *int32  `protobuf:"varint,2,req,name=CustCIDType" json:"CustCIDType,omitempty"`
	CustCID          *string `protobuf:"bytes,3,req,name=CustCID" json:"CustCID,omitempty"`
	ExchAcct         *string `protobuf:"bytes,4,opt,name=ExchAcct" json:"ExchAcct,omitempty"`
	BankAcct         *string `protobuf:"bytes,5,req,name=BankAcct" json:"BankAcct,omitempty"`
	CustName         *string `protobuf:"bytes,6,opt,name=CustName" json:"CustName,omitempty"`
	CustPhone        *string `protobuf:"bytes,7,opt,name=CustPhone" json:"CustPhone,omitempty"`
	CustAddr         *string `protobuf:"bytes,8,opt,name=CustAddr" json:"CustAddr,omitempty"`
	Status           *int32  `protobuf:"varint,9,req,name=Status" json:"Status,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *B2EPushUserInfoItem) Reset()                    { *m = B2EPushUserInfoItem{} }
func (m *B2EPushUserInfoItem) String() string            { return proto1.CompactTextString(m) }
func (*B2EPushUserInfoItem) ProtoMessage()               {}
func (*B2EPushUserInfoItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{138} }

func (m *B2EPushUserInfoItem) GetTxType() int32 {
	if m != nil && m.TxType != nil {
		return *m.TxType
	}
	return 0
}

func (m *B2EPushUserInfoItem) GetCustCIDType() int32 {
	if m != nil && m.CustCIDType != nil {
		return *m.CustCIDType
	}
	return 0
}

func (m *B2EPushUserInfoItem) GetCustCID() string {
	if m != nil && m.CustCID != nil {
		return *m.CustCID
	}
	return ""
}

func (m *B2EPushUserInfoItem) GetExchAcct() string {
	if m != nil && m.ExchAcct != nil {
		return *m.ExchAcct
	}
	return ""
}

func (m *B2EPushUserInfoItem) GetBankAcct() string {
	if m != nil && m.BankAcct != nil {
		return *m.BankAcct
	}
	return ""
}

func (m *B2EPushUserInfoItem) GetCustName() string {
	if m != nil && m.CustName != nil {
		return *m.CustName
	}
	return ""
}

func (m *B2EPushUserInfoItem) GetCustPhone() string {
	if m != nil && m.CustPhone != nil {
		return *m.CustPhone
	}
	return ""
}

func (m *B2EPushUserInfoItem) GetCustAddr() string {
	if m != nil && m.CustAddr != nil {
		return *m.CustAddr
	}
	return ""
}

func (m *B2EPushUserInfoItem) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

// 银行端会员信息推送请求 0x11020017
type B2EPushUserInfoReq struct {
	BankSID          *string                `protobuf:"bytes,1,req,name=BankSID" json:"BankSID,omitempty"`
	BankId           *int32                 `protobuf:"varint,2,req,name=BankId" json:"BankId,omitempty"`
	InfoItem         []*B2EPushUserInfoItem `protobuf:"bytes,3,rep,name=InfoItem" json:"InfoItem,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *B2EPushUserInfoReq) Reset()                    { *m = B2EPushUserInfoReq{} }
func (m *B2EPushUserInfoReq) String() string            { return proto1.CompactTextString(m) }
func (*B2EPushUserInfoReq) ProtoMessage()               {}
func (*B2EPushUserInfoReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{139} }

func (m *B2EPushUserInfoReq) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2EPushUserInfoReq) GetBankId() int32 {
	if m != nil && m.BankId != nil {
		return *m.BankId
	}
	return 0
}

func (m *B2EPushUserInfoReq) GetInfoItem() []*B2EPushUserInfoItem {
	if m != nil {
		return m.InfoItem
	}
	return nil
}

// 银行端会员信息推送回应 0x11020018
type B2EPushUserInfoRsp struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankSID          *string `protobuf:"bytes,2,req,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,3,req,name=BankID" json:"BankID,omitempty"`
	RetCode          *int32  `protobuf:"varint,4,req,name=RetCode" json:"RetCode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *B2EPushUserInfoRsp) Reset()                    { *m = B2EPushUserInfoRsp{} }
func (m *B2EPushUserInfoRsp) String() string            { return proto1.CompactTextString(m) }
func (*B2EPushUserInfoRsp) ProtoMessage()               {}
func (*B2EPushUserInfoRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{140} }

func (m *B2EPushUserInfoRsp) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *B2EPushUserInfoRsp) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2EPushUserInfoRsp) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *B2EPushUserInfoRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

// 银行端出入金推送项
type B2EPushInOutInfoItem struct {
	TxType           *int32   `protobuf:"varint,1,req,name=TxType" json:"TxType,omitempty"`
	Currency         *int32   `protobuf:"varint,2,req,name=Currency" json:"Currency,omitempty"`
	Amount           *float64 `protobuf:"fixed64,3,req,name=Amount" json:"Amount,omitempty"`
	ExchAcct         *string  `protobuf:"bytes,4,req,name=ExchAcct" json:"ExchAcct,omitempty"`
	BankSID          *string  `protobuf:"bytes,5,req,name=BankSID" json:"BankSID,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *B2EPushInOutInfoItem) Reset()                    { *m = B2EPushInOutInfoItem{} }
func (m *B2EPushInOutInfoItem) String() string            { return proto1.CompactTextString(m) }
func (*B2EPushInOutInfoItem) ProtoMessage()               {}
func (*B2EPushInOutInfoItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{141} }

func (m *B2EPushInOutInfoItem) GetTxType() int32 {
	if m != nil && m.TxType != nil {
		return *m.TxType
	}
	return 0
}

func (m *B2EPushInOutInfoItem) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

func (m *B2EPushInOutInfoItem) GetAmount() float64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *B2EPushInOutInfoItem) GetExchAcct() string {
	if m != nil && m.ExchAcct != nil {
		return *m.ExchAcct
	}
	return ""
}

func (m *B2EPushInOutInfoItem) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

// 银行端出入金推送请求 0x11020019
type B2EPushInOutInfoReq struct {
	BankSID          *string                 `protobuf:"bytes,1,req,name=BankSID" json:"BankSID,omitempty"`
	BankId           *int32                  `protobuf:"varint,2,req,name=BankId" json:"BankId,omitempty"`
	InfoItem         []*B2EPushInOutInfoItem `protobuf:"bytes,3,rep,name=InfoItem" json:"InfoItem,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *B2EPushInOutInfoReq) Reset()                    { *m = B2EPushInOutInfoReq{} }
func (m *B2EPushInOutInfoReq) String() string            { return proto1.CompactTextString(m) }
func (*B2EPushInOutInfoReq) ProtoMessage()               {}
func (*B2EPushInOutInfoReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{142} }

func (m *B2EPushInOutInfoReq) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2EPushInOutInfoReq) GetBankId() int32 {
	if m != nil && m.BankId != nil {
		return *m.BankId
	}
	return 0
}

func (m *B2EPushInOutInfoReq) GetInfoItem() []*B2EPushInOutInfoItem {
	if m != nil {
		return m.InfoItem
	}
	return nil
}

// 银行端出入金推送回应 0x1102001A
type B2EPushInOutInfoRsp struct {
	ExchSID          *string `protobuf:"bytes,1,req,name=ExchSID" json:"ExchSID,omitempty"`
	BankSID          *string `protobuf:"bytes,2,req,name=BankSID" json:"BankSID,omitempty"`
	BankID           *int32  `protobuf:"varint,3,req,name=BankID" json:"BankID,omitempty"`
	RetCode          *int32  `protobuf:"varint,4,req,name=RetCode" json:"RetCode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *B2EPushInOutInfoRsp) Reset()                    { *m = B2EPushInOutInfoRsp{} }
func (m *B2EPushInOutInfoRsp) String() string            { return proto1.CompactTextString(m) }
func (*B2EPushInOutInfoRsp) ProtoMessage()               {}
func (*B2EPushInOutInfoRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{143} }

func (m *B2EPushInOutInfoRsp) GetExchSID() string {
	if m != nil && m.ExchSID != nil {
		return *m.ExchSID
	}
	return ""
}

func (m *B2EPushInOutInfoRsp) GetBankSID() string {
	if m != nil && m.BankSID != nil {
		return *m.BankSID
	}
	return ""
}

func (m *B2EPushInOutInfoRsp) GetBankID() int32 {
	if m != nil && m.BankID != nil {
		return *m.BankID
	}
	return 0
}

func (m *B2EPushInOutInfoRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

// 服务注册请求 0x0F000001
type SvrRegReq struct {
	SID              *string `protobuf:"bytes,1,req,name=SID" json:"SID,omitempty"`
	SvrType          *int32  `protobuf:"varint,2,req,name=SvrType" json:"SvrType,omitempty"`
	SvrId            *string `protobuf:"bytes,3,req,name=SvrId" json:"SvrId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SvrRegReq) Reset()                    { *m = SvrRegReq{} }
func (m *SvrRegReq) String() string            { return proto1.CompactTextString(m) }
func (*SvrRegReq) ProtoMessage()               {}
func (*SvrRegReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{144} }

func (m *SvrRegReq) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func (m *SvrRegReq) GetSvrType() int32 {
	if m != nil && m.SvrType != nil {
		return *m.SvrType
	}
	return 0
}

func (m *SvrRegReq) GetSvrId() string {
	if m != nil && m.SvrId != nil {
		return *m.SvrId
	}
	return ""
}

// 服务注册响应 0x0F000002
type SvrRegRsp struct {
	RetCode          *int32  `protobuf:"varint,1,req,name=RetCode" json:"RetCode,omitempty"`
	SID              *string `protobuf:"bytes,2,req,name=SID" json:"SID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SvrRegRsp) Reset()                    { *m = SvrRegRsp{} }
func (m *SvrRegRsp) String() string            { return proto1.CompactTextString(m) }
func (*SvrRegRsp) ProtoMessage()               {}
func (*SvrRegRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{145} }

func (m *SvrRegRsp) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *SvrRegRsp) GetSID() string {
	if m != nil && m.SID != nil {
		return *m.SID
	}
	return ""
}

func init() {
	proto1.RegisterType((*HeartBeatReq)(nil), "proto.HeartBeatReq")
	proto1.RegisterType((*HeartBeatRsp)(nil), "proto.HeartBeatRsp")
	proto1.RegisterType((*E2EChangeAcctMoneyReq)(nil), "proto.E2EChangeAcctMoneyReq")
	proto1.RegisterType((*E2EChangeAcctMoneyRsp)(nil), "proto.E2EChangeAcctMoneyRsp")
	proto1.RegisterType((*E2EOfflineChangeAcctMoneyReq)(nil), "proto.E2EOfflineChangeAcctMoneyReq")
	proto1.RegisterType((*E2EOfflineChangeAcctMoneyRsp)(nil), "proto.E2EOfflineChangeAcctMoneyRsp")
	proto1.RegisterType((*E2EChangeOneSideAccountReq)(nil), "proto.E2EChangeOneSideAccountReq")
	proto1.RegisterType((*E2EChangeOneSideAccountReq_OperateInfo)(nil), "proto.E2EChangeOneSideAccountReq.OperateInfo")
	proto1.RegisterType((*E2EChangeOneSideAccountRsp)(nil), "proto.E2EChangeOneSideAccountRsp")
	proto1.RegisterType((*E2EChangeCommisionMoneyReq)(nil), "proto.E2EChangeCommisionMoneyReq")
	proto1.RegisterType((*E2EChangeCommisionMoneyRsp)(nil), "proto.E2EChangeCommisionMoneyRsp")
	proto1.RegisterType((*E2EChangePaybackMoneyReq)(nil), "proto.E2EChangePaybackMoneyReq")
	proto1.RegisterType((*E2EChangePaybackMoneyRsp)(nil), "proto.E2EChangePaybackMoneyRsp")
	proto1.RegisterType((*E2EQueryFloatRevenuesReq)(nil), "proto.E2EQueryFloatRevenuesReq")
	proto1.RegisterType((*E2EQueryFloatRevenuesRsp)(nil), "proto.E2EQueryFloatRevenuesRsp")
	proto1.RegisterType((*E2EInOutMoneyReq)(nil), "proto.E2EInOutMoneyReq")
	proto1.RegisterType((*E2EInOutMoneyRsp)(nil), "proto.E2EInOutMoneyRsp")
	proto1.RegisterType((*E2EAttachAcctReq)(nil), "proto.E2EAttachAcctReq")
	proto1.RegisterType((*E2EAttachAcctRsp)(nil), "proto.E2EAttachAcctRsp")
	proto1.RegisterType((*E2EDetachAcctReq)(nil), "proto.E2EDetachAcctReq")
	proto1.RegisterType((*E2EDetachAcctRsp)(nil), "proto.E2EDetachAcctRsp")
	proto1.RegisterType((*E2EUpdateUserInfoReq)(nil), "proto.E2EUpdateUserInfoReq")
	proto1.RegisterType((*E2EUpdateUserInfoRsp)(nil), "proto.E2EUpdateUserInfoRsp")
	proto1.RegisterType((*E2EQueryMoneyReq)(nil), "proto.E2EQueryMoneyReq")
	proto1.RegisterType((*E2EQueryMoneyRsp)(nil), "proto.E2EQueryMoneyRsp")
	proto1.RegisterType((*E2EQuerySignStatusReq)(nil), "proto.E2EQuerySignStatusReq")
	proto1.RegisterType((*E2EQuerySignStatusRsp)(nil), "proto.E2EQuerySignStatusRsp")
	proto1.RegisterType((*E2EFinalFeeReq)(nil), "proto.E2EFinalFeeReq")
	proto1.RegisterType((*E2EFinalFeeRsp)(nil), "proto.E2EFinalFeeRsp")
	proto1.RegisterType((*E2EBruteDeAttachReq)(nil), "proto.E2EBruteDeAttachReq")
	proto1.RegisterType((*E2EBruteDeAttachRsp)(nil), "proto.E2EBruteDeAttachRsp")
	proto1.RegisterType((*E2EQueryBankMoneyReq)(nil), "proto.E2EQueryBankMoneyReq")
	proto1.RegisterType((*E2EQueryBankMoneyRsp)(nil), "proto.E2EQueryBankMoneyRsp")
	proto1.RegisterType((*E2EQueryFinalFeeReq)(nil), "proto.E2EQueryFinalFeeReq")
	proto1.RegisterType((*E2EQueryFinalFeeRsp)(nil), "proto.E2EQueryFinalFeeRsp")
	proto1.RegisterType((*E2ESettmentReq)(nil), "proto.E2ESettmentReq")
	proto1.RegisterType((*E2ESettmentRsp)(nil), "proto.E2ESettmentRsp")
	proto1.RegisterType((*E2ESettmentResultReq)(nil), "proto.E2ESettmentResultReq")
	proto1.RegisterType((*E2ESettmentResultRsp)(nil), "proto.E2ESettmentResultRsp")
	proto1.RegisterType((*E2ETransferReq)(nil), "proto.E2ETransferReq")
	proto1.RegisterType((*E2ETransferRsp)(nil), "proto.E2ETransferRsp")
	proto1.RegisterType((*E2EUpdateBankConfReq)(nil), "proto.E2EUpdateBankConfReq")
	proto1.RegisterType((*E2EUpdateBankConfRsp)(nil), "proto.E2EUpdateBankConfRsp")
	proto1.RegisterType((*E2EOneSideAccountAdjustReq)(nil), "proto.E2EOneSideAccountAdjustReq")
	proto1.RegisterType((*E2EOneSideAccountAdjustRsp)(nil), "proto.E2EOneSideAccountAdjustRsp")
	proto1.RegisterType((*E2EOneSideAccountAuditReq)(nil), "proto.E2EOneSideAccountAuditReq")
	proto1.RegisterType((*E2EOneSideAccountAuditRsp)(nil), "proto.E2EOneSideAccountAuditRsp")
	proto1.RegisterType((*E2EInterestSettlementReq)(nil), "proto.E2EInterestSettlementReq")
	proto1.RegisterType((*E2EInterestSettlementRsp)(nil), "proto.E2EInterestSettlementRsp")
	proto1.RegisterType((*E2ECommissionCarryOverReq)(nil), "proto.E2ECommissionCarryOverReq")
	proto1.RegisterType((*E2ECommissionCarryOverRsp)(nil), "proto.E2ECommissionCarryOverRsp")
	proto1.RegisterType((*E2EQueryPaybackMoneyReq)(nil), "proto.E2EQueryPaybackMoneyReq")
	proto1.RegisterType((*E2EQueryPaybackMoneyRsp)(nil), "proto.E2EQueryPaybackMoneyRsp")
	proto1.RegisterType((*E2EPaybackMoneyReq)(nil), "proto.E2EPaybackMoneyReq")
	proto1.RegisterType((*E2EPaybackMoneyRsp)(nil), "proto.E2EPaybackMoneyRsp")
	proto1.RegisterType((*E2EPaybackMoneyApplyReq)(nil), "proto.E2EPaybackMoneyApplyReq")
	proto1.RegisterType((*E2EPaybackMoneyApplyRsp)(nil), "proto.E2EPaybackMoneyApplyRsp")
	proto1.RegisterType((*E2EPaybackMoneyReviewReq)(nil), "proto.E2EPaybackMoneyReviewReq")
	proto1.RegisterType((*E2EPaybackMoneyReviewRsp)(nil), "proto.E2EPaybackMoneyReviewRsp")
	proto1.RegisterType((*E2EPaybackMoneyNoPassReq)(nil), "proto.E2EPaybackMoneyNoPassReq")
	proto1.RegisterType((*E2EPaybackMoneyNoPassRsp)(nil), "proto.E2EPaybackMoneyNoPassRsp")
	proto1.RegisterType((*E2EClearingProcessLinkQueryReq)(nil), "proto.E2EClearingProcessLinkQueryReq")
	proto1.RegisterType((*E2EClearingProcessLinkQueryRsp)(nil), "proto.E2EClearingProcessLinkQueryRsp")
	proto1.RegisterType((*E2EClearingProcessQueryReq)(nil), "proto.E2EClearingProcessQueryReq")
	proto1.RegisterType((*E2EClearingProcessQueryRsp)(nil), "proto.E2EClearingProcessQueryRsp")
	proto1.RegisterType((*E2EClearingProcessQueryRsp_ClearingProcessQueryGroup)(nil), "proto.E2EClearingProcessQueryRsp.ClearingProcessQueryGroup")
	proto1.RegisterType((*E2EClearSettleDataQueryReq)(nil), "proto.E2EClearSettleDataQueryReq")
	proto1.RegisterType((*E2EClearSettleDataQueryRsp)(nil), "proto.E2EClearSettleDataQueryRsp")
	proto1.RegisterType((*E2EClearSettleDataQueryRsp_ClearSettleDataGroup)(nil), "proto.E2EClearSettleDataQueryRsp.ClearSettleDataGroup")
	proto1.RegisterType((*E2EClearMultiDataQueryReq)(nil), "proto.E2EClearMultiDataQueryReq")
	proto1.RegisterType((*E2EClearMultiDataQueryRsp)(nil), "proto.E2EClearMultiDataQueryRsp")
	proto1.RegisterType((*E2EClearMultiDataQueryRsp_ClearMultiDataGroup)(nil), "proto.E2EClearMultiDataQueryRsp.ClearMultiDataGroup")
	proto1.RegisterType((*E2EClearCustomerDataQueryReq)(nil), "proto.E2EClearCustomerDataQueryReq")
	proto1.RegisterType((*E2EClearCustomerDataQueryRsp)(nil), "proto.E2EClearCustomerDataQueryRsp")
	proto1.RegisterType((*E2EClearCustomerDataQueryRsp_ClearCustomerDataGroup)(nil), "proto.E2EClearCustomerDataQueryRsp.ClearCustomerDataGroup")
	proto1.RegisterType((*E2EClearBrokerDataQueryReq)(nil), "proto.E2EClearBrokerDataQueryReq")
	proto1.RegisterType((*E2EClearBrokerDataQueryRsp)(nil), "proto.E2EClearBrokerDataQueryRsp")
	proto1.RegisterType((*E2EClearBrokerDataQueryRsp_ClearBrokerDataGroup)(nil), "proto.E2EClearBrokerDataQueryRsp.ClearBrokerDataGroup")
	proto1.RegisterType((*E2EBOCClearResultQueryReq)(nil), "proto.E2EBOCClearResultQueryReq")
	proto1.RegisterType((*E2EBOCClearResultQueryRsp)(nil), "proto.E2EBOCClearResultQueryRsp")
	proto1.RegisterType((*E2EBOCClearResultQueryRsp_BOCClearResultQueryGroup)(nil), "proto.E2EBOCClearResultQueryRsp.BOCClearResultQueryGroup")
	proto1.RegisterType((*E2EClearResultQueryReq)(nil), "proto.E2EClearResultQueryReq")
	proto1.RegisterType((*E2EClearResultQueryRsp)(nil), "proto.E2EClearResultQueryRsp")
	proto1.RegisterType((*E2EClearResultQueryRsp_ClearResultQueryGroup)(nil), "proto.E2EClearResultQueryRsp.ClearResultQueryGroup")
	proto1.RegisterType((*AdditionalInfo)(nil), "proto.AdditionalInfo")
	proto1.RegisterType((*E2BSignInOutReq)(nil), "proto.E2BSignInOutReq")
	proto1.RegisterType((*E2BSignInOutRsp)(nil), "proto.E2BSignInOutRsp")
	proto1.RegisterType((*E2BAttachAcctReq)(nil), "proto.E2BAttachAcctReq")
	proto1.RegisterType((*E2BAttachAcctRsp)(nil), "proto.E2BAttachAcctRsp")
	proto1.RegisterType((*E2BDetachAcctReq)(nil), "proto.E2BDetachAcctReq")
	proto1.RegisterType((*E2BDetachAcctRsp)(nil), "proto.E2BDetachAcctRsp")
	proto1.RegisterType((*E2BInMoneyReq)(nil), "proto.E2BInMoneyReq")
	proto1.RegisterType((*E2BInMoneyRsp)(nil), "proto.E2BInMoneyRsp")
	proto1.RegisterType((*E2BOutMoneyReq)(nil), "proto.E2BOutMoneyReq")
	proto1.RegisterType((*E2BOutMoneyRsp)(nil), "proto.E2BOutMoneyRsp")
	proto1.RegisterType((*E2BQueryBankMoneyReq)(nil), "proto.E2BQueryBankMoneyReq")
	proto1.RegisterType((*E2BQueryBankMoneyRsp)(nil), "proto.E2BQueryBankMoneyRsp")
	proto1.RegisterType((*E2BAdjustMoneyReq)(nil), "proto.E2BAdjustMoneyReq")
	proto1.RegisterType((*E2BAdjustMoneyRsp)(nil), "proto.E2BAdjustMoneyRsp")
	proto1.RegisterType((*E2BFileNotificationReq)(nil), "proto.E2BFileNotificationReq")
	proto1.RegisterType((*E2BFileNotificationRsp)(nil), "proto.E2BFileNotificationRsp")
	proto1.RegisterType((*E2BUpdateUserInfoReq)(nil), "proto.E2BUpdateUserInfoReq")
	proto1.RegisterType((*E2BUpdateUserInfoRsp)(nil), "proto.E2BUpdateUserInfoRsp")
	proto1.RegisterType((*E2BQuerySignStatusReq)(nil), "proto.E2BQuerySignStatusReq")
	proto1.RegisterType((*E2BQuerySignStatusRsp)(nil), "proto.E2BQuerySignStatusRsp")
	proto1.RegisterType((*E2BCheckStartReq)(nil), "proto.E2BCheckStartReq")
	proto1.RegisterType((*E2BCheckStartRsp)(nil), "proto.E2BCheckStartRsp")
	proto1.RegisterType((*E2BClearingStartReq)(nil), "proto.E2BClearingStartReq")
	proto1.RegisterType((*E2BClearingStartReq_ClearFileInfo)(nil), "proto.E2BClearingStartReq.ClearFileInfo")
	proto1.RegisterType((*E2BClearingStartRsp)(nil), "proto.E2BClearingStartRsp")
	proto1.RegisterType((*E2BClearingStartRsp_UploadFileInfo)(nil), "proto.E2BClearingStartRsp.UploadFileInfo")
	proto1.RegisterType((*E2BVerifyCodeReq)(nil), "proto.E2BVerifyCodeReq")
	proto1.RegisterType((*E2BVerifyCodeRsp)(nil), "proto.E2BVerifyCodeRsp")
	proto1.RegisterType((*B2EAttachAcctReq)(nil), "proto.B2EAttachAcctReq")
	proto1.RegisterType((*B2EAttachAcctRsp)(nil), "proto.B2EAttachAcctRsp")
	proto1.RegisterType((*B2EDetachAcctReq)(nil), "proto.B2EDetachAcctReq")
	proto1.RegisterType((*B2EDetachAcctRsp)(nil), "proto.B2EDetachAcctRsp")
	proto1.RegisterType((*B2EInMoneyReq)(nil), "proto.B2EInMoneyReq")
	proto1.RegisterType((*B2EInMoneyRsp)(nil), "proto.B2EInMoneyRsp")
	proto1.RegisterType((*B2EOutMoneyReq)(nil), "proto.B2EOutMoneyReq")
	proto1.RegisterType((*B2EOutMoneyRsp)(nil), "proto.B2EOutMoneyRsp")
	proto1.RegisterType((*B2EQueryMoneyReq)(nil), "proto.B2EQueryMoneyReq")
	proto1.RegisterType((*B2EQueryMoneyRsp)(nil), "proto.B2EQueryMoneyRsp")
	proto1.RegisterType((*B2EAdjustMoneyReq)(nil), "proto.B2EAdjustMoneyReq")
	proto1.RegisterType((*B2EAdjustMoneyRsp)(nil), "proto.B2EAdjustMoneyRsp")
	proto1.RegisterType((*B2EFileNotificationReq)(nil), "proto.B2EFileNotificationReq")
	proto1.RegisterType((*B2EFileNotificationRsp)(nil), "proto.B2EFileNotificationRsp")
	proto1.RegisterType((*B2EUpdateUserInfoReq)(nil), "proto.B2EUpdateUserInfoReq")
	proto1.RegisterType((*B2EUpdateUserInfoRsp)(nil), "proto.B2EUpdateUserInfoRsp")
	proto1.RegisterType((*B2EQueryserPasswordReq)(nil), "proto.B2EQueryserPasswordReq")
	proto1.RegisterType((*B2EQueryserPasswordRsp)(nil), "proto.B2EQueryserPasswordRsp")
	proto1.RegisterType((*B2ECheckFileNotificationReq)(nil), "proto.B2ECheckFileNotificationReq")
	proto1.RegisterType((*B2ECheckFileNotificationRsp)(nil), "proto.B2ECheckFileNotificationRsp")
	proto1.RegisterType((*B2EClearingFileNotificationReq)(nil), "proto.B2EClearingFileNotificationReq")
	proto1.RegisterType((*B2EClearingFileNotificationReq_ResultFileInfo)(nil), "proto.B2EClearingFileNotificationReq.ResultFileInfo")
	proto1.RegisterType((*B2EClearingFileNotificationRsp)(nil), "proto.B2EClearingFileNotificationRsp")
	proto1.RegisterType((*B2ESingInfoReq)(nil), "proto.B2ESingInfoReq")
	proto1.RegisterType((*B2ESingInfoRsp)(nil), "proto.B2ESingInfoRsp")
	proto1.RegisterType((*B2EInOutNotifyReq)(nil), "proto.B2EInOutNotifyReq")
	proto1.RegisterType((*B2EInOutNotifyRsp)(nil), "proto.B2EInOutNotifyRsp")
	proto1.RegisterType((*B2EOutMoneyAppReq)(nil), "proto.B2EOutMoneyAppReq")
	proto1.RegisterType((*B2EOutMoneyAppRsp)(nil), "proto.B2EOutMoneyAppRsp")
	proto1.RegisterType((*E2BOutMoneyAppResultReq)(nil), "proto.E2BOutMoneyAppResultReq")
	proto1.RegisterType((*E2BOutMoneyAppResultRsp)(nil), "proto.E2BOutMoneyAppResultRsp")
	proto1.RegisterType((*B2EQueryOutMoneySIDReq)(nil), "proto.B2EQueryOutMoneySIDReq")
	proto1.RegisterType((*B2EQueryOutMoneySIDItem)(nil), "proto.B2EQueryOutMoneySIDItem")
	proto1.RegisterType((*B2EQueryOutMoneySIDRsp)(nil), "proto.B2EQueryOutMoneySIDRsp")
	proto1.RegisterType((*B2EQueryUserSignInfoReq)(nil), "proto.B2EQueryUserSignInfoReq")
	proto1.RegisterType((*B2EQueryUserSignInfoRsp)(nil), "proto.B2EQueryUserSignInfoRsp")
	proto1.RegisterType((*B2EPushUserInfoItem)(nil), "proto.B2EPushUserInfoItem")
	proto1.RegisterType((*B2EPushUserInfoReq)(nil), "proto.B2EPushUserInfoReq")
	proto1.RegisterType((*B2EPushUserInfoRsp)(nil), "proto.B2EPushUserInfoRsp")
	proto1.RegisterType((*B2EPushInOutInfoItem)(nil), "proto.B2EPushInOutInfoItem")
	proto1.RegisterType((*B2EPushInOutInfoReq)(nil), "proto.B2EPushInOutInfoReq")
	proto1.RegisterType((*B2EPushInOutInfoRsp)(nil), "proto.B2EPushInOutInfoRsp")
	proto1.RegisterType((*SvrRegReq)(nil), "proto.SvrRegReq")
	proto1.RegisterType((*SvrRegRsp)(nil), "proto.SvrRegRsp")
}

func init() { proto1.RegisterFile("bank_svc.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 3879 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x5c, 0xd9, 0x6b, 0x24, 0xd7,
	0xd5, 0xa7, 0x7a, 0x55, 0x9f, 0xd6, 0x32, 0x6a, 0x49, 0xa3, 0x1e, 0xd9, 0x9f, 0x3f, 0x51, 0x1f,
	0x7c, 0xc8, 0x10, 0x0b, 0xa7, 0xb3, 0x8f, 0x93, 0x87, 0x6e, 0xa9, 0x35, 0x6e, 0x98, 0x91, 0x64,
	0xf5, 0xc8, 0x4b, 0x82, 0xe3, 0xd4, 0x74, 0x5d, 0x49, 0x65, 0x75, 0x57, 0xb5, 0xab, 0xaa, 0xa5,
	0x91, 0x07, 0x2f, 0xc4, 0x90, 0x40, 0xc8, 0x62, 0x8c, 0xc9, 0x02, 0x21, 0x89, 0x71, 0x1c, 0x30,
	0x84, 0x24, 0x18, 0x9c, 0x3d, 0xf8, 0xc1, 0xe4, 0x31, 0x60, 0xff, 0x23, 0x26, 0x79, 0xca, 0x53,
	0x16, 0xee, 0xb9, 0xb7, 0xaa, 0x6e, 0xdd, 0xaa, 0x92, 0x5a, 0x9a, 0x5e, 0xc6, 0x4f, 0x66, 0x4e,
	0xa9, 0xef, 0x3d, 0xe7, 0x77, 0x7e, 0xf7, 0x2c, 0xb7, 0x4e, 0x19, 0xa6, 0x6f, 0x69, 0xe6, 0xe1,
	0x33, 0xce, 0x51, 0x6b, 0xb5, 0x6b, 0x5b, 0xae, 0x55, 0xca, 0xe2, 0x7f, 0xd4, 0xfb, 0x60, 0xf2,
	0x51, 0xa2, 0xd9, 0x6e, 0x8d, 0x68, 0xee, 0x0e, 0x79, 0xae, 0x54, 0x84, 0x74, 0xb3, 0xb1, 0x5e,
	0x56, 0x96, 0x53, 0x2b, 0x85, 0xf0, 0x43, 0xa7, 0x1b, 0x7e, 0xf8, 0x1f, 0x05, 0x16, 0xea, 0x95,
	0xfa, 0xda, 0x81, 0x66, 0xee, 0x93, 0x6a, 0xab, 0xe5, 0xde, 0xb0, 0x4c, 0x72, 0x22, 0xaf, 0x51,
	0x9a, 0x86, 0xdc, 0xae, 0x43, 0xec, 0x86, 0x5e, 0x4e, 0x2d, 0xa7, 0x56, 0xb2, 0xa5, 0x4b, 0x30,
	0x41, 0xff, 0x7d, 0xf3, 0xa4, 0x4b, 0xca, 0x69, 0x94, 0xcc, 0x40, 0xfe, 0xba, 0xb5, 0x6f, 0x98,
	0x0d, 0xbd, 0x9c, 0x41, 0xc1, 0x2c, 0x14, 0xaa, 0xad, 0x96, 0xd5, 0x33, 0xdd, 0x86, 0x5e, 0xce,
	0xa2, 0x68, 0x0e, 0x8a, 0x5b, 0x5d, 0x62, 0x6b, 0x2e, 0xc1, 0x1f, 0xe6, 0xbc, 0xa5, 0xd6, 0x7a,
	0xb6, 0x4d, 0xcc, 0xd6, 0x49, 0x39, 0x8f, 0x92, 0x69, 0xc8, 0x55, 0x3b, 0xf4, 0x87, 0xe5, 0x89,
	0xe5, 0xd4, 0x8a, 0x42, 0x35, 0xd9, 0x33, 0xf4, 0x72, 0x61, 0x39, 0xb5, 0x92, 0xa6, 0x7f, 0x4e,
	0xd7, 0x58, 0xd7, 0x5c, 0x52, 0x06, 0x94, 0x94, 0x00, 0xd6, 0xac, 0x4e, 0xc7, 0x70, 0x1c, 0xc3,
	0x32, 0xcb, 0x45, 0xfc, 0xc9, 0x65, 0x28, 0x5a, 0x6c, 0xa7, 0xbd, 0xb6, 0xb6, 0x5f, 0x9e, 0x5c,
	0x56, 0x56, 0xb2, 0x57, 0x95, 0x87, 0xa9, 0x52, 0x2d, 0xcd, 0xb6, 0x4f, 0xac, 0x23, 0x62, 0x97,
	0xa7, 0xe8, 0x9f, 0xaa, 0x07, 0xb1, 0x00, 0x38, 0x5d, 0x6a, 0xd1, 0x0e, 0x71, 0xd7, 0x2c, 0x9d,
	0x20, 0x08, 0x59, 0x0f, 0x91, 0x14, 0x22, 0x22, 0xd8, 0x9b, 0xf6, 0xb4, 0xe6, 0x10, 0x65, 0x3c,
	0xbb, 0x7c, 0x45, 0xa9, 0xf9, 0x69, 0xf5, 0x0d, 0x05, 0xee, 0xaf, 0x57, 0xea, 0x5b, 0x7b, 0x7b,
	0x6d, 0xc3, 0x24, 0xf1, 0x90, 0x3b, 0x86, 0x1e, 0x40, 0xde, 0x73, 0x88, 0x6d, 0x78, 0x90, 0xcf,
	0x40, 0xbe, 0x4d, 0x37, 0x34, 0xbc, 0x0d, 0x67, 0xa1, 0xa0, 0x31, 0x80, 0x0d, 0x6f, 0xcf, 0x39,
	0xdf, 0x6c, 0x97, 0x02, 0x9c, 0xf5, 0x14, 0xd3, 0x18, 0x9c, 0x39, 0x11, 0xce, 0x3c, 0x82, 0x47,
	0xb1, 0xee, 0x76, 0x9b, 0xe4, 0xb9, 0xf2, 0x04, 0xc5, 0x48, 0xb5, 0x4e, 0x53, 0x91, 0x81, 0x62,
	0x13, 0xb7, 0x15, 0x02, 0xc5, 0xe1, 0x3a, 0x16, 0xa2, 0x3a, 0x06, 0x46, 0xf8, 0xa0, 0x50, 0x05,
	0xf5, 0x00, 0x94, 0x0f, 0x53, 0xb0, 0xe4, 0xe3, 0xbf, 0x65, 0x92, 0xa6, 0xa1, 0x13, 0xce, 0x9b,
	0x21, 0xb1, 0x50, 0x74, 0x4c, 0x0e, 0x41, 0x78, 0x04, 0x32, 0x0d, 0x73, 0xcf, 0x2a, 0xe7, 0x97,
	0xd3, 0x2b, 0xc5, 0xca, 0x43, 0xec, 0x6c, 0xad, 0x26, 0x6b, 0xb5, 0xca, 0x59, 0x4c, 0x7f, 0xb4,
	0xf4, 0xaa, 0xe2, 0xb3, 0x9a, 0xfe, 0x5b, 0x26, 0xb9, 0x12, 0x21, 0x79, 0x4a, 0x22, 0x79, 0x5a,
	0xf4, 0x4a, 0x26, 0x86, 0xd2, 0xd9, 0x38, 0x4a, 0xe7, 0x62, 0x29, 0x9d, 0x47, 0x4a, 0x77, 0x92,
	0x21, 0x1d, 0x06, 0xaf, 0xff, 0xaa, 0x08, 0xfb, 0x31, 0xbd, 0x0d, 0xcb, 0xfc, 0xd8, 0x05, 0x12,
	0xf5, 0x87, 0xa7, 0xd8, 0x31, 0x04, 0xdc, 0x4a, 0xf3, 0x30, 0x59, 0x23, 0x7b, 0x96, 0x4d, 0xaa,
	0xe2, 0xf1, 0x9c, 0x83, 0x62, 0x75, 0xcf, 0x25, 0x36, 0x17, 0x32, 0x8f, 0xfe, 0x58, 0x81, 0xb2,
	0xaf, 0xda, 0xb6, 0x76, 0x72, 0x4b, 0x6b, 0x1d, 0x5e, 0x30, 0x6c, 0xcc, 0x41, 0xb1, 0xab, 0x9d,
	0x10, 0x12, 0x3a, 0x97, 0x45, 0x48, 0x6b, 0x1d, 0x97, 0x33, 0x6d, 0x12, 0x32, 0x3a, 0x71, 0x5a,
	0xa8, 0x4f, 0x41, 0x8c, 0x29, 0x46, 0x87, 0xf0, 0xb0, 0x31, 0x05, 0x59, 0xba, 0xaa, 0x8e, 0xc0,
	0xa6, 0xd5, 0xd7, 0x12, 0xd5, 0xbb, 0xfb, 0x90, 0x21, 0xed, 0x9f, 0xf5, 0x9c, 0x47, 0x8d, 0xb0,
	0x1d, 0xf2, 0x1c, 0x3f, 0xc3, 0x5c, 0x42, 0xa8, 0x04, 0x75, 0x54, 0x3f, 0x87, 0x3a, 0x3d, 0xd6,
	0x23, 0xf6, 0xc9, 0x46, 0xdb, 0xa2, 0x89, 0xf1, 0x88, 0x98, 0x3d, 0xe2, 0x24, 0x72, 0x92, 0xb9,
	0x32, 0xab, 0xee, 0x26, 0xfd, 0xf0, 0x4c, 0x12, 0x04, 0x2b, 0xa5, 0xfd, 0x87, 0xbd, 0x0e, 0x1a,
	0xa2, 0xa8, 0xff, 0x50, 0xe0, 0x52, 0xbd, 0x52, 0x6f, 0x98, 0x5b, 0xbd, 0x84, 0x2c, 0x2b, 0x70,
	0x88, 0x39, 0x8f, 0xc6, 0x81, 0x9e, 0xe3, 0x5a, 0x1d, 0xe4, 0x51, 0x22, 0xaf, 0x6e, 0x90, 0xce,
	0x2d, 0x94, 0xf8, 0x01, 0xbf, 0xa6, 0x99, 0x87, 0x0d, 0x9d, 0x1f, 0x0c, 0xe9, 0xb4, 0xe4, 0x23,
	0xa7, 0x65, 0x42, 0x3a, 0x2d, 0x05, 0xa4, 0xc1, 0x0c, 0xe4, 0x37, 0x7a, 0xa6, 0xbe, 0xed, 0x1c,
	0xe3, 0xf9, 0x40, 0xf5, 0xe8, 0xba, 0x54, 0x50, 0x5c, 0x56, 0x56, 0x0a, 0x74, 0x0d, 0x8a, 0x8d,
	0xed, 0x10, 0x1d, 0x53, 0x6c, 0x41, 0x48, 0x27, 0x53, 0x98, 0x4e, 0xfe, 0x14, 0xb1, 0xf9, 0xfc,
	0x07, 0x29, 0x0c, 0x42, 0x46, 0x02, 0x21, 0x1b, 0x01, 0x21, 0xe7, 0xfd, 0xc5, 0x0e, 0x71, 0x6f,
	0x38, 0xfb, 0xe5, 0x3c, 0x6a, 0x36, 0x03, 0xf9, 0x6d, 0xcb, 0x71, 0x77, 0xed, 0x36, 0x66, 0x3a,
	0x54, 0x9e, 0x0a, 0xd6, 0x35, 0x57, 0x2b, 0x17, 0xfc, 0x3f, 0xd1, 0x4e, 0x30, 0x13, 0x00, 0x15,
	0xa8, 0xef, 0xa7, 0x50, 0xfb, 0xaa, 0xeb, 0x6a, 0xad, 0x03, 0x9a, 0x06, 0x47, 0xe5, 0xb1, 0x12,
	0xc0, 0x0e, 0x69, 0x1d, 0x5a, 0xe6, 0x06, 0x0d, 0xf5, 0xbe, 0xc3, 0xe8, 0xdf, 0x50, 0x35, 0xd0,
	0x61, 0x05, 0xe6, 0x42, 0xc7, 0xdd, 0xd4, 0x3a, 0x04, 0x5d, 0x86, 0xf0, 0x37, 0x74, 0x74, 0x32,
	0x78, 0xbf, 0x69, 0xe8, 0x9b, 0x3d, 0xba, 0x17, 0x16, 0x46, 0x05, 0xd1, 0xa9, 0x93, 0x28, 0xa0,
	0xd1, 0x75, 0x9f, 0x98, 0x6c, 0x95, 0x29, 0xc4, 0x81, 0x46, 0x20, 0x2a, 0xe2, 0x4b, 0x4d, 0x53,
	0x4f, 0x96, 0x16, 0x60, 0x8a, 0x0b, 0xf9, 0x7a, 0x33, 0x1e, 0x66, 0x1e, 0x27, 0x2e, 0x45, 0x38,
	0x31, 0x8b, 0x28, 0x1e, 0xcb, 0x20, 0x8e, 0x88, 0x02, 0xea, 0xdf, 0x19, 0xf9, 0xd6, 0xc9, 0xa8,
	0xdd, 0x27, 0xba, 0x2a, 0x1f, 0x71, 0xd5, 0x84, 0xe4, 0xaa, 0x42, 0xc4, 0x55, 0x20, 0xbb, 0xaa,
	0x28, 0x9f, 0xbf, 0xc9, 0x53, 0xb1, 0x16, 0x2c, 0x1e, 0x15, 0xd6, 0xef, 0x29, 0x30, 0x5f, 0xaf,
	0xd4, 0x77, 0xbb, 0xb4, 0xb4, 0xc3, 0xbf, 0x35, 0xf7, 0xac, 0x11, 0xe2, 0xed, 0xa3, 0x9b, 0x97,
	0xd0, 0x9d, 0x88, 0xa0, 0x5b, 0x90, 0xc1, 0x64, 0x87, 0xfd, 0x4e, 0x9c, 0x01, 0xa3, 0x82, 0xef,
	0x08, 0xfd, 0x86, 0x29, 0x67, 0x94, 0xa9, 0x41, 0xfd, 0x83, 0x22, 0x6f, 0x3c, 0xc2, 0xf8, 0x2c,
	0x56, 0x38, 0xa5, 0x45, 0x98, 0x61, 0xff, 0xae, 0x1e, 0x69, 0x46, 0x5b, 0xbb, 0xd5, 0x26, 0xbc,
	0x68, 0xf3, 0x1f, 0x6c, 0x10, 0xb7, 0x75, 0x80, 0x0f, 0x30, 0x3f, 0xa9, 0x77, 0xb0, 0x71, 0x43,
	0xd5, 0x9b, 0xc6, 0xbe, 0xd9, 0x74, 0x35, 0xb7, 0xe7, 0x8c, 0x0a, 0xb8, 0x6f, 0x2b, 0xb1, 0xbb,
	0x8f, 0x10, 0x3d, 0xb6, 0x23, 0x4b, 0x0e, 0xea, 0x0f, 0x14, 0x98, 0xae, 0x57, 0xea, 0x1b, 0x86,
	0xa9, 0xb5, 0x37, 0x08, 0x19, 0xd5, 0xc1, 0x93, 0x9d, 0x38, 0x0b, 0x85, 0x9b, 0xb6, 0xa6, 0x13,
	0xec, 0xef, 0x58, 0x69, 0xd8, 0x0b, 0x2b, 0x36, 0xaa, 0x03, 0xf5, 0x23, 0x05, 0xe6, 0xea, 0x95,
	0x7a, 0xcd, 0xee, 0xb9, 0x64, 0x9d, 0xb0, 0xe4, 0x33, 0xbe, 0xf0, 0x3f, 0x09, 0x19, 0xd7, 0x0f,
	0x46, 0xea, 0xf3, 0x31, 0xaa, 0x8d, 0x0a, 0x97, 0xe7, 0x31, 0xca, 0x21, 0x6d, 0xa9, 0x8e, 0x23,
	0x0d, 0x36, 0x7f, 0x51, 0xe2, 0x36, 0xff, 0xf8, 0x04, 0x1c, 0x1b, 0xfd, 0xc6, 0xfa, 0x82, 0xbb,
	0x3a, 0x68, 0xf3, 0x30, 0xe9, 0xc9, 0x30, 0x67, 0x65, 0xbc, 0x46, 0xcb, 0x93, 0xde, 0x24, 0x6d,
	0xb4, 0xa3, 0xa0, 0x3e, 0x1b, 0xb3, 0xe7, 0x60, 0x10, 0x8b, 0xf8, 0x4b, 0x7d, 0x93, 0x05, 0x91,
	0x26, 0x71, 0xdd, 0x0e, 0x31, 0xdd, 0x0b, 0xdb, 0xb6, 0x61, 0x77, 0x82, 0x86, 0x3d, 0xe3, 0x49,
	0xd7, 0x1d, 0x57, 0x6e, 0xe3, 0x67, 0xa1, 0xb0, 0x6e, 0xd8, 0xa4, 0xe5, 0x1a, 0x96, 0xd9, 0x6f,
	0x13, 0xaf, 0x3e, 0x16, 0x56, 0x52, 0xba, 0xd0, 0x8c, 0x2a, 0x29, 0xf6, 0xdd, 0x69, 0x6c, 0x15,
	0x05, 0xf0, 0x50, 0x3b, 0xf5, 0x6d, 0x46, 0xcc, 0xc0, 0x70, 0xa7, 0xd7, 0xbe, 0x57, 0xcd, 0xaf,
	0xc7, 0xa9, 0x7a, 0x26, 0x08, 0x11, 0x93, 0xdf, 0x65, 0xbe, 0xbe, 0x69, 0x6b, 0xa6, 0xb3, 0x47,
	0xec, 0x8b, 0x19, 0x2b, 0x52, 0x28, 0x13, 0x6b, 0x7e, 0x36, 0xd6, 0xfc, 0x5c, 0xd4, 0xfc, 0x3e,
	0x9b, 0x52, 0x95, 0x84, 0xd5, 0x1e, 0xd6, 0x51, 0x70, 0x84, 0x62, 0x90, 0x86, 0xaa, 0x35, 0xcb,
	0xdc, 0x1b, 0xfa, 0x59, 0x3f, 0x8c, 0xdb, 0x74, 0x58, 0x16, 0x3e, 0x83, 0x77, 0x5d, 0xe1, 0xdb,
	0xc1, 0xaa, 0xfe, 0x6c, 0xcf, 0xe9, 0x83, 0xf8, 0xe2, 0x6a, 0xe9, 0xe8, 0x1d, 0x1d, 0x63, 0xd8,
	0x57, 0x93, 0x37, 0x38, 0xbf, 0x4d, 0xb1, 0xeb, 0x5f, 0x89, 0xae, 0xdf, 0xd3, 0x8d, 0x41, 0xe9,
	0xff, 0x74, 0xe2, 0xfa, 0x03, 0x51, 0xff, 0x45, 0xbc, 0x64, 0x6a, 0x98, 0x2e, 0xb1, 0x89, 0xe3,
	0xd2, 0xf3, 0xdc, 0x26, 0xfd, 0x45, 0xdd, 0xa8, 0xf6, 0x72, 0x2a, 0x0e, 0x33, 0x20, 0x2b, 0x1d,
	0x24, 0xbc, 0x66, 0x54, 0x1b, 0x49, 0xfb, 0x9f, 0xdb, 0x3a, 0xf5, 0x35, 0x05, 0xa1, 0x0a, 0x6e,
	0xac, 0xd7, 0x34, 0xdb, 0x3e, 0xd9, 0x3a, 0xba, 0x68, 0x58, 0x39, 0xbb, 0xb2, 0x98, 0x81, 0x7c,
	0xf3, 0xc4, 0xd9, 0x68, 0x5b, 0xc7, 0xfc, 0x92, 0x92, 0x07, 0xf9, 0xe0, 0x7e, 0x4b, 0x7d, 0x39,
	0x59, 0xa9, 0x51, 0xd5, 0x5a, 0x77, 0x60, 0xd1, 0xcb, 0xdd, 0x31, 0x57, 0xb6, 0x03, 0x07, 0x65,
	0x12, 0x32, 0xc1, 0x6d, 0x38, 0xed, 0x08, 0xe2, 0x77, 0x1f, 0x55, 0xbd, 0xb5, 0x08, 0x33, 0x37,
	0xb4, 0xdb, 0xe2, 0xd6, 0xfc, 0x2e, 0xfb, 0x1d, 0x05, 0x4a, 0xf5, 0x4a, 0x7d, 0xe4, 0x90, 0xf0,
	0xfb, 0x3d, 0x42, 0x1a, 0x3a, 0x2f, 0xcb, 0xe7, 0x61, 0x32, 0xa4, 0xdf, 0x84, 0x77, 0x01, 0xcf,
	0xa5, 0xeb, 0xc4, 0x69, 0xb1, 0xeb, 0x02, 0xf5, 0x24, 0xaa, 0xf3, 0xa8, 0x68, 0xf4, 0x3b, 0xe6,
	0x49, 0x71, 0xef, 0x6a, 0xb7, 0xdb, 0xfe, 0x18, 0x80, 0xf6, 0x62, 0x82, 0xe2, 0xa3, 0x42, 0xee,
	0x05, 0x8c, 0x71, 0x61, 0xa2, 0x1d, 0x19, 0xe4, 0x78, 0x58, 0xc8, 0x4d, 0x41, 0xf6, 0xba, 0xb5,
	0xcf, 0xb7, 0x4f, 0xab, 0x2f, 0x25, 0x6d, 0x3f, 0x3e, 0xfb, 0x37, 0xad, 0x6d, 0xcd, 0x71, 0xc6,
	0x66, 0x3f, 0xdf, 0x7e, 0x54, 0xf6, 0x7f, 0x43, 0x81, 0x07, 0x68, 0x0e, 0x68, 0x13, 0xcd, 0x36,
	0xcc, 0xfd, 0x6d, 0xdb, 0x6a, 0x11, 0xc7, 0xb9, 0x6e, 0x98, 0x87, 0x18, 0x16, 0xcf, 0x86, 0x21,
	0xd8, 0x22, 0x1d, 0x79, 0x5b, 0x99, 0x91, 0x7a, 0x5c, 0xbf, 0xd4, 0xf5, 0xb6, 0x0b, 0x5e, 0x30,
	0xab, 0xaf, 0x9f, 0xa1, 0xc8, 0xf9, 0x01, 0xb9, 0x4c, 0xcf, 0x5b, 0xeb, 0x50, 0xdb, 0x27, 0xf8,
	0x8a, 0x00, 0x95, 0xb9, 0xaa, 0x7c, 0xb2, 0xb4, 0x00, 0xc0, 0xe5, 0x9b, 0xbd, 0x0e, 0xd3, 0x89,
	0x8a, 0x05, 0xb5, 0xe8, 0xae, 0x1c, 0x9f, 0xaf, 0xf3, 0x17, 0x9e, 0x61, 0xb5, 0x46, 0x8c, 0xcd,
	0xbf, 0x52, 0xc9, 0x4a, 0x0c, 0x1d, 0x97, 0xa7, 0xa1, 0x1c, 0xb7, 0xf1, 0x75, 0xc3, 0xa1, 0x75,
	0x52, 0x7a, 0xa5, 0x58, 0x79, 0x44, 0x98, 0x06, 0x88, 0x57, 0x71, 0x35, 0x4e, 0x7e, 0xcd, 0xb6,
	0x7a, 0xdd, 0xa5, 0x37, 0x14, 0xb8, 0x92, 0xf8, 0x34, 0xe2, 0x14, 0x66, 0xdf, 0x02, 0x4c, 0xf1,
	0x3f, 0xe5, 0x37, 0x7c, 0x29, 0xaf, 0x84, 0x6c, 0xba, 0x9a, 0xed, 0xde, 0x34, 0x3a, 0xac, 0x8f,
	0x45, 0xe3, 0xeb, 0xa6, 0x8e, 0x02, 0xd6, 0x55, 0xdc, 0x0f, 0xf3, 0x0d, 0x67, 0x93, 0x10, 0x7d,
	0x87, 0x74, 0x89, 0xe6, 0x7a, 0x8b, 0x73, 0xf8, 0x17, 0x60, 0xca, 0x93, 0xac, 0xf9, 0x85, 0x60,
	0x56, 0xfd, 0xb9, 0x40, 0x02, 0x56, 0x06, 0xae, 0x6b, 0xae, 0x36, 0x5a, 0x12, 0xe0, 0x95, 0x19,
	0xd9, 0x37, 0xcc, 0x1d, 0xeb, 0x38, 0xe8, 0x7b, 0xeb, 0xa6, 0x4e, 0xff, 0xcd, 0x2e, 0xcd, 0xfe,
	0x99, 0x4a, 0x56, 0x73, 0x14, 0xc7, 0xa7, 0xda, 0x6e, 0xef, 0x90, 0x96, 0x65, 0xeb, 0xf4, 0x01,
	0x4b, 0x8d, 0x4d, 0x98, 0x93, 0xd4, 0x41, 0xde, 0xb0, 0x29, 0x92, 0xcf, 0x4a, 0xbc, 0x89, 0xea,
	0xbc, 0x2a, 0xc9, 0x19, 0x65, 0xbe, 0xa7, 0xc0, 0x7c, 0xdc, 0x03, 0xaa, 0x03, 0x0b, 0x6f, 0xfc,
	0x35, 0x06, 0xf3, 0x48, 0x09, 0x80, 0x4b, 0x69, 0x73, 0x99, 0xf2, 0x9a, 0xcb, 0x6b, 0x9a, 0x61,
	0x56, 0x4d, 0xfd, 0xba, 0xe5, 0x38, 0x7c, 0xbe, 0x84, 0x42, 0xa0, 0xb9, 0x64, 0x83, 0x30, 0xc7,
	0x60, 0xc6, 0xc6, 0xbb, 0x5a, 0xde, 0x15, 0xb0, 0x57, 0xff, 0xe1, 0xc1, 0x13, 0xd6, 0x29, 0xbc,
	0xc9, 0x2b, 0x69, 0xaa, 0xd4, 0x8d, 0x5e, 0xdb, 0x35, 0xee, 0x49, 0x7e, 0xfc, 0x24, 0x9d, 0xa8,
	0xe5, 0x98, 0xe8, 0xb1, 0x0d, 0xa5, 0xb0, 0x36, 0x02, 0x3b, 0x3e, 0x2d, 0xb1, 0x23, 0xa2, 0xf1,
	0x6a, 0x58, 0xcc, 0xb8, 0xf1, 0x47, 0x85, 0x33, 0x2e, 0x2c, 0x1f, 0x1b, 0x35, 0x68, 0x48, 0x59,
	0x27, 0x6d, 0xe3, 0x88, 0x86, 0x34, 0xcb, 0xd2, 0x1d, 0x7e, 0xb5, 0x3a, 0x07, 0x45, 0x4f, 0x4c,
	0x17, 0x65, 0x17, 0x57, 0xbf, 0x60, 0xd3, 0x6f, 0xa8, 0xbf, 0x97, 0xcb, 0xef, 0x49, 0x26, 0xfd,
	0x3a, 0x7d, 0x9a, 0xa2, 0x63, 0x22, 0xd3, 0x53, 0xb0, 0x10, 0x51, 0x48, 0xe0, 0xd3, 0x55, 0x89,
	0x4f, 0x71, 0x7a, 0xaf, 0x46, 0x9e, 0x30, 0x56, 0xbd, 0xa7, 0xc0, 0xe5, 0xf8, 0x47, 0x54, 0x17,
	0xb4, 0x85, 0x5f, 0x5e, 0x70, 0xdf, 0xc8, 0x57, 0x5a, 0x63, 0xa7, 0x96, 0x98, 0xc2, 0x6a, 0xb6,
	0x75, 0x78, 0x8f, 0x12, 0xeb, 0x83, 0x54, 0xb2, 0x9a, 0x63, 0x4e, 0x61, 0x81, 0x3a, 0xa7, 0xa4,
	0xb0, 0xa8, 0xce, 0xab, 0x92, 0x9c, 0x11, 0xca, 0xe0, 0x19, 0x4c, 0x92, 0x9f, 0x23, 0x4c, 0x85,
	0x09, 0x91, 0x8e, 0x63, 0x4e, 0x46, 0xcc, 0x4d, 0xb5, 0xad, 0x35, 0xdc, 0x91, 0x5d, 0x87, 0xdf,
	0x73, 0x8e, 0xff, 0x28, 0x95, 0xa8, 0xe5, 0x98, 0xfc, 0xfe, 0x65, 0x58, 0x8c, 0xd1, 0x46, 0xf0,
	0xfd, 0x17, 0x02, 0xdf, 0xc7, 0xab, 0xbd, 0x1a, 0x23, 0x66, 0xee, 0x7f, 0x59, 0x81, 0x72, 0xd2,
	0x43, 0xea, 0xc5, 0xa6, 0xb1, 0x2f, 0x05, 0x94, 0x39, 0x28, 0x52, 0x9c, 0x6b, 0x5a, 0x5b, 0x33,
	0x5b, 0x8c, 0x03, 0x18, 0x00, 0x9a, 0x27, 0x8e, 0x4b, 0x3a, 0x9e, 0xd8, 0xa7, 0x01, 0x2f, 0x8f,
	0x03, 0xf3, 0xd9, 0xb0, 0x57, 0x47, 0xb3, 0x0f, 0xf9, 0x4d, 0xfa, 0x3b, 0x0a, 0x5c, 0xf6, 0x58,
	0x3b, 0x2e, 0x4e, 0x84, 0xef, 0x23, 0x43, 0x2c, 0x99, 0x90, 0x58, 0x82, 0x13, 0x40, 0xea, 0x37,
	0xd3, 0xf1, 0x4a, 0x8f, 0x89, 0x22, 0x8f, 0xf1, 0x53, 0x1c, 0xcf, 0x8f, 0x4f, 0x49, 0xb1, 0x41,
	0x22, 0x47, 0x3c, 0x33, 0xde, 0x52, 0x78, 0x16, 0x8b, 0xd0, 0xa2, 0xff, 0xd0, 0x70, 0x19, 0xa6,
	0x3d, 0xbc, 0x43, 0xf3, 0xd3, 0x82, 0x9c, 0xad, 0x1e, 0xdc, 0x52, 0xd4, 0x6d, 0xdb, 0xb2, 0x6f,
	0x38, 0xac, 0x0f, 0x2a, 0x08, 0x64, 0xf1, 0xef, 0x8e, 0x7d, 0x1f, 0xb3, 0xbb, 0xe3, 0x87, 0x60,
	0xba, 0xaa, 0xeb, 0x86, 0x6b, 0x58, 0xa6, 0xd6, 0xc6, 0xa1, 0x6e, 0xef, 0x05, 0xbe, 0xe2, 0xdd,
	0x73, 0x1c, 0x69, 0xed, 0x1e, 0x57, 0x49, 0xdd, 0x81, 0x99, 0x7a, 0xa5, 0x46, 0x69, 0x8d, 0x73,
	0x8e, 0x94, 0x65, 0xb4, 0x35, 0xbb, 0xdd, 0x3a, 0x08, 0xcd, 0x98, 0x22, 0x6d, 0xf8, 0x8c, 0xa9,
	0x7f, 0xc9, 0xe6, 0xd3, 0x6c, 0x87, 0x38, 0xc4, 0x3e, 0x22, 0xec, 0x72, 0xa3, 0xa0, 0xda, 0xd2,
	0x9a, 0x8c, 0x04, 0xe1, 0x35, 0xf9, 0x08, 0x13, 0x23, 0x82, 0x12, 0xda, 0x24, 0x1d, 0xda, 0x24,
	0x23, 0x4d, 0x44, 0x66, 0xbd, 0xd1, 0x3d, 0x8f, 0x54, 0xac, 0x13, 0xfc, 0x37, 0x0e, 0x03, 0xd5,
	0xc2, 0xe3, 0x8e, 0x67, 0x5a, 0x22, 0x4e, 0x3b, 0xa4, 0x3d, 0x40, 0xe9, 0x4f, 0x50, 0x92, 0xf1,
	0x3b, 0xd5, 0xdb, 0xad, 0x83, 0x6d, 0xe7, 0x98, 0xfb, 0x40, 0x9c, 0xd8, 0xca, 0x89, 0x6f, 0xc4,
	0xd6, 0x1a, 0xeb, 0xc2, 0xa1, 0x99, 0x81, 0x3c, 0x17, 0xf2, 0xa9, 0xb9, 0xd0, 0xb4, 0x22, 0x9b,
	0xda, 0xa4, 0xec, 0xa5, 0x22, 0xef, 0x97, 0x80, 0xe3, 0x8a, 0x97, 0x60, 0xc2, 0x93, 0xf2, 0x61,
	0xd5, 0x53, 0xa7, 0xe7, 0x70, 0xf0, 0x51, 0x7d, 0x41, 0xb6, 0xff, 0x42, 0xa8, 0x07, 0x38, 0x67,
	0x64, 0x9c, 0xb3, 0xfc, 0x78, 0x4e, 0xe3, 0xeb, 0x3d, 0xef, 0x42, 0x6b, 0x1d, 0x87, 0xf9, 0x0b,
	0xea, 0xfb, 0x0c, 0xff, 0xf0, 0xbc, 0xe2, 0x70, 0xf0, 0x97, 0xd0, 0xce, 0xc9, 0x68, 0xe7, 0xe5,
	0x19, 0x39, 0x7f, 0x66, 0x56, 0x98, 0x38, 0x95, 0x41, 0x64, 0x73, 0x74, 0x44, 0x36, 0x62, 0x28,
	0x20, 0xaa, 0x1f, 0x2a, 0x30, 0x55, 0xaf, 0xd4, 0x1a, 0xc1, 0x77, 0x06, 0x03, 0x41, 0x4a, 0x02,
	0x26, 0x2b, 0x03, 0x93, 0x0b, 0xe8, 0x7b, 0xea, 0xa7, 0x06, 0x51, 0xa4, 0xe4, 0x81, 0xc3, 0x10,
	0x74, 0x48, 0x51, 0xf5, 0xfb, 0x61, 0x9b, 0x86, 0xc3, 0x3e, 0x61, 0x10, 0x3a, 0x17, 0x19, 0x84,
	0xce, 0xcb, 0x83, 0xd0, 0xe8, 0x77, 0xf5, 0xa7, 0x29, 0x98, 0xae, 0x57, 0x6a, 0xe2, 0xe0, 0xfa,
	0x38, 0x79, 0x79, 0xf6, 0xec, 0xba, 0x08, 0x3f, 0x43, 0x1b, 0x47, 0xaa, 0xbb, 0x44, 0x73, 0x31,
	0x25, 0x16, 0x31, 0x48, 0x44, 0x42, 0xc2, 0xff, 0x43, 0xbe, 0xaa, 0xeb, 0x68, 0xf8, 0x14, 0xa6,
	0xb9, 0x05, 0x9e, 0xe6, 0xa4, 0x74, 0x20, 0xba, 0x6e, 0x1a, 0x11, 0x6a, 0x85, 0x01, 0x1a, 0x0e,
	0xe7, 0x5f, 0xc3, 0x39, 0x95, 0x5a, 0x74, 0x7a, 0x6b, 0x8c, 0xce, 0xe0, 0x53, 0x5d, 0xb5, 0xd8,
	0xa9, 0xae, 0x73, 0x02, 0x20, 0xfa, 0x35, 0x23, 0xf9, 0x35, 0x9b, 0x34, 0xb4, 0x95, 0x4b, 0x1a,
	0xda, 0x62, 0x0d, 0x63, 0x00, 0xea, 0x84, 0x0c, 0x2a, 0x2b, 0xbb, 0xfe, 0xa6, 0xc0, 0x2c, 0x8d,
	0xfa, 0x38, 0x9a, 0x30, 0x58, 0x44, 0xbd, 0xfc, 0x9b, 0x15, 0x6b, 0xb6, 0x84, 0x74, 0xa7, 0xc8,
	0xe9, 0x4e, 0x91, 0x88, 0x5e, 0x90, 0x00, 0xa1, 0xb4, 0x0e, 0x13, 0x9d, 0x05, 0x91, 0xbd, 0x88,
	0x39, 0xc3, 0x21, 0xe3, 0x35, 0x5a, 0xad, 0xd6, 0x36, 0x8c, 0x36, 0xd9, 0xb4, 0x5c, 0x63, 0xcf,
	0x68, 0x69, 0xf4, 0x80, 0x9c, 0xbf, 0xf8, 0x51, 0x0f, 0xe3, 0x17, 0x1a, 0x8e, 0xd6, 0xef, 0x32,
	0xb6, 0x46, 0xe7, 0xd4, 0xef, 0xad, 0x3a, 0x47, 0x88, 0x4c, 0x98, 0x3d, 0x54, 0x23, 0x4e, 0xed,
	0xe1, 0x40, 0xf4, 0x3a, 0x8e, 0x36, 0xd7, 0x62, 0x06, 0xab, 0x07, 0x82, 0x91, 0x08, 0xc9, 0x79,
	0xe2, 0xcc, 0xf3, 0xb1, 0x5a, 0x5d, 0x14, 0x02, 0xfe, 0x6e, 0x45, 0xae, 0x8c, 0x73, 0x32, 0x24,
	0xac, 0x21, 0x78, 0x02, 0x6b, 0x9a, 0xb5, 0x03, 0xd2, 0x3a, 0xc4, 0x97, 0x30, 0x7d, 0x81, 0x81,
	0x6a, 0xb8, 0xad, 0x83, 0x4d, 0x2b, 0x98, 0x02, 0xc2, 0x1b, 0x0c, 0xec, 0x13, 0x11, 0x7c, 0x75,
	0x57, 0x5e, 0xf8, 0x42, 0xf6, 0x44, 0xa6, 0xfb, 0x3e, 0x48, 0xc3, 0x1c, 0x5d, 0x97, 0x37, 0x44,
	0x83, 0xd3, 0x99, 0x75, 0x60, 0x45, 0xd6, 0x2b, 0xae, 0xf9, 0x81, 0x19, 0x3f, 0x44, 0x9d, 0x11,
	0xe7, 0x06, 0x68, 0x5f, 0xe9, 0xb5, 0x64, 0xf4, 0x68, 0xaf, 0xf9, 0x93, 0xb7, 0xd9, 0xd2, 0x55,
	0x98, 0xa0, 0x22, 0x5e, 0x5f, 0xd0, 0x34, 0xbb, 0xe2, 0x77, 0x93, 0x11, 0x9d, 0x57, 0xfd, 0x25,
	0x30, 0xf3, 0x2e, 0x41, 0x09, 0x1b, 0x22, 0x9c, 0x00, 0xc4, 0x98, 0x11, 0x54, 0x58, 0x57, 0x60,
	0x36, 0xfc, 0xec, 0xc6, 0xfa, 0x67, 0x78, 0xf6, 0x5f, 0x86, 0x85, 0xe0, 0x91, 0xa8, 0x7d, 0xd1,
	0xfb, 0x8c, 0xf6, 0x7f, 0x60, 0x81, 0x5f, 0x4c, 0x48, 0x6b, 0xb3, 0xca, 0xe0, 0x7e, 0x98, 0x8f,
	0x3c, 0xa6, 0xcb, 0xb3, 0x2f, 0xa6, 0xfe, 0x0f, 0xca, 0xa1, 0xa7, 0xe2, 0x0e, 0xd3, 0x7c, 0x87,
	0xa5, 0x2f, 0xf2, 0xf7, 0x6f, 0xbe, 0x2d, 0x0b, 0x82, 0x00, 0xb7, 0x0a, 0xae, 0x57, 0x3d, 0x31,
	0xdd, 0x82, 0x35, 0x99, 0x6f, 0xa4, 0x62, 0x5c, 0x3a, 0x10, 0xb6, 0xf8, 0x8e, 0xcb, 0x06, 0x8e,
	0x0b, 0x79, 0x38, 0xe7, 0x79, 0x78, 0x09, 0x66, 0x76, 0xbb, 0x6d, 0x4b, 0xd3, 0x45, 0x8f, 0x72,
	0xfc, 0xbe, 0x04, 0xc0, 0x9e, 0x09, 0x6e, 0x7d, 0x30, 0xc9, 0xad, 0x4e, 0x77, 0x35, 0x58, 0x08,
	0xbf, 0xa2, 0x5e, 0x83, 0xe9, 0xb0, 0x84, 0xb2, 0x27, 0x90, 0x08, 0xf0, 0x5c, 0x81, 0xd9, 0xb0,
	0x3c, 0xc0, 0xe8, 0x49, 0x3c, 0x4d, 0x8f, 0x13, 0xdb, 0xd8, 0x3b, 0xa1, 0xf6, 0xf5, 0x4b, 0xf9,
	0x2d, 0x5b, 0xf7, 0x3f, 0xda, 0xc4, 0x4a, 0x31, 0x58, 0x82, 0xb7, 0xe3, 0xbb, 0xf2, 0xca, 0x83,
	0x39, 0xa7, 0x3f, 0x53, 0xe0, 0x52, 0x4d, 0xfe, 0xc0, 0x50, 0x58, 0x66, 0x40, 0x99, 0x48, 0xb9,
	0x78, 0x26, 0xa2, 0x96, 0xd7, 0x62, 0xbe, 0xde, 0x3b, 0xc5, 0xf2, 0x54, 0x3f, 0x96, 0x7f, 0x97,
	0x59, 0x1e, 0xe9, 0x75, 0xcf, 0x63, 0xb9, 0xd2, 0x9f, 0xe5, 0x91, 0xf4, 0xa2, 0xc8, 0xe9, 0x45,
	0xf1, 0xed, 0x3c, 0x4f, 0xdb, 0xda, 0x97, 0x9d, 0xbf, 0x51, 0x60, 0xaa, 0x56, 0xa9, 0x87, 0xdb,
	0xd4, 0xbb, 0x77, 0x6f, 0xa4, 0x4d, 0x55, 0xe4, 0x36, 0x55, 0xe9, 0xab, 0x4d, 0x0d, 0x77, 0x45,
	0x05, 0xfc, 0x66, 0x77, 0x27, 0xa4, 0xf1, 0x60, 0x60, 0xf8, 0x95, 0x02, 0xd3, 0xb5, 0x4a, 0x5d,
	0x6a, 0x20, 0x87, 0x40, 0xf3, 0xbe, 0x9c, 0xdd, 0xc7, 0x9c, 0x79, 0x33, 0xac, 0xef, 0x40, 0x49,
	0x1f, 0xfe, 0xcc, 0x6f, 0x9c, 0xa4, 0x7f, 0x3b, 0xa2, 0xd0, 0x85, 0x0c, 0x1d, 0x46, 0xdf, 0x26,
	0x80, 0xc7, 0x5e, 0xa2, 0xbc, 0xa2, 0xc0, 0x2c, 0x8d, 0x44, 0x91, 0x3e, 0xed, 0xee, 0x59, 0x14,
	0xf4, 0x69, 0x8a, 0xdc, 0xa7, 0x89, 0x5f, 0x0d, 0x29, 0x2b, 0x0a, 0xed, 0xae, 0x24, 0x25, 0x06,
	0x42, 0x8d, 0x10, 0x60, 0x74, 0x9f, 0x6b, 0x70, 0xb9, 0x56, 0xa9, 0x27, 0x74, 0x57, 0xa7, 0x5b,
	0x1c, 0xee, 0xae, 0xbe, 0x12, 0xbf, 0xd0, 0x60, 0x08, 0xfd, 0x67, 0x05, 0xe6, 0x6b, 0x71, 0x5f,
	0xfd, 0x9e, 0xa9, 0xe4, 0x1c, 0x14, 0xb7, 0xda, 0xba, 0xe4, 0x99, 0x39, 0x28, 0x6e, 0x92, 0x63,
	0x5f, 0x98, 0x89, 0xb8, 0x2b, 0x2b, 0x93, 0x3d, 0x17, 0xc9, 0x6d, 0xf9, 0xb8, 0xf8, 0x38, 0x21,
	0xe7, 0x36, 0x36, 0x9f, 0xfa, 0x54, 0x9c, 0xf6, 0x83, 0x41, 0xe6, 0x15, 0x05, 0x71, 0xc7, 0x93,
	0xe5, 0x10, 0x7b, 0x5b, 0x73, 0x9c, 0x63, 0xcb, 0xd6, 0x47, 0x9b, 0x00, 0xd4, 0x76, 0xbc, 0x12,
	0x17, 0x35, 0xd1, 0xfb, 0x1c, 0xdd, 0x8f, 0x39, 0xe1, 0xc6, 0xf1, 0x23, 0x05, 0xee, 0xab, 0x55,
	0xea, 0xd8, 0xcd, 0x5c, 0x88, 0xb9, 0xb4, 0x20, 0xf6, 0x7f, 0xac, 0xf9, 0x73, 0x6e, 0xb4, 0x8f,
	0xf0, 0xc4, 0x6b, 0xfe, 0xcb, 0xdf, 0x6c, 0xa9, 0x0c, 0x97, 0x42, 0x7f, 0x4e, 0x0b, 0x41, 0xc6,
	0x90, 0xff, 0x85, 0x45, 0x7c, 0x42, 0xd1, 0x60, 0x9d, 0x9e, 0xbf, 0x64, 0x8e, 0xf7, 0x03, 0xe5,
	0x98, 0x3f, 0x10, 0x4a, 0xda, 0x92, 0x0a, 0x4b, 0x09, 0x4b, 0xd0, 0x6d, 0xd8, 0xb5, 0xe8, 0xd7,
	0x4e, 0xb1, 0x77, 0x30, 0x34, 0x7a, 0x2b, 0x05, 0x0f, 0xd4, 0x82, 0xc9, 0xc3, 0x0b, 0xa1, 0x1a,
	0x6a, 0xe1, 0xd2, 0xb2, 0xeb, 0x32, 0xde, 0x1b, 0xc3, 0xd8, 0x9e, 0x6e, 0x11, 0x66, 0xd8, 0xdb,
	0xb4, 0x00, 0x1e, 0xd6, 0x9e, 0x3f, 0x4a, 0x0b, 0x07, 0xfa, 0x40, 0xf8, 0x1f, 0x27, 0x79, 0x43,
	0x4d, 0xa7, 0x2b, 0xbc, 0x1a, 0x2c, 0xe8, 0x55, 0xfe, 0x61, 0x09, 0xf5, 0x77, 0x20, 0x09, 0x57,
	0xfe, 0x61, 0x79, 0x50, 0xf9, 0xb7, 0x4e, 0x87, 0x69, 0x30, 0xce, 0xb8, 0x83, 0x35, 0x41, 0xd3,
	0x30, 0xf7, 0xfb, 0x0e, 0x73, 0xe2, 0xc1, 0x4d, 0xc7, 0x1d, 0xdc, 0x8c, 0x1c, 0x99, 0xe2, 0xee,
	0x8d, 0x28, 0xd7, 0x9a, 0xe1, 0xcd, 0x07, 0x63, 0xd1, 0x2f, 0x59, 0x4e, 0xc5, 0xd6, 0x18, 0x01,
	0x8b, 0xcf, 0xa9, 0xc2, 0x4e, 0xe1, 0x85, 0xf5, 0xd0, 0x2d, 0x81, 0xe9, 0x70, 0x93, 0x14, 0xa9,
	0x26, 0x88, 0xfd, 0x02, 0x49, 0xfe, 0x86, 0x3d, 0x72, 0x53, 0x2b, 0x86, 0x41, 0x76, 0x09, 0xf6,
	0x78, 0x44, 0x5b, 0x06, 0xc3, 0x39, 0xb5, 0x8d, 0xc0, 0xf0, 0x2d, 0x06, 0x83, 0x57, 0xed, 0x55,
	0xbb, 0xdd, 0x81, 0xc5, 0xe9, 0xbe, 0x60, 0xa8, 0x76, 0xbb, 0x4d, 0xff, 0x9e, 0xeb, 0xf1, 0x88,
	0x2e, 0x83, 0xf1, 0xb5, 0x05, 0x8b, 0xc2, 0x1b, 0x0a, 0xb4, 0xd1, 0xfb, 0xcc, 0xf5, 0xcc, 0x1e,
	0x39, 0xd0, 0xd1, 0x27, 0x31, 0xff, 0xd4, 0x4e, 0x78, 0xd3, 0x2e, 0x0e, 0x61, 0xb0, 0xff, 0xa1,
	0x46, 0xfc, 0x86, 0x17, 0xbd, 0xb2, 0xe3, 0x1a, 0x30, 0x5c, 0xa7, 0x20, 0x7b, 0xf3, 0x76, 0xd3,
	0xd0, 0x83, 0x92, 0x20, 0xfc, 0x2e, 0xfb, 0xa5, 0x20, 0xf3, 0x79, 0x1a, 0x34, 0x1b, 0xeb, 0xa7,
	0xba, 0x55, 0x4f, 0x3c, 0xb3, 0xb3, 0x50, 0xc0, 0xd9, 0x0d, 0x3e, 0x6a, 0xad, 0xb0, 0x6f, 0x88,
	0xbd, 0xd9, 0xeb, 0x2c, 0x0a, 0x02, 0x05, 0xd9, 0x79, 0x7d, 0x55, 0x81, 0xc5, 0x18, 0x0d, 0x1a,
	0x2e, 0xe9, 0xc4, 0xaa, 0x70, 0xf3, 0x36, 0x2e, 0x96, 0xf2, 0x47, 0x8a, 0xce, 0xaa, 0x82, 0x44,
	0x66, 0xc5, 0x7f, 0xe1, 0x1e, 0x1c, 0x30, 0x56, 0x41, 0x7f, 0x47, 0x89, 0x07, 0x65, 0x30, 0x15,
	0xec, 0xc3, 0x30, 0x41, 0x23, 0x13, 0x35, 0xb0, 0x9c, 0xc5, 0x7c, 0xf0, 0x40, 0x90, 0x0f, 0xe2,
	0x60, 0xa0, 0x35, 0x92, 0x0f, 0x11, 0x2d, 0xbf, 0xd8, 0xb4, 0x43, 0x9f, 0x91, 0x95, 0x95, 0x23,
	0xb8, 0x7f, 0x3a, 0xe2, 0xb6, 0x4c, 0x5c, 0x0f, 0x94, 0x50, 0x23, 0xfd, 0x3e, 0x49, 0x8b, 0xc1,
	0xc0, 0x72, 0x8e, 0x4e, 0xdd, 0xaf, 0x60, 0xe5, 0xe8, 0x37, 0x11, 0xe9, 0xfa, 0x58, 0x3c, 0xfc,
	0xad, 0x02, 0x73, 0xb5, 0x4a, 0x7d, 0xbb, 0xe7, 0x1c, 0x78, 0xe5, 0x2b, 0xf2, 0x8b, 0xd1, 0x29,
	0x98, 0x57, 0x91, 0x74, 0x48, 0xc9, 0x39, 0x27, 0x2e, 0x78, 0xc9, 0x3a, 0x24, 0xe4, 0x25, 0x7a,
	0x36, 0xa8, 0x64, 0xfb, 0xc0, 0x32, 0x89, 0xd8, 0x5d, 0x3b, 0x6e, 0x55, 0xd7, 0x6d, 0xae, 0x7a,
	0xc0, 0x44, 0xf6, 0xce, 0xad, 0x05, 0x25, 0x49, 0xef, 0xbe, 0x4e, 0xe6, 0x27, 0x04, 0x8a, 0xa5,
	0x91, 0x62, 0x4b, 0x01, 0xc5, 0x64, 0x14, 0xd4, 0x27, 0xa2, 0x9b, 0x0c, 0x26, 0x92, 0x1e, 0x62,
	0xdb, 0x40, 0x17, 0xc6, 0x54, 0x94, 0x08, 0xfb, 0xd9, 0xff, 0xd3, 0xc7, 0xd8, 0x46, 0xde, 0xd3,
	0x86, 0x8d, 0xb2, 0x11, 0xdf, 0xc5, 0xfe, 0x66, 0x7d, 0x61, 0xf5, 0x50, 0x04, 0xab, 0xfb, 0xc2,
	0x58, 0x85, 0x74, 0x57, 0x9f, 0x8c, 0xd9, 0x66, 0x30, 0x68, 0x7d, 0x1e, 0x0a, 0xcd, 0x23, 0x7b,
	0x87, 0xec, 0xc7, 0x4d, 0xdf, 0x35, 0x8f, 0x6c, 0x81, 0x92, 0x53, 0x90, 0x6d, 0x1e, 0x79, 0xc3,
	0x77, 0x05, 0xf5, 0x41, 0xff, 0x97, 0x67, 0x8d, 0xc0, 0xfd, 0x37, 0x00, 0x00, 0xff, 0xff, 0x9b,
	0x9d, 0xdf, 0x4d, 0x18, 0x57, 0x00, 0x00,
}
